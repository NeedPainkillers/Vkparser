<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VkLibrary.Core</name>
    </assembly>
    <members>
        <member name="T:VkLibrary.Core.ApiError">
            <summary>
            API error class.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.ApiError.Code">
            <summary>
            API error code.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.ApiError.ErrorMessage">
            <summary>
            API error title.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.ApiError.CaptchaSid">
            <summary>
            Contains captcha sid when error code equals 14, 
            otherwise null.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.ApiError.CaptchaImg">
            <summary>
            Contains captcha image url when error code is
            14, otherwise null.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.ApiError.RequestParams">
            <summary>
            Additional request parameters JSON array.
            </summary>
        </member>
        <member name="T:VkLibrary.Core.ApiException">
            <summary>
            Represents API exception - exception that holds
            ApiError with Exception information.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.ApiException.#ctor(VkLibrary.Core.ApiError)">
            <summary>
            Creates a new instance of ApiException to hold ApiError.
            </summary>
            <param name="apiError">ApiError info</param>
        </member>
        <member name="M:VkLibrary.Core.ApiException.GetApiError">
            <summary>
            Returns API exception container that holds 
            relevant exception information.
            </summary>
            <returns></returns>
        </member>
        <member name="T:VkLibrary.Core.ApiItemsResponse`1">
            <summary>
            Extended collection response.
            </summary>
            <typeparam name="T">Object real type</typeparam>
        </member>
        <member name="P:VkLibrary.Core.ApiItemsResponse`1.Count">
            <summary>
            Total items count.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.ApiItemsResponse`1.Items">
            <summary>
            Collection of items.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.ApiItemsResponse`1.NextFrom">
            <summary>
            Next-from indicator. Used in some methods like Newsfeed.Get.
            </summary>
        </member>
        <member name="T:VkLibrary.Core.ApiResponse`1">
            <summary>
            Main API response object that helds all information.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.ApiResponse`1.Response">
            <summary>
            Response of a given type.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.ApiResponse`1.Error">
            <summary>
            Error got from API. Is NULL when everything is OK.
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Auth.AccessToken">
            <summary>
            Access token.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Auth.AccessToken.Token">
            <summary>
            Access token itself.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Auth.AccessToken.ExpiresIn">
            <summary>
            Expires in UnixTimeStamp.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Auth.AccessToken.UserId">
            <summary>
            User ID that owns this token.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Auth.AccessToken.ExpiresInDateTime">
            <summary>
            Expires in DateTime.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Auth.AccessToken.HasExpired">
            <summary>
            Has access token expired?
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Auth.AccessToken.FromString(System.String,System.Int32)">
            <summary>
            Creates token from a string.
            </summary>
            <param name="token">Token as string.</param>
            <param name="userId">User id.</param>
        </member>
        <member name="T:VkLibrary.Core.Auth.DirectAuth">
            <summary>
            Direct auth helpers.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Auth.DirectAuth.Login(System.String,System.String,VkLibrary.Core.Auth.ScopeSettings)">
            <summary>
            Performs login via VK for official applications and then
            stores access token inside current library instance.
            </summary>
            <param name="login">Login</param>
            <param name="password">Password</param>
            <param name="scope">Access acope</param>
            <returns>AccessToken</returns>
        </member>
        <member name="T:VkLibrary.Core.Auth.ScopeSettings">
            <summary>
            VKontakte access scope settings.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.Auth.ScopeSettings.CanNotify">
            <summary>
            App can notify user.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.Auth.ScopeSettings.CanAccessFriends">
            <summary>
            App can access friends.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.Auth.ScopeSettings.CanAccessPhotos">
            <summary>
            App can acccess photos.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.Auth.ScopeSettings.CanAccessAudios">
            <summary>
            App can access audios.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.Auth.ScopeSettings.CanAccessVideos">
            <summary>
            App can access videos.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.Auth.ScopeSettings.CanAccessWiki">
            <summary>
            App can access wikis.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.Auth.ScopeSettings.CanAddAppLinkToUserMenu">
            <summary>
            App can manage left-menu links.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.Auth.ScopeSettings.CanAccessStatus">
            <summary>
            App can modify status.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.Auth.ScopeSettings.CanAccessNotes">
            <summary>
            App can modify notes.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.Auth.ScopeSettings.CanAccessMessages">
            <summary>
            App has access to messages.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.Auth.ScopeSettings.CanAccessWall">
            <summary>
            App can access wall.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.Auth.ScopeSettings.CanAccessAdsCabinet">
            <summary>
            App can access cabinet/ads.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.Auth.ScopeSettings.CanAccessDocs">
            <summary>
            App can access docs.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.Auth.ScopeSettings.CanAccessGroups">
            <summary>
            App can access docs.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.Auth.ScopeSettings.IamTheGod">
            <summary>
            Root permissions.
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Auth.AuthDisplayType">
            <summary>
            Authorization block display type.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.Auth.AuthDisplayType.Page">
            <summary>
            Desktop browser page.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.Auth.AuthDisplayType.Popup">
            <summary>
            Popup view.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.Auth.AuthDisplayType.Mobile">
            <summary>
            Mobile view. (Preffered for modile devices)
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Auth.OAuth">
            <summary>
            OAuth helpers.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Auth.OAuth.GetAuthUrl(VkLibrary.Core.Auth.ScopeSettings,VkLibrary.Core.Auth.AuthDisplayType)">
            <summary>
            Returns OAuth url based on provided and const parameters.
            </summary>
            <param name="scope">Scope to grant access permissions.</param>
            <param name="display">How authorization block should be displayed in browser?</param>
            <returns></returns>
        </member>
        <member name="M:VkLibrary.Core.Auth.OAuth.ParseResponseUrl(System.Uri)">
            <summary>
            Extracts token or other data from url after vk redirection.
            </summary>
            <returns>OAuthResult holding token and errors.</returns>
        </member>
        <member name="T:VkLibrary.Core.Auth.OAuthResult">
            <summary>
            A class representing parsed VKCOM url containing token.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Auth.OAuthResult.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Inits OAuthResult from parsed string Uri.
            </summary>
            <param name="response">Uri to parse.</param>
        </member>
        <member name="P:VkLibrary.Core.Auth.OAuthResult.Error">
            <summary>
            Error.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Auth.OAuthResult.ErrorReason">
            <summary>
            Error reason
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Auth.OAuthResult.ErrorDescription">
            <summary>
            Error description.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Auth.OAuthResult.AccessToken">
            <summary>
            Access token.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Auth.OAuthResult.IsSuccess">
            <summary>
            Have we managed to get access token?
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Auth.OAuthResult.DoIfKey(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Action{System.String})">
            <summary>
            Performs action if key exists in given dictionary.
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Converters.InvalidTypeJsonConverter">
            <summary>
            JSON converter used to ignore strange VK API behaviour
            (returning arrays instead of objects, etc.)
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Extensions">
            <summary>
            Extension methods.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Extensions.ToApiString(System.Object)">
            <summary>
            Converts objects to API strings based on Vkontakte API syntax rules. 
            For example: true -> 1; false -> 0; string -> string; 
            seq of strings -> string1, string2, ...stringN.
            </summary>
            <param name="variable">Object to convert</param>
            <returns>Stringified value</returns>
        </member>
        <member name="T:VkLibrary.Core.LongPolling.AnswerFlags">
            <summary>
            Additional answer options codes list. 
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.AnswerFlags.ReceiveAttachments">
            <summary>
            Receive attachments.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.AnswerFlags.ReceiveExpandedSetOfEvents">
            <summary>
            Receive expanded set of events.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.AnswerFlags.ReceivePts">
            <summary>
            Return pts (it's required for the messages.getLongPollHistory 
            method operation without a limit of the most recent 256 events).
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.AnswerFlags.ReceiveExtraData">
            <summary>
            For the event with code 8 (a friend is online) extra data is returned 
            in the field $extra (learn more in the Event Structure section).
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.AnswerFlags.ReceiveRandomId">
            <summary>
            Return the parameter random_id with a message (random_id can be 
            transferred while sending messages using the messages.send method).
            </summary>
        </member>
        <member name="T:VkLibrary.Core.LongPolling.DialogFlags">
            <summary>
            Each dialog has flags, which are values received by summing up 
            any of the following parameters. Flags are set only for community dialogs.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.DialogFlags.Important">
            <summary>
            Important dialog.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.DialogFlags.Answered">
            <summary>
            Dialog with a community reply.
            </summary>
        </member>
        <member name="T:VkLibrary.Core.LongPolling.LongPollClient">
            <summary>
            Represents long poll client.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.LongPolling.LongPollClient.#ctor(VkLibrary.Core.Vkontakte)">
            <summary>Inits a LongPollClient using extended settings.</summary>
            <param name="vkontakte">Library instance whose logger to use</param>
        </member>
        <member name="M:VkLibrary.Core.LongPolling.LongPollClient.GetRequestUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,VkLibrary.Core.LongPolling.AnswerFlags)">
            <summary>Builds LongPollServer url.</summary>
            <param name="key">Secret session key.</param>
            <param name="server">Server address to which you need to send the request</param>
            <param name="ts">Number of the last event from which you want to receive data</param>
            <param name="mode">Additional answer options.</param>
            <param name="version">
            Actual version: 1. For version 0 (default), community IDs will arrive in the format 
            group_id + 1000000000 for saving backward compatibility. 
            We recommend using the updated version.
            </param>
            <param name="wait">
            Waiting period (as most proxy servers terminate the connection after 30 seconds, 
            we recommend indicating wait = 25). Maximum: 90. 
            </param>
            <returns>Built request url that can be used to retrieve data from vk long poll servers.</returns>
            ReSharper disable once MemberCanBePrivate.Global
        </member>
        <member name="M:VkLibrary.Core.LongPolling.LongPollClient.StartListener(System.String,System.String,System.Int32,System.Int32,System.Int32,VkLibrary.Core.LongPolling.AnswerFlags)">
            <summary>
            Starts a long poll listener.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.LongPolling.LongPollClient.OnLongPollMessageReceived(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Should be invoked when updates are received by long poll client.
            </summary>
            <param name="args">JToken args received.</param>
        </member>
        <member name="E:VkLibrary.Core.LongPolling.LongPollClient.ResponseReceived">
            <summary>
            Invoked when VK's LongPoll server answers a query (each 25 seconds by default). 
            Arguments contain JSON array with updates codes.
            </summary>
        </member>
        <member name="E:VkLibrary.Core.LongPolling.LongPollClient.ReplaceMessageFlagsEvent">
            <summary>
            ReplaceMessageFlags LongPoll event. 
            Item1 is MessageId, Item2 is Flags, Item3 is JToken that may contain additional fields.
            </summary>
        </member>
        <member name="E:VkLibrary.Core.LongPolling.LongPollClient.InstallMessageFlagsEvent">
            <summary>
            InstallMessageFlags LongPoll event.
            Item1 is MessageId, Item2 is Flags, Item3 is JToken that may contain additional fields.
            </summary>
        </member>
        <member name="E:VkLibrary.Core.LongPolling.LongPollClient.ResetMessageFlagsEvent">
            <summary>
            ResetMessageFlags LongPoll event.
            Item1 is MessageId, Item2 is Flags, Item3 is JToken that may contain additional fields.
            </summary>
        </member>
        <member name="E:VkLibrary.Core.LongPolling.LongPollClient.AddMessageEvent">
            <summary>
            AddMessage LongPoll event. 
            Item1 is MessageId, Item2 is Flags, Item3 is JToken that may contain additional fields.
            </summary>
        </member>
        <member name="E:VkLibrary.Core.LongPolling.LongPollClient.ReadAllIncomingMessagesEvent">
            <summary>
            ReadAllIncomingMessages LongPoll event.
            Item1 is PeerId, Item2 is LocalId.
            </summary>
        </member>
        <member name="E:VkLibrary.Core.LongPolling.LongPollClient.ReadAllOutgoingMessagesEvent">
            <summary>
            ReadAllOutgoingMessages LongPoll event.
            Item1 is PeerId, Item2 is LocalId.
            </summary>
        </member>
        <member name="E:VkLibrary.Core.LongPolling.LongPollClient.FriendOnlineEvent">
            <summary>
            FriendOnline LongPoll event.
            Item1 is -UserId, Item2 is Extra.
            </summary>
        </member>
        <member name="E:VkLibrary.Core.LongPolling.LongPollClient.FriendOfflineEvent">
            <summary>
            FriendOffline LongPoll event.
            Item1 is -UserId, Item2 is Flags.
            </summary>
        </member>
        <member name="E:VkLibrary.Core.LongPolling.LongPollClient.ResetDialogFlagsEvent">
            <summary>
            ResetDialogFlags LongPoll event.
            Item1 is PeerId, Item2 is Mask.
            </summary>
        </member>
        <member name="E:VkLibrary.Core.LongPolling.LongPollClient.ReplaceDialogFlagsEvent">
            <summary>
            ReplaceDialogFlags LongPoll event.
            Item1 is PeerId, Item2 is Flags.
            </summary>
        </member>
        <member name="E:VkLibrary.Core.LongPolling.LongPollClient.InstallDialogFlagsEvent">
            <summary>
            InstallDialogFlags LongPoll event.
            Item1 is PeerId, Item2 is Mask.
            </summary>
        </member>
        <member name="E:VkLibrary.Core.LongPolling.LongPollClient.ConversationChangedEvent">
            <summary>
            ConversationChanged LongPoll event.
            Item1 is ChatId, Item2 is Self.
            </summary>
        </member>
        <member name="E:VkLibrary.Core.LongPolling.LongPollClient.UserTypingInDialogEvent">
            <summary>
            UserTypingInDialog LongPoll event.
            Item1 is UserId, Item2 is Flags.
            </summary>
        </member>
        <member name="E:VkLibrary.Core.LongPolling.LongPollClient.UserTypingInConversationEvent">
            <summary>
            UserTypingInDialog LongPoll event.
            Item1 is UserId, Item2 is ChatId.
            </summary>
        </member>
        <member name="E:VkLibrary.Core.LongPolling.LongPollClient.UserCallEvent">
            <summary>
            UserCall LongPoll event.
            Item1 is UserId, Item2 is CallId.
            </summary>
        </member>
        <member name="E:VkLibrary.Core.LongPolling.LongPollClient.CounterUpdateEvent">
            <summary>
            CounterUpdate LongPoll event.
            ItemId is Count, Item2 is Zero.
            </summary>
        </member>
        <member name="E:VkLibrary.Core.LongPolling.LongPollClient.NotificationSettingsChangedEvent">
            <summary>
            NotificationSettingsChanged LongPoll event.
            Item1 is PeerId, Item2 is Sound, Item3 is DisabledUntil.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.LongPolling.LongPollClient.OnLongPollFailureReceived(System.Int32)">
            <summary>
            Should be invoked when a new failure is received by long poll client.
            </summary>
            <param name="args">JToken args received.</param>
        </member>
        <member name="E:VkLibrary.Core.LongPolling.LongPollClient.LongPollFailureReceived">
            <summary>
            Invoked when new long poll failure is received.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.LongPolling.LongPollClient.Log(System.Object)">
            <summary>
            Logs to debug using internal logger.
            </summary>
            <param name="o">Object to stringify and log</param>
        </member>
        <member name="M:VkLibrary.Core.LongPolling.LongPollClient.Stop">
            <summary>
            Stops and disposes this long poll client.
            </summary>
        </member>
        <member name="T:VkLibrary.Core.LongPolling.LongPollMessageCodes">
            <summary>
            Each element of the updates array represents its own an array
            that contains the event code in the first element and some
            set of fields with additional information depending
            on the type of event. 
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.LongPollMessageCodes.ReplaceMessageFlags">
            <summary>
            Replace message flags (FLAGS:=$flags). 
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.LongPollMessageCodes.InstallMessageFlags">
            <summary>
            Install message flags (FLAGS|=$mask). 
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.LongPollMessageCodes.ResetMessageFlags">
            <summary>
            Reset message flags (FLAGS&amp;=~$mask). 
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.LongPollMessageCodes.AddMessage">
            <summary>
            Add a new message.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.LongPollMessageCodes.ReadAllIncomingMessages">
            <summary>
            Read all incoming messages with $peer_id up to and including $local_id.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.LongPollMessageCodes.ReadAllOutgoingMessages">
            <summary>
            Read all outgoing messages with $peer_id up to and including $local_id.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.LongPollMessageCodes.FriendOnline">
            <summary>
            A friend $user_id is online. $extra is not 0, if flag 64 was passed in mode. 
            The low byte (remaining from the division into 256) of an extra number 
            contains the platform ID (ref. 7. Platforms). 
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.LongPollMessageCodes.FriendOffline">
            <summary>
            A friend $user_id is offline ($flags is 0, if the user left the website
            (for example, by pressing Log Out) and 1, if offline is due to 
            timing out (for example, the away status)). 
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.LongPollMessageCodes.ResetDialogFlags">
            <summary>
            Reset dialog flags $peer_id. Corresponds to the operation 
            (PEER_FLAGS &amp;= ~$flags). An event is returned only for 
            community messages. 
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.LongPollMessageCodes.ReplaceDialogFlags">
            <summary>
            Replace dialog flags $peer_id. Corresponds to the operation 
            (PEER_FLAGS:= $flags). An event is returned only for
            community messages. 
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.LongPollMessageCodes.InstallDialogFlags">
            <summary>
            Install dialog flags $peer_id. Corresponds to the operation 
            (PEER_FLAGS|= $flags). An event is returned only for 
            community messages. 
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.LongPollMessageCodes.ConversationChanged">
            <summary>
            One of the parameters (content, topic) of the conversation 
            $chat_id was changed. $self — 1 or 0 (whether the change 
            was caused by the user). 
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.LongPollMessageCodes.UserTypingInDialog">
            <summary>
            User $user_id began typing in the dialog. The event 
            should happen once in ~5 seconds during continuous
             typing. $flags = 1. 
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.LongPollMessageCodes.UserTypingInConversation">
            <summary>
            User $user_id began typing in the conversation $chat_id. 
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.LongPollMessageCodes.UserCall">
            <summary>
            User $user_id completed a call with the ID $call_id. 
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.LongPollMessageCodes.CounterUpdate">
            <summary>
            New unread messages counter in the left menu equals $count.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.LongPollMessageCodes.NotificationSettingsChanged">
            <summary>
            Notification settings changed where $peer_id is a chat/user’s ID, 
            $sound is either 1 (sound notifications on) or 0 (sound notifications off), 
            $disabled_until shows notifications disabled for a certain period 
            (-1: forever, 0: enabled, other: timestamp for when it should be switched on). 
            </summary>
        </member>
        <member name="T:VkLibrary.Core.LongPolling.MessageFlags">
            <summary>
            Each message has a flag, which is a value received 
            by summing up any of the following parameters. 
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.MessageFlags.Unread">
            <summary>
            Message is unread.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.MessageFlags.Outbox">
            <summary>
            Message is outgoing.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.MessageFlags.Replied">
            <summary>
            Message was answered.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.MessageFlags.Important">
            <summary>
            Message is marked as important.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.MessageFlags.Chat">
            <summary>
            Message sent via chat.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.MessageFlags.Friends">
            <summary>
            Message sent by a friend.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.MessageFlags.Spam">
            <summary>
            Message marked as "Spam".
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.MessageFlags.Deleted">
            <summary>
            Message was deleted.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.MessageFlags.Fixed">
            <summary>
            Message was user-checked for spam.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.MessageFlags.Media">
            <summary>
            Message has media content.
            </summary>
        </member>
        <member name="T:VkLibrary.Core.LongPolling.PlatformFlags">
            <summary>
            If mode contains flag 64, then in messages with code 8 (friend is offline), 
            extra data $extra will return in the third field. From this you can get 
            the platform ID $platform_id = $extra &amp; 0xFF ( = $extra % 256), 
            from which the user got online. 
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.PlatformFlags.Mobile">
            <summary>
            Mobile website version or unidentified mobile app.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.PlatformFlags.iPhone">
            <summary>
            Official app for iPhone.
            </summary>
            ReSharper disable once InconsistentNaming
        </member>
        <member name="F:VkLibrary.Core.LongPolling.PlatformFlags.iPad">
            <summary>
            Official app for iPad.
            </summary>
            ReSharper disable once InconsistentNaming
        </member>
        <member name="F:VkLibrary.Core.LongPolling.PlatformFlags.Android">
            <summary>
            Official app for Android.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.PlatformFlags.wPhone">
            <summary>   
            Official app for Windows Phone.
            </summary>
            ReSharper disable once InconsistentNaming
        </member>
        <member name="F:VkLibrary.Core.LongPolling.PlatformFlags.Windows">
            <summary>
            Official app for Windows 8.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.LongPolling.PlatformFlags.Web">
            <summary>
            Full website version or unidentified apps.
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Methods.Account">
            <summary>
            Account API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Account.GetCounters(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns non-null values of user counters.
            Docs: <see href="https://vk.com/dev/account.getCounters">account.getCounters</see>
            </summary>
            <param name="filter">Counters to be returned (friends, messages, photos, videos, notes, gifts, events, groups, sdk).</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Account.SetNameInMenu(System.Nullable{System.Int32},System.String)">
            <summary>
            Sets an application screen name (up to 17 characters), that is shown to the user in the left menu.
            Docs: <see href="https://vk.com/dev/account.setNameInMenu">account.setNameInMenu</see>
            </summary>
            <param name="userId">User ID.</param>
            <param name="name">Application screen name.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Account.SetOnline(System.Nullable{System.Boolean})">
            <summary>
            Marks the current user as online for 15 minutes.
            Docs: <see href="https://vk.com/dev/account.setOnline">account.setOnline</see>
            </summary>
            <param name="voip">'1' if videocalls are available for current device.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Account.SetOffline">
            <summary>
            Marks a current user as offline.
            Docs: <see href="https://vk.com/dev/account.setOffline">account.setOffline</see>
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Account.LookupContacts(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Allows to search the VK users using phone numbers, e-mail addresses and user IDs on other services.
            Docs: <see href="https://vk.com/dev/account.lookupContacts">account.lookupContacts</see>
            </summary>
            <param name="contacts">List of contacts separated with commas</param>
            <param name="service">
            String identifier of a service which contacts are used for searching. Possible values: ; * email;
            * phone; * twitter; * facebook; * odnoklassniki; * instagram; * google
            </param>
            <param name="mycontact">Contact of a current user on a specified service</param>
            <param name="returnAll">
            '1' – also return contacts found using this service before, '0' – return only contacts found
            using 'contacts' field.
            </param>
            <param name="fields">
            Profile fields to return. Possible values: 'nickname, domain, sex, bdate, city, country, timezone,
            photo_50, photo_100, photo_200_orig, has_mobile, contacts, education, online, relation, last_seen, status,
            can_write_private_message, can_see_all_posts, can_post, universities'.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Account.RegisterDevice(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Subscribes an iOS/Android/Windows Phone-based device to receive push notifications
            Docs: <see href="https://vk.com/dev/account.registerDevice">account.registerDevice</see>
            </summary>
            <param name="token">
            Device token used to send notifications. (for mpns, the token shall be URL for sending of
            notifications)
            </param>
            <param name="deviceModel">String name of device model.</param>
            <param name="deviceYear">Device year.</param>
            <param name="deviceId">Unique device ID.</param>
            <param name="systemVersion">String version of device operating system.</param>
            <param name="settings">Push settings in a special format.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Account.UnregisterDevice(System.String)">
            <summary>
            Unsubscribes a device from push notifications.
            Docs: <see href="https://vk.com/dev/account.unregisterDevice">account.unregisterDevice</see>
            </summary>
            <param name="deviceId">Unique device ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Account.SetSilenceMode(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Mutes push notifications for the set period of time.
            Docs: <see href="https://vk.com/dev/account.setSilenceMode">account.setSilenceMode</see>
            </summary>
            <param name="deviceId">Unique device ID.</param>
            <param name="time">Time in seconds for what notifications should be disabled. '-1' to disable forever.</param>
            <param name="peerId">
            Destination ID.; "For user:; 'User ID', e.g. '12345'.; ; For chat:; '2000000000' + 'Chat ID',
            e.g. '2000000001'.; ; For community:; '- Community ID', e.g. '-12345'.; "
            </param>
            <param name="sound">
            '1' — to enable sound in this dialog, '0' — to disable sound. Only if 'peer_id' contains user or
            community ID.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Account.GetPushSettings(System.String)">
            <summary>
            Gets settings of push notifications.
            Docs: <see href="https://vk.com/dev/account.getPushSettings">account.getPushSettings</see>
            </summary>
            <param name="deviceId">Unique device ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Account.SetPushSettings(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Change push settings.
            Docs: <see href="https://vk.com/dev/account.setPushSettings">account.setPushSettings</see>
            </summary>
            <param name="deviceId">Unique device ID.</param>
            <param name="settings">Push settings in a special format.</param>
            <param name="key">Notification key.</param>
            <param name="value">New value for the key in a special format.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Account.GetAppPermissions(System.Nullable{System.Int32})">
            <summary>
            Gets settings of the user in this application.
            Docs: <see href="https://vk.com/dev/account.getAppPermissions">account.getAppPermissions</see>
            </summary>
            <param name="userId">User ID whose settings information shall be got. By default: current user.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Account.GetActiveOffers(System.Nullable{System.Int32})">
            <summary>
            Returns a list of active ads (offers) which executed by the user will bring him/her respective number of votes to
            his balance in the application.
            Docs: <see href="https://vk.com/dev/account.getActiveOffers">account.getActiveOffers</see>
            </summary>
            <param name="count">Number of results to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Account.BanUser(System.Nullable{System.Int32})">
            <summary>
            Adds user to the banlist.
            Docs: <see href="https://vk.com/dev/account.banUser">account.banUser</see>
            </summary>
            <param name="userId">User ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Account.UnbanUser(System.Nullable{System.Int32})">
            <summary>
            Deletes user from the blacklist.
            Docs: <see href="https://vk.com/dev/account.unbanUser">account.unbanUser</see>
            </summary>
            <param name="userId">User ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Account.GetBanned(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a user's blacklist.
            Docs: <see href="https://vk.com/dev/account.getBanned">account.getBanned</see>
            </summary>
            <param name="offset">Offset needed to return a specific subset of results.</param>
            <param name="count">Number of results to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Account.GetInfo(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns current account info.
            Docs: <see href="https://vk.com/dev/account.getInfo">account.getInfo</see>
            </summary>
            <param name="fields">
            Fields to return. Possible values:; *'country' — user country;; *'https_required' — is "HTTPS
            only" option enabled;; *'own_posts_default' — is "Show my posts only" option is enabled;; *'no_wall_replies' — are
            wall replies disabled or not;; *'intro' — is intro passed by user or not;; *'lang' — user language.; ; By default:
            all.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Account.SetInfo(System.String,System.String)">
            <summary>
            Allows to edit the current account info.
            Docs: <see href="https://vk.com/dev/account.setInfo">account.setInfo</see>
            </summary>
            <param name="name">Setting name.</param>
            <param name="value">Setting value.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Account.ChangePassword(System.String,System.String,System.String,System.String)">
            <summary>
            Changes a user password after access is successfully restored with the auth.restore
            method.
            Docs: <see href="https://vk.com/dev/account.changePassword">account.changePassword</see>
            </summary>
            <param name="restoreSid">
            Session id received after the auth.restore method is executed.; (If
            the password is changed right after the access was restored)
            </param>
            <param name="changePasswordHash">
            Hash received after a successful OAuth authorization with a code got by SMS.; (If
            the password is changed right after the access was restored)
            </param>
            <param name="oldPassword">Current user password.</param>
            <param name="newPassword">New password that will be set as a current</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Account.GetProfileInfo">
            <summary>
            Returns the current account info.
            Docs: <see href="https://vk.com/dev/account.getProfileInfo">account.getProfileInfo</see>
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Account.SaveProfileInfo(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Edits current profile info.
            Docs: <see href="https://vk.com/dev/account.saveProfileInfo">account.saveProfileInfo</see>
            </summary>
            <param name="firstName">User first name.</param>
            <param name="lastName">User last name.</param>
            <param name="maidenName">User maiden name (female only)</param>
            <param name="screenName">User screen name.</param>
            <param name="cancelRequestId">
            ID of the name change request to be canceled. If this parameter is sent, all the others
            are ignored.
            </param>
            <param name="sex">User sex. Possible values: ; * '1' – female;; * '2' – male.</param>
            <param name="relation">
            User relationship status. Possible values: ; * '1' – single;; * '2' – in a relationship;; * '3'
            – engaged;; * '4' – married;; * '5' – it's complicated;; * '6' – actively searching;; * '7' – in love;; * '0' – not
            specified.
            </param>
            <param name="relationPartnerId">ID of the relationship partner.</param>
            <param name="bdate">User birth date, format: DD.MM.YYYY.</param>
            <param name="bdateVisibility">
            Birth date visibility. Returned values: ; * '1' – show birth date;; * '2' – show only
            month and day;; * '0' – hide birth date.
            </param>
            <param name="homeTown">User home town.</param>
            <param name="countryId">User country.</param>
            <param name="cityId">User city.</param>
            <param name="status">Status text.</param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Ads">
            <summary>
            Ads API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.GetAccounts">
            <summary>
            Returns a list of advertising accounts.
            Docs: <see href="https://vk.com/dev/ads.getAccounts">ads.getAccounts</see>
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.GetClients(System.Nullable{System.Int32})">
            <summary>
            Returns a list of advertising agency's clients.
            Docs: <see href="https://vk.com/dev/ads.getClients">ads.getClients</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.CreateClients(System.Nullable{System.Int32},System.String)">
            <summary>
            Creates clients of an advertising agency.
            Docs: <see href="https://vk.com/dev/ads.createClients">ads.createClients</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="data">
            Serialized JSON array of objects that describe created campaigns. Description of
            'client_specification' objects see below.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.UpdateClients(System.Nullable{System.Int32},System.String)">
            <summary>
            Edits clients of an advertising agency.
            Docs: <see href="https://vk.com/dev/ads.updateClients">ads.updateClients</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="data">
            Serialized JSON array of objects that describe changes in clients. Description of 'client_mod'
            objects see below.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.DeleteClients(System.Nullable{System.Int32},System.String)">
            <summary>
            Archives clients of an advertising agency.
            Docs: <see href="https://vk.com/dev/ads.deleteClients">ads.deleteClients</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="ids">Serialized JSON array with IDs of deleted clients.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.GetCampaigns(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Returns a list of campaigns in an advertising account.
            Docs: <see href="https://vk.com/dev/ads.getCampaigns">ads.getCampaigns</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="clientId">'For advertising agencies'. ID of the client advertising campaigns are retrieved from.</param>
            <param name="includeDeleted">
            Flag that specifies whether archived ads shall be shown.; *0 — show only active
            campaigns;; *1 — show all campaigns.;
            </param>
            <param name="campaignIds">
            Filter of advertising campaigns to show. ; Serialized JSON array with campaign IDs. Only
            campaigns that exist in 'campaign_ids' and belong to the specified advertising account will be shown. If the
            parameter is null, all campaigns will be shown.;
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.CreateCampaigns(System.Nullable{System.Int32},System.String)">
            <summary>
            Creates advertising campaigns.
            Docs: <see href="https://vk.com/dev/ads.createCampaigns">ads.createCampaigns</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="data">
            Serialized JSON array of objects that describe created campaigns. Description of
            'campaign_specification' objects see below.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.UpdateCampaigns(System.Nullable{System.Int32},System.String)">
            <summary>
            Edits advertising campaigns.
            Docs: <see href="https://vk.com/dev/ads.updateCampaigns">ads.updateCampaigns</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="data">
            Serialized JSON array of objects that describe changes in campaigns. Description of 'campaign_mod'
            objects see below.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.DeleteCampaigns(System.Nullable{System.Int32},System.String)">
            <summary>
            Archives advertising campaigns.
            Docs: <see href="https://vk.com/dev/ads.deleteCampaigns">ads.deleteCampaigns</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="ids">Serialized JSON array with IDs of deleted campaigns.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.GetAds(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns number of ads.
            Docs: <see href="https://vk.com/dev/ads.getAds">ads.getAds</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="clientId">'Available and required for advertising agencies.' ID of the client ads are retrieved from.</param>
            <param name="includeDeleted">
            Flag that specifies whether archived ads shall be shown:; *0 — show only active ads;; *1
            — show all ads.;
            </param>
            <param name="campaignIds">
            Filter by advertising campaigns. ; Serialized JSON array with campaign IDs. If the parameter
            is null, ads of all campaigns will be shown.;
            </param>
            <param name="adIds">
            Filter by ads. ; Serialized JSON array with ad IDs. If the parameter is null, all ads will be
            shown.;
            </param>
            <param name="limit">
            Limit of number of returned ads. Used only if ad_ids parameter is null, and 'campaign_ids'
            parameter contains ID of only one campaign.
            </param>
            <param name="offset">Offset. Used in the same cases as 'limit' parameter.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.GetAdsLayout(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns descriptions of ad layouts.
            Docs: <see href="https://vk.com/dev/ads.getAdsLayout">ads.getAdsLayout</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="clientId">'For advertising agencies.' ID of the client ads are retrieved from.</param>
            <param name="includeDeleted">
            Flag that specifies whether archived ads shall be shown.; *0 — show only active ads;; *1
            — show all ads.;
            </param>
            <param name="campaignIds">
            Filter by advertising campaigns.; Serialized JSON array with campaign IDs. If the parameter
            is null, ads of all campaigns will be shown.;
            </param>
            <param name="adIds">
            Filter by ads.; Serialized JSON array with ad IDs. If the parameter is null, all ads will be
            shown.;
            </param>
            <param name="limit">
            Limit of number of returned ads. Used only if 'ad_ids' parameter is null, and 'campaign_ids'
            parameter contains ID of only one campaign.
            </param>
            <param name="offset">Offset. Used in the same cases as 'limit' parameter.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.GetAdsTargeting(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns ad targeting parameters.
            Docs: <see href="https://vk.com/dev/ads.getAdsTargeting">ads.getAdsTargeting</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="clientId">'For advertising agencies.' ID of the client ads are retrieved from.</param>
            <param name="includeDeleted">
            flag that specifies whether archived ads shall be shown:; *0 — show only active ads;; *1
            — show all ads.
            </param>
            <param name="campaignIds">
            Filter by advertising campaigns.; Serialized JSON array with campaign IDs. If the parameter
            is null, ads of all campaigns will be shown.;
            </param>
            <param name="adIds">
            Filter by ads.; Serialized JSON array with ad IDs. If the parameter is null, all ads will be
            shown.
            </param>
            <param name="limit">
            Limit of number of returned ads. Used only if 'ad_ids' parameter is null, and 'campaign_ids'
            parameter contains ID of only one campaign.
            </param>
            <param name="offset">Offset needed to return a specific subset of results.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.CreateAds(System.Nullable{System.Int32},System.String)">
            <summary>
            Creates ads.
            Docs: <see href="https://vk.com/dev/ads.createAds">ads.createAds</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="data">
            Serialized JSON array of objects that describe created ads. Description of 'ad_specification'
            objects see below.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.UpdateAds(System.Nullable{System.Int32},System.String)">
            <summary>
            Edits ads.
            Docs: <see href="https://vk.com/dev/ads.updateAds">ads.updateAds</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="data">
            Serialized JSON array of objects that describe changes in ads. Description of
            'ad_edit_specification' objects see below.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.DeleteAds(System.Nullable{System.Int32},System.String)">
            <summary>
            Archives ads.
            Docs: <see href="https://vk.com/dev/ads.deleteAds">ads.deleteAds</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="ids">Serialized JSON array with ad IDs.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.CheckLink(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Allows to check the ad link.
            Docs: <see href="https://vk.com/dev/ads.checkLink">ads.checkLink</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="linkType">
            Object type:; *'community' — community;; *'post' — community post;; *'application' — VK
            application;; *'video' — video;; *'site' — external site.
            </param>
            <param name="linkUrl">Object URL.</param>
            <param name="campaignId">Campaign ID</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.GetStatistics(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Returns statistics of performance indicators for ads, campaigns, clients or the whole account.
            Docs: <see href="https://vk.com/dev/ads.getStatistics">ads.getStatistics</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="idsType">
            Type of requested objects listed in 'ids' parameter:; *ad — ads;; *campaign — campaigns;;
            *client — clients;; *office — account.;
            </param>
            <param name="ids">
            IDs requested ads, campaigns, clients or account, separated with a comma, depending on the value set
            in 'ids_type'. Maximum 2000 objects.
            </param>
            <param name="period">
            Data grouping by dates:; *day — statistics by days;; *month — statistics by months;; *overall —
            overall statistics.; 'date_from' and 'date_to' parameters set temporary limits.
            </param>
            <param name="dateFrom">
            Date to show statistics from. For different value of 'period' different date format is used:;
            *day: YYYY-MM-DD, example: 2011-09-27 — September 27, 2011; **0 — day it was created on;; *month: YYYY-MM, example:
            2011-09 — September 2011; **0 — month it was created in;; *overall: 0.;
            </param>
            <param name="dateTo">
            Date to show statistics to. For different value of 'period' different date format is used:; *day:
            YYYY-MM-DD, example: 2011-09-27 — September 27, 2011; **0 — current day;; *month: YYYY-MM, example: 2011-09 —
            September 2011; **0 — current month;; *overall: 0.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.GetDemographics(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Returns demographics for ads or campaigns.
            Docs: <see href="https://vk.com/dev/ads.getDemographics">ads.getDemographics</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="idsType">Type of requested objects listed in 'ids' parameter:; *ad — ads;; *campaign — campaigns.;</param>
            <param name="ids">
            IDs requested ads or campaigns, separated with a comma, depending on the value set in 'ids_type'.
            Maximum 2000 objects.
            </param>
            <param name="period">
            Data grouping by dates:; *day — statistics by days;; *month — statistics by months;; *overall —
            overall statistics.; 'date_from' and 'date_to' parameters set temporary limits.
            </param>
            <param name="dateFrom">
            Date to show statistics from. For different value of 'period' different date format is used:;
            *day: YYYY-MM-DD, example: 2011-09-27 — September 27, 2011; **0 — day it was created on;; *month: YYYY-MM, example:
            2011-09 — September 2011; **0 — month it was created in;; *overall: 0.
            </param>
            <param name="dateTo">
            Date to show statistics to. For different value of 'period' different date format is used:; *day:
            YYYY-MM-DD, example: 2011-09-27 — September 27, 2011; **0 — current day;; *month: YYYY-MM, example: 2011-09 —
            September 2011; **0 — current month;; *overall: 0.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.GetAdsPostsReach(System.Nullable{System.Int32},System.String)">
            <summary>
            Allows to get detailed information about the ad post reach.
            Docs: <see href="https://vk.com/dev/ads.getAdsPostsReach">ads.getAdsPostsReach</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="adsIds">Ads IDS separated by comma.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.GetBudget(System.Nullable{System.Int32})">
            <summary>
            Returns current budget of the advertising account.
            Docs: <see href="https://vk.com/dev/ads.getBudget">ads.getBudget</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.GetOfficeUsers(System.Nullable{System.Int32})">
            <summary>
            Returns a list of managers and supervisors of advertising account.
            Docs: <see href="https://vk.com/dev/ads.getOfficeUsers">ads.getOfficeUsers</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.AddOfficeUsers(System.Nullable{System.Int32},System.String)">
            <summary>
            Adds managers and/or supervisors to advertising account.
            Docs: <see href="https://vk.com/dev/ads.addOfficeUsers">ads.addOfficeUsers</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="data">
            Serialized JSON array of objects that describe added managers. Description of 'user_specification'
            objects see below.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.RemoveOfficeUsers(System.Nullable{System.Int32},System.String)">
            <summary>
            Removes managers and/or supervisors from advertising account.
            Docs: <see href="https://vk.com/dev/ads.removeOfficeUsers">ads.removeOfficeUsers</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="ids">Serialized JSON array with IDs of deleted managers.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.GetTargetingStats(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Returns the size of targeting audience, and also recommended values for CPC and CPM.
            Docs: <see href="https://vk.com/dev/ads.getTargetingStats">ads.getTargetingStats</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="criteria">
            Serialized JSON object that describes targeting parameters. Description of 'criteria' object see
            below.
            </param>
            <param name="adId">ID of an ad which targeting parameters shall be analyzed.</param>
            <param name="adFormat">
            Ad format. Possible values:; *'1' — image and text;; *'2' — big image;; *'3' — exclusive
            format;; *'4' — community, square image;; *'7' — special app format;; *'8' — special community format;; *'9' — post
            in community;; *'10' — app board.
            </param>
            <param name="adPlatform">
            Platforms to use for ad showing. Possible values:; (for 'ad_format' = '1'); *'0' — VK and
            partner sites;; *'1' — VK only.; (for 'ad_format' = '9'); *'all' — all platforms;; *'desktop' — desktop version;;
            *'mobile' — mobile version and apps.
            </param>
            <param name="linkUrl">URL for the advertised object.</param>
            <param name="linkDomain">Domain of the advertised object.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.GetSuggestions(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Returns a set of auto-suggestions for various targeting parameters.
            Docs: <see href="https://vk.com/dev/ads.getSuggestions">ads.getSuggestions</see>
            </summary>
            <param name="section">
            Section, suggestions are retrieved in. Available values:; *countries — request of a list of
            countries. If q is not set or blank, a short list of countries is shown. Otherwise, a full list of countries is
            shown.; *regions — requested list of regions. 'country' parameter is required.; *cities — requested list of cities.
            'country' parameter is required.; *districts — requested list of districts. 'cities' parameter is required.;
            *stations — requested list of subway stations. 'cities' parameter is required.; *streets — requested list of
            streets. 'cities' parameter is required.; *schools — requested list of educational organizations. 'cities'
            parameter is required.; *interests — requested list of interests.; *positions — requested list of positions
            (professions).; *group_types — requested list of group types.; *religions — requested list of religious
            commitments.; *browsers — requested list of browsers and mobile devices.;
            </param>
            <param name="ids">
            Objects IDs separated by commas. If the parameter is passed, 'q, country, cities' should not be
            passed.
            </param>
            <param name="q">Filter-line of the request (for countries, regions, cities, streets, schools, interests, positions).</param>
            <param name="country">ID of the country objects are searched in.</param>
            <param name="cities">IDs of cities where objects are searched in, separated with a comma.</param>
            <param name="lang">
            Language of the returned string values. Supported languages:; *ru — Russian;; *ua — Ukrainian;; *en
            — English.;
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.GetCategories(System.String)">
            <summary>
            Returns a list of possible ad categories.
            Docs: <see href="https://vk.com/dev/ads.getCategories">ads.getCategories</see>
            </summary>
            <param name="lang">Language. The full list of supported languages is here.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.GetUploadUrl(System.Nullable{System.Int32})">
            <summary>
            Returns URL to upload an ad photo to.
            Docs: <see href="https://vk.com/dev/ads.getUploadURL">ads.getUploadURL</see>
            </summary>
            <param name="adFormat">
            Ad format:; *1 — image and text;; *2 — big image;; *3 — exclusive format;; *4 — community,
            square image;; *7 — special app format.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.GetVideoUploadUrl">
            <summary>
            Returns URL to upload an ad video to.
            Docs: <see href="https://vk.com/dev/ads.getVideoUploadURL">ads.getVideoUploadURL</see>
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.GetFloodStats(System.Nullable{System.Int32})">
            <summary>
            Returns information about current state of a counter — number of remaining runs of methods and time to the next
            counter nulling in seconds.
            Docs: <see href="https://vk.com/dev/ads.getFloodStats">ads.getFloodStats</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.GetRejectionReason(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a reason of ad rejection for pre-moderation.
            Docs: <see href="https://vk.com/dev/ads.getRejectionReason">ads.getRejectionReason</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="adId">Ad ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.CreateTargetGroup(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a group to re-target ads for users who visited advertiser's site (viewed information about the product,
            registered, etc.).
            Docs: <see href="https://vk.com/dev/ads.createTargetGroup">ads.createTargetGroup</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="clientId">
            'Only for advertising agencies.'; ID of the client with the advertising account where the group
            will be created.;
            </param>
            <param name="name">Name of the target group — a string up to 64 characters long.</param>
            <param name="domain">Domain of the site where user accounting code will be placed.</param>
            <param name="lifetime">
            'For groups with auditory created with pixel code only.'; ; Number of days after that users will
            be automatically removed from the group. '0' — not to remove users.;
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.UpdateTargetGroup(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Edits a retarget group.
            Docs: <see href="https://vk.com/dev/ads.updateTargetGroup">ads.updateTargetGroup</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="clientId">
            'Only for advertising agencies.' ; ID of the client with the advertising account where the
            group will be created.;
            </param>
            <param name="targetGroupId">Group ID.</param>
            <param name="name">New name of the target group — a string up to 64 characters long.</param>
            <param name="domain">Domain of the site where user accounting code will be placed.</param>
            <param name="lifetime">
            'Only for the groups that get audience from sites with user accounting code.'; Time in days when
            users added to a retarget group will be automatically excluded from it. ; '0' – automatic exclusion is off.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.DeleteTargetGroup(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes a retarget group.
            Docs: <see href="https://vk.com/dev/ads.deleteTargetGroup">ads.deleteTargetGroup</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="clientId">
            'Only for advertising agencies.' ; ID of the client with the advertising account where the
            group will be created.;
            </param>
            <param name="targetGroupId">Group ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.GetTargetGroups(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of target groups.
            Docs: <see href="https://vk.com/dev/ads.getTargetGroups">ads.getTargetGroups</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="clientId">
            'Only for advertising agencies.'; ID of the client with the advertising account where the group
            will be created.;
            </param>
            <param name="extended">'1' — to return pixel code.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Ads.ImportTargetContacts(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Imports a list of advertiser's contacts to count VK registered users against the target group.
            Docs: <see href="https://vk.com/dev/ads.importTargetContacts">ads.importTargetContacts</see>
            </summary>
            <param name="accountId">Advertising account ID.</param>
            <param name="clientId">
            'Only for advertising agencies.' ; ID of the client with the advertising account where the
            group will be created.;
            </param>
            <param name="targetGroupId">Target group ID.</param>
            <param name="contacts">List of phone numbers, emails or user IDs separated with a comma.</param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Apps">
            <summary>
            Apps API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Apps.GetScore(System.Nullable{System.Int32})">
            <summary>
            Returns user score in app
            Docs: <see href="https://vk.com/dev/apps.getScore">apps.getScore</see>
            </summary>
            <param name="userId"></param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Audio">
            <summary>
            Audio API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Audio.Get(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of audio files of a user or community.
            Docs: <see href="https://vk.com/dev/audio.get">audio.get</see>
            </summary>
            <param name="ownerId">
            ID of the user or community that owns the audio file. Use a negative value to designate a
            community ID.
            </param>
            <param name="albumId">Audio album ID.</param>
            <param name="audioIds">IDs of the audio files to return.</param>
            <param name="needUser">'1' — to return information about users who uploaded audio files</param>
            <param name="offset">Offset needed to return a specific subset of audio files.</param>
            <param name="count">Number of audio files to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Audio.GetById(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns information about audio files by their IDs.
            Docs: <see href="https://vk.com/dev/audio.getById">audio.getById</see>
            </summary>
            <param name="audios">Audio file IDs, in the following format:; "{owner_id}_{audio_id}"</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Audio.GetLyrics(System.Nullable{System.Int32})">
            <summary>
            Returns lyrics associated with an audio file.
            Docs: <see href="https://vk.com/dev/audio.getLyrics">audio.getLyrics</see>
            </summary>
            <param name="lyricsId">
            Lyrics ID (could be obtained with audio.get, audio.search methods).
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Audio.Search(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of audio matching the search criteria.
            Docs: <see href="https://vk.com/dev/audio.search">audio.search</see>
            </summary>
            <param name="q">Search query string (e.g., 'The Beatles').</param>
            <param name="autoComplete">
            '1' — to correct for mistakes in the search query (e.g., if you enter 'Beetles', the system
            will search for 'Beatles').
            </param>
            <param name="lyrics">'1' — to return only audio files that have associated lyrics.</param>
            <param name="performerOnly">'1' — to search only by artist name.</param>
            <param name="sort">Sort order: '1' — by duration;; '2' — by popularity;; '0' — by date added.</param>
            <param name="searchOwn">'1' — to search among current user's audios. By default: '0'.</param>
            <param name="offset">Offset needed to return a specific subset of audio files.</param>
            <param name="count">Number of audio files to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Audio.GetUploadServer">
            <summary>
            Returns the server address to upload audio files.
            Docs: <see href="https://vk.com/dev/audio.getUploadServer">audio.getUploadServer</see>
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Audio.Save(System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>
            Saves audio files after successful uploading.
            Docs: <see href="https://vk.com/dev/audio.save">audio.save</see>
            </summary>
            <param name="server">This parameter is returned when the audio file is uploaded to the server.</param>
            <param name="audio">This parameter is returned when the audio file is uploaded to the server.</param>
            <param name="hash">This parameter is returned when the audio file is uploaded to the server.</param>
            <param name="artist">The name of the artist. By default, this is obtained from ID3 tags.</param>
            <param name="title">The title of the audio file. By default, this is obtained from ID3 tags.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Audio.Add(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Copies an audio file to a user page or community page.
            Docs: <see href="https://vk.com/dev/audio.add">audio.add</see>
            </summary>
            <param name="audioId">Audio file ID.</param>
            <param name="ownerId">
            ID of the user or community that owns the audio file. Use a negative value to designate a
            community ID.
            </param>
            <param name="groupId">Community ID, needed when adding the audio file to a community (without minus).</param>
            <param name="albumId">Album ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Audio.Delete(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes an audio file from a user page or community page.
            Docs: <see href="https://vk.com/dev/audio.delete">audio.delete</see>
            </summary>
            <param name="audioId">Audio file ID.</param>
            <param name="ownerId">
            ID of the user or community that owns the audio file. Use a negative value to designate a
            community ID.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Audio.Edit(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Edits an audio file on a user or community page.
            Docs: <see href="https://vk.com/dev/audio.edit">audio.edit</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the audio file.</param>
            <param name="audioId">Audio file ID.</param>
            <param name="artist">Name of the artist.</param>
            <param name="title">Title of the audio file.</param>
            <param name="text">Text of the lyrics of the audio file.</param>
            <param name="genreId">Genre of the audio file. See the list of audio genres.</param>
            <param name="noSearch">
            '1' — audio file will not be available for search; '0' — audio file will be available for
            search (default)
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Audio.Reorder(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Reorders an audio file, placing it between other specified audio files.
            Docs: <see href="https://vk.com/dev/audio.reorder">audio.reorder</see>
            </summary>
            <param name="audioId">Audio file ID.</param>
            <param name="ownerId">ID of the user or community that owns the audio file.</param>
            <param name="before">ID of the audio file before which to place the audio file.</param>
            <param name="after">ID of the audio file after which to place the audio file.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Audio.Restore(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Restores a deleted audio file.
            Docs: <see href="https://vk.com/dev/audio.restore">audio.restore</see>
            </summary>
            <param name="audioId">Audio file ID.</param>
            <param name="ownerId">ID of the user or community that owns the audio file.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Audio.GetAlbums(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of audio albums of a user or community.
            Docs: <see href="https://vk.com/dev/audio.getAlbums">audio.getAlbums</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the audio file.</param>
            <param name="offset">Offset needed to return a specific subset of albums.</param>
            <param name="count">Number of albums to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Audio.AddAlbum(System.Nullable{System.Int32},System.String)">
            <summary>
            Creates an empty audio album.
            Docs: <see href="https://vk.com/dev/audio.addAlbum">audio.addAlbum</see>
            </summary>
            <param name="groupId">Community ID (if the album will be created in a community).</param>
            <param name="title">Album title.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Audio.EditAlbum(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Edits the title of an audio album.
            Docs: <see href="https://vk.com/dev/audio.editAlbum">audio.editAlbum</see>
            </summary>
            <param name="groupId">ID of the community where the album is located.;</param>
            <param name="albumId">Album ID.</param>
            <param name="title">New album title.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Audio.DeleteAlbum(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes an audio album.
            Docs: <see href="https://vk.com/dev/audio.deleteAlbum">audio.deleteAlbum</see>
            </summary>
            <param name="groupId">ID of the community where the album is located.;</param>
            <param name="albumId">Album ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Audio.MoveToAlbum(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Moves audio files to an album.
            Docs: <see href="https://vk.com/dev/audio.moveToAlbum">audio.moveToAlbum</see>
            </summary>
            <param name="groupId">ID of the community where the audio files are located. By default, current user ID.;</param>
            <param name="albumId">ID of the album to which the audio files will be moved.</param>
            <param name="audioIds">IDs of the audio files to be moved.; "NOTE: An album can hold up to 1000 audio files.";</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Audio.SetBroadcast(System.String,System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Activates an audio broadcast to the status of a user or community.
            Docs: <see href="https://vk.com/dev/audio.setBroadcast">audio.setBroadcast</see>
            </summary>
            <param name="audio">
            ID of the audio file to be shown in status (e.g., '1_190442705'). If the parameter is not set, the
            audio status of given communities and user will be deleted.
            </param>
            <param name="targetIds">
            IDs of communities and user whose statuses will be included in the broadcast. Use a negative
            value to designate a community ID. By default, current user ID.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Audio.GetBroadcastList(System.String,System.Nullable{System.Boolean})">
            <summary>
            Returns a list of the user's friends and communities that are broadcasting music in their statuses.
            Docs: <see href="https://vk.com/dev/audio.getBroadcastList">audio.getBroadcastList</see>
            </summary>
            <param name="filter">
            Types of objects to return:; 'friends' — only friends; 'groups' — only communities; 'all' — both
            friends and communities (default)
            </param>
            <param name="active">
            '1' — to return only friends and communities that are broadcasting at the moment.; '0' — to return
            all friends and communities (default).
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Audio.GetRecommendations(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of suggested audio files based on a user's playlist or a particular audio file.
            Docs: <see href="https://vk.com/dev/audio.getRecommendations">audio.getRecommendations</see>
            </summary>
            <param name="targetAudio">
            Use to get recommendations based on a particular audio file. The ID of the user or community
            that owns an audio file and that audio file's ID, separated by an underscore.;
            </param>
            <param name="userId">Use to get recommendations based on a user's playlist. User ID. By default, the current user ID.;</param>
            <param name="offset">Offset needed to return a specific subset of audio files.</param>
            <param name="count">Number of audio files to return.</param>
            <param name="shuffle">'1' — shuffle on</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Audio.GetPopular(System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of audio files from the "Popular".
            Docs: <see href="https://vk.com/dev/audio.getPopular">audio.getPopular</see>
            </summary>
            <param name="onlyEng">'1' — to return only foreign audio files; '0' — to return all audio files;</param>
            <param name="genreId">Genre ID. See the list of audio genres.</param>
            <param name="offset">Offset needed to return a specific subset of audio files.</param>
            <param name="count">Number of audio files to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Audio.GetCount(System.Nullable{System.Int32})">
            <summary>
            Returns the total number of audio files on a user or community page.
            Docs: <see href="https://vk.com/dev/audio.getCount">audio.getCount</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the audio files. By default, current user ID.</param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Auth">
            <summary>
            Auth API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Auth.CheckPhone(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Checks a user's phone number for correctness.
            Docs: <see href="https://vk.com/dev/auth.checkPhone">auth.checkPhone</see>
            </summary>
            <param name="phone">Phone number.</param>
            <param name="clientId">User ID.</param>
            <param name="clientSecret"></param>
            <param name="authByPhone"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Auth.Signup(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)">
            <summary>
            Registers a new user by phone number.
            Docs: <see href="https://vk.com/dev/auth.signup">auth.signup</see>
            </summary>
            <param name="firstName">User's first name.</param>
            <param name="lastName">User's surname.</param>
            <param name="clientId">Your application ID.</param>
            <param name="clientSecret"></param>
            <param name="phone">
            User's phone number. Can be pre-checked with the auth.checkPhone
            method.
            </param>
            <param name="password">
            User's password (minimum of 6 characters). Can be specified later with the
            auth.confirm method.
            </param>
            <param name="testMode">
            '1' — test mode, in which the user will not be registered and the phone number will not be
            checked for availability; '0' — default mode (default)
            </param>
            <param name="voice">
            '1' — call the phone number and leave a voice message of the authorization code; '0' — send the
            code by SMS (default)
            </param>
            <param name="sex">'1' — female; '2' — male</param>
            <param name="sid">Session ID required for method recall when SMS was not delivered.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Auth.Confirm(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            Completes a user's registration (begun with the auth.signup method) using an authorization
            code.
            Docs: <see href="https://vk.com/dev/auth.confirm">auth.confirm</see>
            </summary>
            <param name="clientId"></param>
            <param name="clientSecret"></param>
            <param name="phone"></param>
            <param name="code"></param>
            <param name="password"></param>
            <param name="testMode"></param>
            <param name="intro"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Auth.Restore(System.String)">
            <summary>
            Allows to restore account access using a code received via SMS.; ; " This method is only available for apps with
            Direct authorization access. "
            Docs: <see href="https://vk.com/dev/auth.restore">auth.restore</see>
            </summary>
            <param name="phone">user phone number.</param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Board">
            <summary>
            Board API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Board.GetTopics(System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of topics on a community's discussion board.
            Docs: <see href="https://vk.com/dev/board.getTopics">board.getTopics</see>
            </summary>
            <param name="groupId">ID of the community that owns the discussion board.</param>
            <param name="topicIds">
            IDs of topics to be returned (100 maximum). By default, all topics are returned.; If this
            parameter is set, the 'order', 'offset', and 'count' parameters are ignored.
            </param>
            <param name="order">
            Sort order:; '1' — by date updated in reverse chronological order.; '2' — by date created in
            reverse chronological order.; '-1' — by date updated in chronological order.; '-2' — by date created in
            chronological order.; ; If no sort order is specified, topics are returned in the order specified by the group
            administrator. Pinned topics are returned first, regardless of the sorting.
            </param>
            <param name="offset">Offset needed to return a specific subset of topics.</param>
            <param name="count">Number of topics to return.</param>
            <param name="extended">
            '1' — to return information about users who created topics or who posted there last; '0' — to
            return no additional fields (default)
            </param>
            <param name="preview">
            '1' — to return the first comment in each topic;; '2' — to return the last comment in each
            topic;; '0' — to return no comments.; ; By default: '0'.
            </param>
            <param name="previewLength">
            Number of characters after which to truncate the previewed comment. To preview the full
            comment, specify '0'.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Board.GetComments(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Returns a list of comments on a topic on a community's discussion board.
            Docs: <see href="https://vk.com/dev/board.getComments">board.getComments</see>
            </summary>
            <param name="groupId">ID of the community that owns the discussion board.</param>
            <param name="topicId">Topic ID.</param>
            <param name="needLikes">'1' — to return the 'likes' field; '0' — not to return the 'likes' field (default)</param>
            <param name="startCommentId"></param>
            <param name="offset">Offset needed to return a specific subset of comments.</param>
            <param name="count">Number of comments to return.</param>
            <param name="extended">
            '1' — to return information about users who posted comments; '0' — to return no additional
            fields (default)
            </param>
            <param name="sort">
            Sort order:; 'asc' — by creation date in chronological order; 'desc' — by creation date in reverse
            chronological order;
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Board.AddTopic(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new topic on a community's discussion board.
            Docs: <see href="https://vk.com/dev/board.addTopic">board.addTopic</see>
            </summary>
            <param name="groupId">ID of the community that owns the discussion board.</param>
            <param name="title">Topic title.</param>
            <param name="text">Text of the topic.</param>
            <param name="fromGroup">
            For a community:; '1' — to post the topic as by the community; '0' — to post the topic as by
            the user (default)
            </param>
            <param name="attachments">
            (Required if 'message' is not set.) List of objects attached to the post, in the following format:; 
            "%owner_id%_%media_id%, %owner_id%_%media_id%"; 
            '' — Type of media attachment:; 
            'photo' — photo; 
            'video' — video; 
            'audio' — audio; 
            'doc' — document; 
            '%owner_id%' — Media attachment owner ID.; 
            '%media_id%' — Media attachment ID.;
            Example:; "photo100172_166443618,photo66748_265827614"
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Board.CreateComment(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)">
            <summary>
            Adds a comment on a topic on a community's discussion board.
            Docs: <see href="https://vk.com/dev/board.createComment">board.createComment</see>
            </summary>
            <param name="groupId">ID of the community that owns the discussion board.</param>
            <param name="topicId">ID of the topic to be commented on.</param>
            <param name="message">(Required if 'attachments' is not set.) Text of the comment.</param>
            <param name="attachments">
            (Required if 'message' is not set.) List of objects attached to the post, in the following format:; 
            "%owner_id%_%media_id%, %owner_id%_%media_id%"; 
            '' — Type of media attachment:; 
            'photo' — photo; 
            'video' — video; 
            'audio' — audio; 
            'doc' — document; 
            '%owner_id%' — Media attachment owner ID.; 
            '%media_id%' — Media attachment ID.;
            Example:; "photo100172_166443618,photo66748_265827614"
            </param>
            <param name="fromGroup">
            '1' — to post the comment as by the community; '0' — to post the comment as by the user
            (default)
            </param>
            <param name="stickerId">Sticker ID.</param>
            <param name="guid">Unique identifier to avoid repeated comments.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Board.DeleteTopic(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes a topic from a community's discussion board.
            Docs: <see href="https://vk.com/dev/board.deleteTopic">board.deleteTopic</see>
            </summary>
            <param name="groupId">ID of the community that owns the discussion board.</param>
            <param name="topicId">Topic ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Board.EditTopic(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Edits the title of a topic on a community's discussion board.
            Docs: <see href="https://vk.com/dev/board.editTopic">board.editTopic</see>
            </summary>
            <param name="groupId">ID of the community that owns the discussion board.</param>
            <param name="topicId">Topic ID.</param>
            <param name="title">New title of the topic.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Board.EditComment(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Edits a comment on a topic on a community's discussion board.
            Docs: <see href="https://vk.com/dev/board.editComment">board.editComment</see>
            </summary>
            <param name="groupId">ID of the community that owns the discussion board.</param>
            <param name="topicId">Topic ID.</param>
            <param name="commentId">ID of the comment on the topic.</param>
            <param name="message">(Required if 'attachments' is not set). New comment text.</param>
            <param name="attachments">
            (Required if 'message' is not set.) List of objects attached to the post, in the following format:; 
            "%owner_id%_%media_id%, %owner_id%_%media_id%"; 
            '' — Type of media attachment:; 
            'photo' — photo; 
            'video' — video; 
            'audio' — audio; 
            'doc' — document; 
            '%owner_id%' — Media attachment owner ID.; 
            '%media_id%' — Media attachment ID.;
            Example:; "photo100172_166443618,photo66748_265827614"
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Board.RestoreComment(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Restores a comment deleted from a topic on a community's discussion board.
            Docs: <see href="https://vk.com/dev/board.restoreComment">board.restoreComment</see>
            </summary>
            <param name="groupId">ID of the community that owns the discussion board.</param>
            <param name="topicId">Topic ID.</param>
            <param name="commentId">Comment ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Board.DeleteComment(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes a comment on a topic on a community's discussion board.
            Docs: <see href="https://vk.com/dev/board.deleteComment">board.deleteComment</see>
            </summary>
            <param name="groupId">ID of the community that owns the discussion board.</param>
            <param name="topicId">Topic ID.</param>
            <param name="commentId">Comment ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Board.OpenTopic(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Re-opens a previously closed topic on a community's discussion board.
            Docs: <see href="https://vk.com/dev/board.openTopic">board.openTopic</see>
            </summary>
            <param name="groupId">ID of the community that owns the discussion board.</param>
            <param name="topicId">Topic ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Board.CloseTopic(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Closes a topic on a community's discussion board so that comments cannot be posted.
            Docs: <see href="https://vk.com/dev/board.closeTopic">board.closeTopic</see>
            </summary>
            <param name="groupId">ID of the community that owns the discussion board.</param>
            <param name="topicId">Topic ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Board.FixTopic(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Pins a topic (fixes its place) to the top of a community's discussion board.
            Docs: <see href="https://vk.com/dev/board.fixTopic">board.fixTopic</see>
            </summary>
            <param name="groupId">ID of the community that owns the discussion board.</param>
            <param name="topicId">Topic ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Board.UnfixTopic(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Unpins a pinned topic from the top of a community's discussion board.
            Docs: <see href="https://vk.com/dev/board.unfixTopic">board.unfixTopic</see>
            </summary>
            <param name="groupId">ID of the community that owns the discussion board.</param>
            <param name="topicId">Topic ID.</param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Database">
            <summary>
            Database API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Database.GetCountries(System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of countries.
            Docs: <see href="https://vk.com/dev/database.getCountries">database.getCountries</see>
            </summary>
            <param name="needAll">
            '1' — to return a full list of all countries; '0' — to return a list of countries near the
            current user's country (default).;
            </param>
            <param name="code">Country codes in ISO 3166-1 alpha-2 standard.</param>
            <param name="offset">Offset needed to return a specific subset of countries.</param>
            <param name="count">Number of countries to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Database.GetRegions(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of regions.
            Docs: <see href="https://vk.com/dev/database.getRegions">database.getRegions</see>
            </summary>
            <param name="countryId">Country ID, received in database.getCountries method.</param>
            <param name="q">Search query.</param>
            <param name="offset">Offset needed to return specific subset of regions.</param>
            <param name="count">Number of regions to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Database.GetStreetsById(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Returns information about streets by their IDs.
            Docs: <see href="https://vk.com/dev/database.getStreetsById">database.getStreetsById</see>
            </summary>
            <param name="streetIds">Street IDs.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Database.GetCountriesById(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Returns information about countries by their IDs.
            Docs: <see href="https://vk.com/dev/database.getCountriesById">database.getCountriesById</see>
            </summary>
            <param name="countryIds">Country IDs.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Database.GetCities(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of cities.
            Docs: <see href="https://vk.com/dev/database.getCities">database.getCities</see>
            </summary>
            <param name="countryId">Country ID.</param>
            <param name="regionId">Region ID.</param>
            <param name="q">Search query.</param>
            <param name="needAll">
            '1' — to return all cities in the country; '0' — to return major cities in the country
            (default);
            </param>
            <param name="offset">Offset needed to return a specific subset of cities.</param>
            <param name="count">Number of cities to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Database.GetCitiesById(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Returns information about cities by their IDs.
            Docs: <see href="https://vk.com/dev/database.getCitiesById">database.getCitiesById</see>
            </summary>
            <param name="cityIds">City IDs.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Database.GetUniversities(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of higher education institutions.
            Docs: <see href="https://vk.com/dev/database.getUniversities">database.getUniversities</see>
            </summary>
            <param name="q">Search query.</param>
            <param name="countryId">Country ID.</param>
            <param name="cityId">City ID.</param>
            <param name="offset">Offset needed to return a specific subset of universities.</param>
            <param name="count">Number of universities to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Database.GetSchools(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of schools.
            Docs: <see href="https://vk.com/dev/database.getSchools">database.getSchools</see>
            </summary>
            <param name="q">Search query.</param>
            <param name="cityId">City ID.</param>
            <param name="offset">Offset needed to return a specific subset of schools.</param>
            <param name="count">Number of schools to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Database.GetSchoolClasses(System.Nullable{System.Int32})">
            <summary>
            Returns a list of school classes specified for the country.
            Docs: <see href="https://vk.com/dev/database.getSchoolClasses">database.getSchoolClasses</see>
            </summary>
            <param name="countryId">Country ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Database.GetFaculties(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of faculties (i.e., university departments).;
            Docs: <see href="https://vk.com/dev/database.getFaculties">database.getFaculties</see>
            </summary>
            <param name="universityId">University ID.</param>
            <param name="offset">Offset needed to return a specific subset of faculties.</param>
            <param name="count">Number of faculties to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Database.GetChairs(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns list of chairs on a specified faculty.
            Docs: <see href="https://vk.com/dev/database.getChairs">database.getChairs</see>
            </summary>
            <param name="facultyId">id of the faculty to get chairs from</param>
            <param name="offset">offset required to get a certain subset of chairs</param>
            <param name="count">amount of chairs to get</param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Docs">
            <summary>
            Docs API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Docs.Get(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns detailed information about user or community documents.
            Docs: <see href="https://vk.com/dev/docs.get">docs.get</see>
            </summary>
            <param name="count">Number of documents to return. By default, all documents.</param>
            <param name="offset">Offset needed to return a specific subset of documents.</param>
            <param name="ownerId">
            ID of the user or community that owns the documents. Use a negative value to designate a
            community ID.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Docs.GetById(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns information about documents by their IDs.
            Docs: <see href="https://vk.com/dev/docs.getById">docs.getById</see>
            </summary>
            <param name="docs">Document IDs. Example: ; "66748_91488,66748_91455";</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Docs.GetUploadServer(System.Nullable{System.Int32})">
            <summary>
            Returns the server address for document upload.
            Docs: <see href="https://vk.com/dev/docs.getUploadServer">docs.getUploadServer</see>
            </summary>
            <param name="groupId">Community ID (if the document will be uploaded to the community).</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Docs.GetWallUploadServer(System.Nullable{System.Int32})">
            <summary>
            Returns the server address for document upload onto a user's or community's wall.
            Docs: <see href="https://vk.com/dev/docs.getWallUploadServer">docs.getWallUploadServer</see>
            </summary>
            <param name="groupId">Community ID (if the document will be uploaded to the community).</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Docs.Save(System.String,System.String,System.String)">
            <summary>
            Saves a document after uploading it to a server.
            Docs: <see href="https://vk.com/dev/docs.save">docs.save</see>
            </summary>
            <param name="file">This parameter is returned when the file is uploaded to the server.</param>
            <param name="title">Document title.</param>
            <param name="tags">Document tags.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Docs.Delete(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes a user or community document.
            Docs: <see href="https://vk.com/dev/docs.delete">docs.delete</see>
            </summary>
            <param name="ownerId">
            ID of the user or community that owns the document. Use a negative value to designate a
            community ID.
            </param>
            <param name="docId">Document ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Docs.Add(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Copies a document to a user's or community's document list.
            Docs: <see href="https://vk.com/dev/docs.add">docs.add</see>
            </summary>
            <param name="ownerId">
            ID of the user or community that owns the document. Use a negative value to designate a
            community ID.
            </param>
            <param name="docId">Document ID.</param>
            <param name="accessKey">Access key. This parameter is required if 'access_key' was returned with the document's data.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Docs.GetTypes(System.Nullable{System.Int32})">
            <summary>
            Returns documents types available for current user.
            Docs: <see href="https://vk.com/dev/docs.getTypes">docs.getTypes</see>
            </summary>
            <param name="ownerId">
            ID of the user or community that owns the documents. Use a negative value to designate a
            community ID.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Docs.Search(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of documents matching the search criteria.
            Docs: <see href="https://vk.com/dev/docs.search">docs.search</see>
            </summary>
            <param name="q">Search query string.</param>
            <param name="count">Number of results to return.</param>
            <param name="offset">Offset needed to return a specific subset of results.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Docs.Edit(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Edits a document.
            Docs: <see href="https://vk.com/dev/docs.edit">docs.edit</see>
            </summary>
            <param name="ownerId">User ID or community ID. Use a negative value to designate a community ID.</param>
            <param name="docId">Document ID.</param>
            <param name="title">Document title.</param>
            <param name="tags">Document tags.</param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Fave">
            <summary>
            Fave API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Fave.GetUsers(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of users whom the current user has bookmarked.; ;
            Docs: <see href="https://vk.com/dev/fave.getUsers">fave.getUsers</see>
            </summary>
            <param name="offset">Offset needed to return a specific subset of users.</param>
            <param name="count">Number of users to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Fave.GetPhotos(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of photos that the current user has liked.; ;
            Docs: <see href="https://vk.com/dev/fave.getPhotos">fave.getPhotos</see>
            </summary>
            <param name="offset">Offset needed to return a specific subset of photos.</param>
            <param name="count">Number of photos to return.</param>
            <param name="photoSizes">'1' — to return photo sizes in a special format.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Fave.GetPosts(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of wall posts that the current user has liked.;
            Docs: <see href="https://vk.com/dev/fave.getPosts">fave.getPosts</see>
            </summary>
            <param name="offset">Offset needed to return a specific subset of posts.</param>
            <param name="count">Number of posts to return.</param>
            <param name="extended">'1' — to return additional 'wall', 'profiles', and 'groups' fields.; ; By default: '0'.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Fave.GetVideos(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of videos that the current user has liked.;
            Docs: <see href="https://vk.com/dev/fave.getVideos">fave.getVideos</see>
            </summary>
            <param name="offset">Offset needed to return a specific subset of videos.</param>
            <param name="count">Number of videos to return.</param>
            <param name="extended">Return an additional information about videos. Also returns all owners profiles and groups.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Fave.GetLinks(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of links that the current user has bookmarked.
            Docs: <see href="https://vk.com/dev/fave.getLinks">fave.getLinks</see>
            </summary>
            <param name="offset">Offset needed to return a specific subset of users.</param>
            <param name="count">Number of results to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Fave.GetMarketItems(System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns market items bookmarked by current user.
            Docs: <see href="https://vk.com/dev/fave.getMarketItems">fave.getMarketItems</see>
            </summary>
            <param name="count">Number of results to return. ;</param>
            <param name="extended">'1' – to return additional fields 'likes, can_comment, can_repost, photos'. By default: '0'.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Fave.AddUser(System.Nullable{System.Int32})">
            <summary>
            Adds a profile to user faves.
            Docs: <see href="https://vk.com/dev/fave.addUser">fave.addUser</see>
            </summary>
            <param name="userId">Profile ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Fave.RemoveUser(System.Nullable{System.Int32})">
            <summary>
            Removes a profile from user faves.
            Docs: <see href="https://vk.com/dev/fave.removeUser">fave.removeUser</see>
            </summary>
            <param name="userId">Profile ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Fave.AddGroup(System.Nullable{System.Int32})">
            <summary>
            Adds a community to user faves.
            Docs: <see href="https://vk.com/dev/fave.addGroup">fave.addGroup</see>
            </summary>
            <param name="groupId">Community ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Fave.RemoveGroup(System.Nullable{System.Int32})">
            <summary>
            Removes a community from user faves.
            Docs: <see href="https://vk.com/dev/fave.removeGroup">fave.removeGroup</see>
            </summary>
            <param name="groupId">Community ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Fave.AddLink(System.String,System.String)">
            <summary>
            Adds a link to user faves.
            Docs: <see href="https://vk.com/dev/fave.addLink">fave.addLink</see>
            </summary>
            <param name="link">Link URL.</param>
            <param name="text">Description text.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Fave.RemoveLink(System.String)">
            <summary>
            Removes link from the user's faves.
            Docs: <see href="https://vk.com/dev/fave.removeLink">fave.removeLink</see>
            </summary>
            <param name="linkId">Link ID (can be obtained by faves.getLinks method).</param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Friends">
            <summary>
            Friends API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Friends.Get(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Returns a list of user IDs or detailed information about a user's friends.
            Docs: <see href="https://vk.com/dev/friends.get">friends.get</see>
            </summary>
            <param name="userId">User ID. By default, the current user ID.</param>
            <param name="order">
            Sort order: ; 'name' — by name (enabled only if the 'fields' parameter is used); 'hints' — by
            rating, similar to how friends are sorted in My friends section; ; This parameter is available only for
            desktop applications.
            </param>
            <param name="listId">
            ID of the friend list returned by the friends.getLists method to be
            used as the source. This parameter is taken into account only when the uid parameter is set to the current user
            ID.; ; This parameter is available only for desktop applications.
            </param>
            <param name="count">Number of friends to return.</param>
            <param name="offset">Offset needed to return a specific subset of friends.</param>
            <param name="fields">
            Profile fields to return. Sample values: 'uid', 'first_name', 'last_name', 'nickname', 'sex',
            'bdate' (birthdate), 'city', 'country', 'timezone', 'photo', 'photo_medium', 'photo_big', 'domain', 'has_mobile',
            'rate', 'contacts', 'education'.;
            </param>
            <param name="nameCase">
            Case for declension of user name and surname: ; 'nom' — nominative (default) ; 'gen' — genitive
            ; 'dat' — dative ; 'acc' — accusative ; 'ins' — instrumental ; 'abl' — prepositional
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Friends.GetOnline(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of user IDs of a user's friends who are online.
            Docs: <see href="https://vk.com/dev/friends.getOnline">friends.getOnline</see>
            </summary>
            <param name="userId">User ID.</param>
            <param name="listId">Friend list ID. If this parameter is not set, information about all online friends is returned.</param>
            <param name="onlineMobile">'1' — to return an additional 'online_mobile' field; '0' — (default);</param>
            <param name="order">Sort order:; 'random' — random order</param>
            <param name="count">Number of friends to return.</param>
            <param name="offset">Offset needed to return a specific subset of friends.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Friends.GetMutual(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of user IDs of the mutual friends of two users.
            Docs: <see href="https://vk.com/dev/friends.getMutual">friends.getMutual</see>
            </summary>
            <param name="sourceUid">
            ID of the user whose friends will be checked against the friends of the user specified in
            'target_uid'.
            </param>
            <param name="targetUid">
            ID of the user whose friends will be checked against the friends of the user specified in
            'source_uid'.
            </param>
            <param name="targetUids">
            IDs of the users whose friends will be checked against the friends of the user specified in
            'source_uid'.
            </param>
            <param name="order">Sort order:; 'random' — random order</param>
            <param name="count">Number of mutual friends to return.</param>
            <param name="offset">Offset needed to return a specific subset of mutual friends.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Friends.GetRecent(System.Nullable{System.Int32})">
            <summary>
            Returns a list of user IDs of the current user's recently added friends.
            Docs: <see href="https://vk.com/dev/friends.getRecent">friends.getRecent</see>
            </summary>
            <param name="count">Number of recently added friends to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Friends.GetRequests``1(System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns information about the current user's incoming and outgoing friend requests.
            Docs: <see href="https://vk.com/dev/friends.getRequests">friends.getRequests</see>
            </summary>
            <param name="offset">Offset needed to return a specific subset of friend requests.</param>
            <param name="count">Number of friend requests to return (default 100, maximum 1000).</param>
            <param name="needViewed">
            '1' — to return response messages from users who have sent a friend request or, if 'suggested'
            is set to '1', to return a list of suggested friends
            </param>
            <param name="needMutual">'1' — to return a list of mutual friends (up to 20), if any</param>
            <param name="out_">'1' — to return outgoing requests; '0' — to return incoming requests (default)</param>
            <param name="sort">Sort order:; '1' — by number of mutual friends; '0' — by date</param>
            <param name="suggested">'1' — to return a list of suggested friends; '0' — to return friend requests (default)</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Friends.Add(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Approves or creates a friend request.
            Docs: <see href="https://vk.com/dev/friends.add">friends.add</see>
            </summary>
            <param name="userId">ID of the user whose friend request will be approved or to whom a friend request will be sent.</param>
            <param name="text">Text of the message (up to 500 characters) for the friend request, if any.</param>
            <param name="follow">'1' to pass an incoming request to followers list.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Friends.Edit(System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Edits the friend lists of the selected user.
            Docs: <see href="https://vk.com/dev/friends.edit">friends.edit</see>
            </summary>
            <param name="userId">ID of the user whose friend list is to be edited.</param>
            <param name="listIds">IDs of the friend lists to which to add the user.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Friends.Delete(System.Nullable{System.Int32})">
            <summary>
            Declines a friend request or deletes a user from the current user's friend list.
            Docs: <see href="https://vk.com/dev/friends.delete">friends.delete</see>
            </summary>
            <param name="userId">
            ID of the user whose friend request is to be declined or who is to be deleted from the current
            user's friend list.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Friends.GetLists(System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of the user's friend lists.
            Docs: <see href="https://vk.com/dev/friends.getLists">friends.getLists</see>
            </summary>
            <param name="userId">User ID.</param>
            <param name="returnSystem">'1' — to return system friend lists. By default: '0'.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Friends.AddList(System.String,System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Creates a new friend list for the current user.
            Docs: <see href="https://vk.com/dev/friends.addList">friends.addList</see>
            </summary>
            <param name="name">Name of the friend list.</param>
            <param name="userIds">IDs of users to be added to the friend list.;</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Friends.EditList(System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Edits a friend list of the current user.
            Docs: <see href="https://vk.com/dev/friends.editList">friends.editList</see>
            </summary>
            <param name="name">Name of the friend list.</param>
            <param name="listId">Friend list ID.</param>
            <param name="userIds">IDs of users in the friend list.</param>
            <param name="addUserIds">(Applies if 'user_ids' parameter is not set.); User IDs to add to the friend list.</param>
            <param name="deleteUserIds">(Applies if 'user_ids' parameter is not set.); User IDs to delete from the friend list.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Friends.DeleteList(System.Nullable{System.Int32})">
            <summary>
            Deletes a friend list of the current user.
            Docs: <see href="https://vk.com/dev/friends.deleteList">friends.deleteList</see>
            </summary>
            <param name="listId">ID of the friend list to delete.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Friends.GetAppUsers">
            <summary>
            Returns a list of IDs of the current user's friends who installed the application.
            Docs: <see href="https://vk.com/dev/friends.getAppUsers">friends.getAppUsers</see>
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Friends.GetByPhones(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns a list of the current user's friends whose phone numbers, validated or specified in a profile, are in a
            given list.
            Docs: <see href="https://vk.com/dev/friends.getByPhones">friends.getByPhones</see>
            </summary>
            <param name="phones">List of phone numbers in MSISDN format (maximum 1000).; Example:; "+79219876543,+79111234567"</param>
            <param name="fields">
            Profile fields to return. Sample values: 'nickname', 'screen_name', 'sex', 'bdate' (birthdate),
            'city', 'country', 'timezone', 'photo', 'photo_medium', 'photo_big', 'has_mobile', 'rate', 'contacts', 'education',
            'online, counters'.;
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Friends.DeleteAllRequests">
            <summary>
            Marks all incoming friend requests as viewed.
            Docs: <see href="https://vk.com/dev/friends.deleteAllRequests">friends.deleteAllRequests</see>
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Friends.GetSuggestions(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Returns a list of profiles of users whom the current user may know.
            Docs: <see href="https://vk.com/dev/friends.getSuggestions">friends.getSuggestions</see>
            </summary>
            <param name="filter">
            Types of potential friends to return:; 'mutual' — users with many mutual friends ; 'contacts' —
            users found with the account.importContacts method ; 'mutual_contacts' — users
            who imported the same contacts as the current user with the
            account.importContacts method
            </param>
            <param name="count">Number of suggestions to return.</param>
            <param name="offset">Offset needed to return a specific subset of suggestions.</param>
            <param name="fields">
            Profile fields to return. Sample values: 'nickname', 'screen_name', 'sex', 'bdate' (birthdate),
            'city', 'country', 'timezone', 'photo', 'photo_medium', 'photo_big', 'has_mobile', 'rate', 'contacts', 'education',
            'online', 'counters'.;
            </param>
            <param name="nameCase">
            Case for declension of user name and surname: ; 'nom' — nominative (default) ; 'gen' — genitive
            ; 'dat' — dative ; 'acc' — accusative ; 'ins' — instrumental ; 'abl' — prepositional
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Friends.AreFriends(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Nullable{System.Boolean})">
            <summary>
            Checks the current user's friendship status with other specified users.
            Docs: <see href="https://vk.com/dev/friends.areFriends">friends.areFriends</see>
            </summary>
            <param name="userIds">IDs of the users whose friendship status to check.</param>
            <param name="needSign">
            '1' — to return 'sign' field. 'sign' is
            md5("{id}_{user_id}_{friends_status}_{application_secret}"), where id is current user ID.; This field allows to
            check that data has not been modified by the client.; By default: '0'.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Friends.GetAvailableForCall(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Returns a list of friends who can be called by the current user.
            Docs: <see href="https://vk.com/dev/friends.getAvailableForCall">friends.getAvailableForCall</see>
            </summary>
            <param name="fields">
            Profile fields to return. Sample values: 'uid', 'first_name', 'last_name', 'nickname', 'sex',
            'bdate' (birthdate), 'city', 'country', 'timezone', 'photo', 'photo_medium', 'photo_big', 'domain', 'has_mobile',
            'rate', 'contacts', 'education'.;
            </param>
            <param name="nameCase">
            Case for declension of user name and surname: ; 'nom' — nominative (default) ; 'gen' — genitive
            ; 'dat' — dative ; 'acc' — accusative ; 'ins' — instrumental ; 'abl' — prepositional
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Friends.Search(System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of friends matching the search criteria.
            Docs: <see href="https://vk.com/dev/friends.search">friends.search</see>
            </summary>
            <param name="userId">User ID.</param>
            <param name="q">Search query string (e.g., 'Vasya Babich').</param>
            <param name="fields">
            Profile fields to return. Sample values: 'nickname', 'screen_name', 'sex', 'bdate' (birthdate),
            'city', 'country', 'timezone', 'photo', 'photo_medium', 'photo_big', 'has_mobile', 'rate', 'contacts', 'education',
            'online';
            </param>
            <param name="nameCase">
            Case for declension of user name and surname:; 'nom' — nominative (default); 'gen' — genitive ;
            'dat' — dative; 'acc' — accusative ; 'ins' — instrumental ; 'abl' — prepositional
            </param>
            <param name="offset">Offset needed to return a specific subset of friends.</param>
            <param name="count">Number of friends to return.</param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Gifts">
            <summary>
            Gifts API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Gifts.Get(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of user gifts.
            Docs: <see href="https://vk.com/dev/gifts.get">gifts.get</see>
            </summary>
            <param name="userId">User ID.</param>
            <param name="count">Number of gifts to return.</param>
            <param name="offset">Offset needed to return a specific subset of results.</param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Groups">
            <summary>
            Groups API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.IsMember(System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Returns information specifying whether a user is a member of a community.
            Docs: <see href="https://vk.com/dev/groups.isMember">groups.isMember</see>
            </summary>
            <param name="groupId">ID or screen name of the community.</param>
            <param name="userId">User ID.</param>
            <param name="userIds">User IDs.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.GetById(System.Collections.Generic.IEnumerable{System.String},System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns information about communities by their IDs.
            Docs: <see href="https://vk.com/dev/groups.getById">groups.getById</see>
            </summary>
            <param name="groupIds">IDs or screen names of communities.</param>
            <param name="groupId">ID or screen name of the community.</param>
            <param name="fields">Group fields to return.;</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.Get(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of the communities to which a user belongs.; ;
            Docs: <see href="https://vk.com/dev/groups.get">groups.get</see>
            </summary>
            <param name="userId">User ID.</param>
            <param name="extended">
            '1' — to return complete information about a user's communities; '0' — to return a list of
            community IDs without any additional fields (default);
            </param>
            <param name="filter">
            Types of communities to return:; 'admin' — to return communities administered by the user ;
            'editor' — to return communities where the user is an administrator or editor; 'moder' — to return communities
            where the user is an administrator, editor, or moderator; 'groups' — to return only groups; 'publics' — to return
            only public pages; 'events' — to return only events
            </param>
            <param name="fields">Profile fields to return.;</param>
            <param name="offset">Offset needed to return a specific subset of communities.</param>
            <param name="count">Number of communities to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.GetMembers``1(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Returns a list of community members.
            Docs: <see href="https://vk.com/dev/groups.getMembers">groups.getMembers</see>
            </summary>
            <param name="groupId">ID or screen name of the community.</param>
            <param name="sort">
            Sort order. Available values: 'id_asc', 'id_desc', 'time_asc', 'time_desc'.; 'time_asc' and
            'time_desc' are availavle only if the method is called by the group's 'moderator'.
            </param>
            <param name="offset">Offset needed to return a specific subset of community members.</param>
            <param name="count">Number of community members to return.</param>
            <param name="fields">
            List of additional fields to be returned. ; Available values: 'sex, bdate, city, country,
            photo_50, photo_100, photo_200_orig, photo_200, photo_400_orig, photo_max, photo_max_orig, online, online_mobile,
            lists, domain, has_mobile, contacts, connections, site, education, universities, schools, can_post,
            can_see_all_posts, can_see_audio, can_write_private_message, status, last_seen, common_count, relation, relatives,
            counters'.
            </param>
            <param name="filter">
            *'friends' – only friends in this community will be returned;; *'unsure' – only those who pressed
            'I may attend' will be returned (if it's an event).
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.Join(System.Nullable{System.Int32},System.String)">
            <summary>
            With this method you can join the group or public page, and also confirm your participation in an event.
            Docs: <see href="https://vk.com/dev/groups.join">groups.join</see>
            </summary>
            <param name="groupId">ID or screen name of the community.</param>
            <param name="notSure">
            Optional parameter which is taken into account when 'gid' belongs to the event:; '1' — Perhaps I
            will attend; '0' — I will be there for sure (default); ;
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.Leave(System.Nullable{System.Int32})">
            <summary>
            With this method you can leave a group, public page, or event.; ;
            Docs: <see href="https://vk.com/dev/groups.leave">groups.leave</see>
            </summary>
            <param name="groupId">ID or screen name of the community.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.Search(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of communities matching the search criteria.
            Docs: <see href="https://vk.com/dev/groups.search">groups.search</see>
            </summary>
            <param name="q">Search query string.</param>
            <param name="type">Community type. Possible values: 'group, page, event.'</param>
            <param name="countryId">Country ID.</param>
            <param name="cityId">City ID. If this parameter is transmitted, country_id is ignored.</param>
            <param name="future">'1' — to return only upcoming events. Works with the 'type' = 'event' only.</param>
            <param name="market">'1' — to return communities with enabled market only.</param>
            <param name="sort">
            Sort order. Possible values:; *'0' — default sorting (similar the full version of the site);; *'1' —
            by growth speed;; *'2'— by the "day attendance/members number" ratio;; *'3' — by the "Likes number/members number"
            ratio;; *'4' — by the "comments number/members number" ratio;; *'5' — by the "boards entries number/members number"
            ratio.; ;
            </param>
            <param name="offset">Offset needed to return a specific subset of results.</param>
            <param name="count">
            Number of communities to return.; "Note that you can not receive more than first thousand of
            results, regardless of 'count' and 'offset' values."
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.GetCatalog(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns communities list for a catalog category.
            Docs: <see href="https://vk.com/dev/groups.getCatalog">groups.getCatalog</see>
            </summary>
            <param name="categoryId">Category id received from groups.getCatalogInfo.</param>
            <param name="subcategoryId">Subcategory id received from groups.getCatalogInfo.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.GetCatalogInfo(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Returns categories list for communities catalog
            Docs: <see href="https://vk.com/dev/groups.getCatalogInfo">groups.getCatalogInfo</see>
            </summary>
            <param name="extended">1 – to return communities count and three communities for preview.; By default: 0.</param>
            <param name="subcategories">1 – to return subcategories info.; By default: 0.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.GetInvites(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of invitations to join communities and events.; ;
            Docs: <see href="https://vk.com/dev/groups.getInvites">groups.getInvites</see>
            </summary>
            <param name="offset">Offset needed to return a specific subset of invitations.</param>
            <param name="count">Number of invitations to return.</param>
            <param name="extended">'1' — to return additional fields for communities..</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.GetInvitedUsers(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Returns invited users list of a community
            Docs: <see href="https://vk.com/dev/groups.getInvitedUsers">groups.getInvitedUsers</see>
            </summary>
            <param name="groupId">Group ID to return invited users for.</param>
            <param name="offset">Offset needed to return a specific subset of results.</param>
            <param name="count">Number of results to return.</param>
            <param name="fields">
            List of additional fields to be returned. ; Available values: 'sex, bdate, city, country,
            photo_50, photo_100, photo_200_orig, photo_200, photo_400_orig, photo_max, photo_max_orig, online, online_mobile,
            lists, domain, has_mobile, contacts, connections, site, education, universities, schools, can_post,
            can_see_all_posts, can_see_audio, can_write_private_message, status, last_seen, common_count, relation, relatives,
            counters'.
            </param>
            <param name="nameCase">
            Case for declension of user name and surname. Possible values:; *'nom' — nominative (default);;
            *'gen' — genitive;; *'dat' — dative;; *'acc' — accusative; ; *'ins' — instrumental;; *'abl' — prepositional.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.BanUser(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Adds a user to a community blacklist.
            Docs: <see href="https://vk.com/dev/groups.banUser">groups.banUser</see>
            </summary>
            <param name="groupId">Community ID.</param>
            <param name="userId">User ID.</param>
            <param name="endDate">Date (in Unix time) when the user will be removed from the blacklist.</param>
            <param name="reason">
            Reason for ban:; '1' — spam; '2' — verbal abuse; '3' — strong language; '4' — irrelevant messages;
            '0' — other (default)
            </param>
            <param name="comment">Text of comment to ban.</param>
            <param name="commentVisible">
            '1' — text of comment will be visible to the user;; '0' — text of comment will be
            invisible to the user. ; By default: '0'.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.UnbanUser(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Removes a user from a community blacklist.
            Docs: <see href="https://vk.com/dev/groups.unbanUser">groups.unbanUser</see>
            </summary>
            <param name="groupId">Community ID.</param>
            <param name="userId">User ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.GetBanned(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32})">
            <summary>
            Returns a list of users on a community blacklist.
            Docs: <see href="https://vk.com/dev/groups.getBanned">groups.getBanned</see>
            </summary>
            <param name="groupId">Community ID.</param>
            <param name="offset">Offset needed to return a specific subset of users.</param>
            <param name="count">Number of users to return.</param>
            <param name="fields"></param>
            <param name="userId"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.Create(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new community.
            Docs: <see href="https://vk.com/dev/groups.create">groups.create</see>
            </summary>
            <param name="title">Community title.</param>
            <param name="description">Community description (ignored for 'type' = 'public').</param>
            <param name="type">Community type. Possible values:; *'group' – group;; *'event' – event;; *'public' – public page</param>
            <param name="publicCategory">Category ID (for 'type' = 'public' only).</param>
            <param name="subtype">
            Public page subtype. Possible values:; *'1' – place or small business;; *'2' – company,
            organization or website;; *'3' – famous person or group of people;; *'4' – product or work of art.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.Edit(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Edits a community.
            Docs: <see href="https://vk.com/dev/groups.edit">groups.edit</see>
            </summary>
            <param name="groupId">Community ID.</param>
            <param name="title">Community title.</param>
            <param name="description">Community description.</param>
            <param name="screenName">Community screen name.</param>
            <param name="access">Community type. Possible values:; *'0' – open;; *'1' – closed;; *'2' – private.</param>
            <param name="website">Website that will be displayed in the community information field.</param>
            <param name="subject">
            Community subject. Possible values: ; *'1' – auto/moto;; *'2' – activity holidays;; *'3' –
            business;; *'4' – pets;; *'5' – health;; *'6' – dating and communication; ; *'7' – games;; *'8' – IT (computers and
            software);; *'9' – cinema;; *'10' – beauty and fashion;; *'11' – cooking;; *'12' – art and culture;; *'13' –
            literature;; *'14' – mobile services and internet;; *'15' – music;; *'16' – science and technology;; *'17' – real
            estate;; *'18' – news and media;; *'19' – security;; *'20' – education;; *'21' – home and renovations;; *'22' –
            politics;; *'23' – food;; *'24' – industry;; *'25' – travel;; *'26' – work;; *'27' – entertainment;; *'28' –
            religion;; *'29' – family;; *'30' – sports;; *'31' – insurance;; *'32' – television;; *'33' – goods and services;;
            *'34' – hobbies;; *'35' – finance;; *'36' – photo;; *'37' – esoterics;; *'38' – electronics and appliances;; *'39'
            – erotic;; *'40' – humor;; *'41' – society, humanities;; *'42' – design and graphics.
            </param>
            <param name="email">Organizer email (for events).</param>
            <param name="phone">Organizer phone number (for events).</param>
            <param name="rss">
            RSS feed address for import (available only to communities with special permission. Contact
            vk.com/support to get it.
            </param>
            <param name="eventStartDate">Event start date in Unixtime format.</param>
            <param name="eventFinishDate">Event finish date in Unixtime format.</param>
            <param name="eventGroupId">Organizer community ID (for events only).</param>
            <param name="publicCategory">Public page category ID.</param>
            <param name="publicSubcategory">Public page subcategory ID.</param>
            <param name="publicDate">Founding date of a company or organization owning the community in "dd.mm.YYYY" format.</param>
            <param name="wall">
            Wall settings. Possible values:; *'0' – disabled;; *'1' – open;; *'2' – limited (groups and events
            only);; *'3' – closed (groups and events only).;
            </param>
            <param name="topics">
            Board topics settings. Possbile values: ; *'0' – disabled;; *'1' – open;; *'2' – limited (for
            groups and events only).;
            </param>
            <param name="photos">
            Photos settings. Possible values:; *'0' – disabled;; *'1' – open;; *'2' – limited (for groups and
            events only).;
            </param>
            <param name="video">
            Video settings. Possible values:; *'0' – disabled;; *'1' – open;; *'2' – limited (for groups and
            events only).
            </param>
            <param name="audio">
            Audio settings. Possible values:; *'0' – disabled;; *'1' – open;; *'2' – limited (for groups and
            events only).
            </param>
            <param name="links">Links settings (for public pages only). Possible values:; *'0' – disabled;; *'1' – enabled.;</param>
            <param name="events">Events settings (for public pages only). Possible values:; *'0' – disabled;; *'1' – enabled.;</param>
            <param name="places">Places settings (for public pages only). Possible values:; *'0' – disabled;; *'1' – enabled.;</param>
            <param name="contacts">Contacts settings (for public pages only). Possible values:; *'0' – disabled;; *'1' – enabled.;</param>
            <param name="docs">
            Documents settings. Possible values:; *'0' – disabled;; *'1' – open;; *'2' – limited (for groups and
            events only).
            </param>
            <param name="wiki">
            Wiki pages settings. Possible values:; *'0' – disabled;; *'1' – open;; *'2' – limited (for groups
            and events only).
            </param>
            <param name="messages">Community messages. Possible values:; *'0' — disabled;; *'1' — enabled.</param>
            <param name="ageLimits">Community age limits. Possible values:; *'1' — no limits;; *'2' — 16+;; *'3' — 18+.</param>
            <param name="market">Market settings. Possible values:; *'0' – disabled;; *'1' – enabled.</param>
            <param name="marketComments">market comments settings. Possible values:; *'0' – disabled;; *'1' – enabled.</param>
            <param name="marketCountry">Market delivery countries.</param>
            <param name="marketCity">Market delivery cities (if only one country is specified).</param>
            <param name="marketCurrency">
            Market currency settings. Possbile values: ; *'643' – Russian rubles;; *'980' – Ukrainian
            hryvnia;; *'398' – Kazakh tenge;; *'978' – Euro;; *'840' – US dollars
            </param>
            <param name="marketContact">Seller contact for market.; Set '0' for community messages.</param>
            <param name="marketWiki">ID of a wiki page with market description.</param>
            <param name="obsceneFilter">
            Obscene expressions filter in comments. Possible values: ; *'0' – disabled;; *'1' –
            enabled.
            </param>
            <param name="obsceneStopwords">Stopwords filter in comments. Possible values: ; *'0' – disabled;; *'1' – enabled.</param>
            <param name="obsceneWords">Keywords for stopwords filter.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.EditPlace(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Edits the place in community.
            Docs: <see href="https://vk.com/dev/groups.editPlace">groups.editPlace</see>
            </summary>
            <param name="groupId">Community ID.</param>
            <param name="title">Place title.</param>
            <param name="address">Place address.</param>
            <param name="countryId">Country ID.</param>
            <param name="cityId">City ID.</param>
            <param name="latitude">Geographical latitude.</param>
            <param name="longitude">Geographical longitude.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.GetSettings(System.Nullable{System.Int32})">
            <summary>
            Returns community settings.
            Docs: <see href="https://vk.com/dev/groups.getSettings">groups.getSettings</see>
            </summary>
            <param name="groupId">Community ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.GetRequests(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns a list of requests to the community.
            Docs: <see href="https://vk.com/dev/groups.getRequests">groups.getRequests</see>
            </summary>
            <param name="groupId">Community ID.</param>
            <param name="offset">Offset needed to return a specific subset of results.</param>
            <param name="count">Number of results to return.</param>
            <param name="fields">Profile fields to return.;</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.EditManager(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.String,System.String,System.String)">
            <summary>
            Allows to add, remove or edit the community manager.
            Docs: <see href="https://vk.com/dev/groups.editManager">groups.editManager</see>
            </summary>
            <param name="groupId">Community ID.</param>
            <param name="userId">User ID.</param>
            <param name="role">Manager role. Possible values:; *'moderator';; *'editor';; *'administrator'.</param>
            <param name="isContact">'1' — to show the manager in Contacts block of the community.</param>
            <param name="contactPosition">Position to show in Contacts block.</param>
            <param name="contactPhone">Contact phone.</param>
            <param name="contactEmail">Contact e-mail.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.Invite(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Allows to invite friends to the community.
            Docs: <see href="https://vk.com/dev/groups.invite">groups.invite</see>
            </summary>
            <param name="groupId">Community ID.</param>
            <param name="userId">User ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.AddLink(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Allows to add a link to the community.
            Docs: <see href="https://vk.com/dev/groups.addLink">groups.addLink</see>
            </summary>
            <param name="groupId">Community ID.</param>
            <param name="link">Link URL.</param>
            <param name="text">Description text for the link.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.DeleteLink(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Allows to delete a link from the community.
            Docs: <see href="https://vk.com/dev/groups.deleteLink">groups.deleteLink</see>
            </summary>
            <param name="groupId">Community ID.</param>
            <param name="linkId">Link ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.EditLink(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Allows to edit a link in the community.
            Docs: <see href="https://vk.com/dev/groups.editLink">groups.editLink</see>
            </summary>
            <param name="groupId">Community ID.</param>
            <param name="linkId">Link ID.</param>
            <param name="text">New description text for the link.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.ReorderLink(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Allows to reorder links in the community.
            Docs: <see href="https://vk.com/dev/groups.reorderLink">groups.reorderLink</see>
            </summary>
            <param name="groupId">Community ID.</param>
            <param name="linkId">Link ID.</param>
            <param name="after">ID of the link after which to place the link with 'link_id'.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.RemoveUser(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Removes a user from the community.
            Docs: <see href="https://vk.com/dev/groups.removeUser">groups.removeUser</see>
            </summary>
            <param name="groupId">Community ID.</param>
            <param name="userId">User ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.ApproveRequest(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Allows to approve join request to the community.
            Docs: <see href="https://vk.com/dev/groups.approveRequest">groups.approveRequest</see>
            </summary>
            <param name="groupId">Community ID.</param>
            <param name="userId">User ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.GetCallbackConfirmationCode(System.Nullable{System.Int32})">
            <summary>
            Returns Callback API confirmation code for the community.
            Docs: <see href="https://vk.com/dev/groups.getCallbackConfirmationCode">groups.getCallbackConfirmationCode</see>
            </summary>
            <param name="groupId">Community ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.GetCallbackServerSettings(System.Nullable{System.Int32})">
            <summary>
            Returns Callback API server settings for the community.
            Docs: <see href="https://vk.com/dev/groups.getCallbackServerSettings">groups.getCallbackServerSettings</see>
            </summary>
            <param name="groupId">Community ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.GetCallbackSettings(System.Nullable{System.Int32})">
            <summary>
            Returns Callback API notifications settings.
            Docs: <see href="https://vk.com/dev/groups.getCallbackSettings">groups.getCallbackSettings</see>
            </summary>
            <param name="groupId">Community ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.SetCallbackServer(System.Nullable{System.Int32},System.String)">
            <summary>
            Allow to set Callback API server URL for the community. ; ;
            Docs: <see href="https://vk.com/dev/groups.setCallbackServer">groups.setCallbackServer</see>
            </summary>
            <param name="groupId">Community ID.</param>
            <param name="serverUrl">Server URL.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.SetCallbackServerSettings(System.Nullable{System.Int32},System.String)">
            <summary>
            Allow to set Callback API server settings.
            Docs: <see href="https://vk.com/dev/groups.setCallbackServerSettings">groups.setCallbackServerSettings</see>
            </summary>
            <param name="groupId">Community ID.</param>
            <param name="secretKey">Callback API secret key.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Groups.SetCallbackSettings(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Allow to set notifications settings for group.
            Docs: <see href="https://vk.com/dev/groups.setCallbackSettings">groups.setCallbackSettings</see>
            </summary>
            <param name="groupId">Community ID.</param>
            <param name="messageNew">New messages notifications ('0' — disabled, '1' — enabled).</param>
            <param name="messageAllow">Allowed messages notifications ('0' — disabled, '1' — enabled).</param>
            <param name="messageDeny">Denied messages notifications ('0' — disabled, '1' — enabled).</param>
            <param name="photoNew">New photos notifications ('0' — disabled, '1' — enabled).</param>
            <param name="audioNew">New audios notifications ('0' — disabled, '1' — enabled).</param>
            <param name="videoNew">New videos notifications ('0' — disabled, '1' — enabled).</param>
            <param name="wallReplyNew">New wall replies notifications ('0' — disabled, '1' — enabled).</param>
            <param name="wallReplyEdit">Wall replies edited notifications ('0' — disabled, '1' — enabled).</param>
            <param name="wallPostNew">New wall posts notifications ('0' — disabled, '1' — enabled).</param>
            <param name="boardPostNew">New board posts notifications ('0' — disabled, '1' — enabled).</param>
            <param name="boardPostEdit">Board posts edited notifications ('0' — disabled, '1' — enabled).</param>
            <param name="boardPostRestore">Board posts restored notifications ('0' — disabled, '1' — enabled).</param>
            <param name="boardPostDelete">Board posts deleted notifications ('0' — disabled, '1' — enabled).</param>
            <param name="photoCommentNew">New comment to photo notifications ('0' — disabled, '1' — enabled).</param>
            <param name="videoCommentNew">New comment to video notifications ('0' — disabled, '1' — enabled).</param>
            <param name="marketCommentNew">New comment to market item notifications ('0' — disabled, '1' — enabled).</param>
            <param name="groupJoin">Joined community notifications ('0' — disabled, '1' — enabled).</param>
            <param name="groupLeave">Left community notifications ('0' — disabled, '1' — enabled).</param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Leads">
            <summary>
            Leads API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Leads.Complete(System.String,System.String,System.String)">
            <summary>
            Completes the lead started by user.
            Docs: <see href="https://vk.com/dev/leads.complete">leads.complete</see>
            </summary>
            <param name="vkSid">Session obtained as GET parameter when session started.</param>
            <param name="secret">Secret key from the lead testing interface.</param>
            <param name="comment">Comment text.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Leads.Start(System.Nullable{System.Int32},System.String)">
            <summary>
            Creates new session for the user passing the offer.
            Docs: <see href="https://vk.com/dev/leads.start">leads.start</see>
            </summary>
            <param name="leadId">Lead ID.</param>
            <param name="secret">Secret key from the lead testing interface.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Leads.GetStats(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Returns lead stats data.
            Docs: <see href="https://vk.com/dev/leads.getStats">leads.getStats</see>
            </summary>
            <param name="leadId">Lead ID.</param>
            <param name="secret">Secret key obtained from the lead testing interface.</param>
            <param name="dateStart">Day to start stats from (YYYY_MM_DD, e.g.2011-09-17).</param>
            <param name="dateEnd">Day to finish stats (YYYY_MM_DD, e.g.2011-09-17).</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Leads.GetUsers(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of last user actions for the offer.
            Docs: <see href="https://vk.com/dev/leads.getUsers">leads.getUsers</see>
            </summary>
            <param name="offerId">Offer ID.</param>
            <param name="secret">Secret key obtained in the lead testing interface.</param>
            <param name="offset">Offset needed to return a specific subset of results.</param>
            <param name="count">Number of results to return.</param>
            <param name="status">
            Action type. Possible values:; *'0' — start;; *'1' — finish;; *'2' — blocking users;; *'3' — start
            in a test mode;; *'4' — finish in a test mode.;
            </param>
            <param name="reverse">Sort order. Possible values:; *'1' — chronological;; *'0' — reverse chronological.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Leads.CheckUser(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Checks if the user can start the lead.
            Docs: <see href="https://vk.com/dev/leads.checkUser">leads.checkUser</see>
            </summary>
            <param name="leadId">Lead ID.</param>
            <param name="testResult">Value to be return in 'result' field when test mode is used.</param>
            <param name="age">User age.</param>
            <param name="country">User country code.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Leads.MetricHit(System.String)">
            <summary>
            Counts the metric event.
            Docs: <see href="https://vk.com/dev/leads.metricHit">leads.metricHit</see>
            </summary>
            <param name="data">Metric data obtained in the lead interface.</param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Likes">
            <summary>
            Likes API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Likes.GetList(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of IDs of users who added the specified object to their 'Likes' list.
            Docs: <see href="https://vk.com/dev/likes.getList">likes.getList</see>
            </summary>
            <param name="type">
            ; Object type:; 'post' — post on user or community wall; 'comment' — comment on a wall post; 'photo'
            — photo; 'audio' — audio; 'video' — video; 'note' — note; 'photo_comment' — comment on the photo; 'video_comment' —
            comment on the video; 'topic_comment' — comment in the discussion; 'sitepage' — page of the site where the
            Like widget is installed
            </param>
            <param name="ownerId">
            ID of the user, community, or application that owns the object. If the 'type' parameter is set
            as 'sitepage', the application ID is passed as 'owner_id'. Use negative value for a community id. If the 'type'
            parameter is not set, the 'owner_id' is assumed to be either the current user or the same application ID as if the
            'type' parameter was set to 'sitepage'.; ;
            </param>
            <param name="itemId">
            Object ID. If 'type' is set as 'sitepage', 'item_id' can include the 'page_id' parameter value
            used during initialization of the Like widget.
            </param>
            <param name="pageUrl">
            URL of the page where the Like widget is installed. Used instead of the
            'item_id' parameter.
            </param>
            <param name="filter">
            Filters to apply:; 'likes' — returns information about all users who liked the object (default);
            'copies' — returns information only about users who told their friends about the object
            </param>
            <param name="friendsOnly">
            Specifies which users are returned:; '1' — to return only the current user's friends; '0' —
            to return all users (default)
            </param>
            <param name="offset">Offset needed to select a specific subset of users.</param>
            <param name="count">
            Number of user IDs to return (maximum '1000').; Default is '100' if 'friends_only' is set to '0';
            otherwise, the default is '10' if 'friends_only' is set to '1'.;
            </param>
            <param name="skipOwn"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Likes.Add(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Adds the specified object to the 'Likes' list of the current user.
            Docs: <see href="https://vk.com/dev/likes.add">likes.add</see>
            </summary>
            <param name="type">
            Object type:; 'post' — post on user or community wall; 'comment' — comment on a wall post; 'photo' —
            photo; 'audio' — audio; 'video' — video; 'note' — note; 'photo_comment' — comment on the photo; 'video_comment' —
            comment on the video; 'topic_comment' — comment in the discussion; 'sitepage' — page of the site where the
            Like widget is installed
            </param>
            <param name="ownerId">ID of the user or community that owns the object.</param>
            <param name="itemId">Object ID.</param>
            <param name="accessKey">Access key required for an object owned by a private entity.;</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Likes.Delete(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes the specified object from the 'Likes' list of the current user.
            Docs: <see href="https://vk.com/dev/likes.delete">likes.delete</see>
            </summary>
            <param name="type">
            Object type:; 'post' — post on user or community wall; 'comment' — comment on a wall post; 'photo' —
            photo; 'audio' — audio; 'video' — video; 'note' — note; 'photo_comment' — comment on the photo; 'video_comment' —
            comment on the video; 'topic_comment' — comment in the discussion; 'sitepage' — page of the site where the
            Like widget is installed
            </param>
            <param name="ownerId">ID of the user or community that owns the object.</param>
            <param name="itemId">Object ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Likes.IsLiked(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Checks for the object in the 'Likes' list of the specified user.
            Docs: <see href="https://vk.com/dev/likes.isLiked">likes.isLiked</see>
            </summary>
            <param name="userId">User ID.</param>
            <param name="type">
            Object type:; 'post' — post on user or community wall; 'comment' — comment on a wall post; 'photo' —
            photo; 'audio' — audio; 'video' — video; 'note' — note; 'photo_comment' — comment on the photo; 'video_comment' —
            comment on the video; 'topic_comment' — comment in the discussion
            </param>
            <param name="ownerId">ID of the user or community that owns the object.</param>
            <param name="itemId">Object ID.</param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Market">
            <summary>
            Market API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Market.Get(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns items list for a community.
            Docs: <see href="https://vk.com/dev/market.get">market.get</see>
            </summary>
            <param name="ownerId">
            ID of an item owner community; "Note that community id in the 'owner_id' parameter should be
            negative number. For example 'owner_id'=-1 matches the VK API community "
            </param>
            <param name="count">Number of items to return.</param>
            <param name="offset">Offset needed to return a specific subset of results.</param>
            <param name="extended">
            '1' – method will return additional fields: 'likes, can_comment, car_repost, photos'. These
            parameters are not returned by default.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Market.GetById(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean})">
            <summary>
            Returns information about market items by their ids.
            Docs: <see href="https://vk.com/dev/market.getById">market.getById</see>
            </summary>
            <param name="itemIds">
            Comma-separated ids list: {user id}_{item id}.; If an item belongs to a community -{community
            id} is used. ; " 'Videos' value example: ; '-4363_136089719,13245770_137352259'"
            </param>
            <param name="extended">'1' – to return additional fields: 'likes, can_comment, car_repost, photos'. By default: '0'.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Market.Search(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Searches market items in a community's catalog
            Docs: <see href="https://vk.com/dev/market.search">market.search</see>
            </summary>
            <param name="ownerId">ID of an items owner community.</param>
            <param name="q">Search query, for example "pink slippers".</param>
            <param name="priceFrom">Minimum item price value.</param>
            <param name="priceTo">Maximum item price value.</param>
            <param name="tags">Comma-separated tag IDs list.</param>
            <param name="rev">'0' — do not use reverse order, '1' — use reverse order</param>
            <param name="offset">Offset needed to return a specific subset of results.</param>
            <param name="count">Number of items to return.</param>
            <param name="extended">'1' – to return additional fields: 'likes, can_comment, car_repost, photos'. By default: '0'.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Market.GetAlbums(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns community's collections list.
            Docs: <see href="https://vk.com/dev/market.getAlbums">market.getAlbums</see>
            </summary>
            <param name="ownerId">ID of an items owner community.</param>
            <param name="offset">Offset needed to return a specific subset of results.</param>
            <param name="count">Number of items to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Market.GetAlbumById(System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Returns items album's data
            Docs: <see href="https://vk.com/dev/market.getAlbumById">market.getAlbumById</see>
            </summary>
            <param name="ownerId">
            identifier of an album owner community; "Note that community id in the 'owner_id' parameter
            should be negative number. For example 'owner_id'=-1 matches the VK API community "
            </param>
            <param name="albumIds">collections identifiers to obtain data from</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Market.CreateComment(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Creates a new comment for an item.
            Docs: <see href="https://vk.com/dev/market.createComment">market.createComment</see>
            </summary>
            <param name="ownerId">ID of an item owner community.</param>
            <param name="itemId">Item ID.</param>
            <param name="message">Comment text (required if 'attachments' parameter is not specified)</param>
            <param name="attachments">
            (Required if 'message' is not set.) List of objects attached to the post, in the following format:; 
            "%owner_id%_%media_id%, %owner_id%_%media_id%"; 
            '' — Type of media attachment:; 
            'photo' — photo; 
            'video' — video; 
            'audio' — audio; 
            'doc' — document; 
            '%owner_id%' — Media attachment owner ID.; 
            '%media_id%' — Media attachment ID.;
            Example:; "photo100172_166443618,photo66748_265827614"
            </param>
            <param name="fromGroup">
            '1' - comment will be published on behalf of a community, '0' - on behalf of a user (by
            default).
            </param>
            <param name="replyToComment">ID of a comment to reply with current comment to.</param>
            <param name="stickerId">Sticker ID.</param>
            <param name="guid">Random value to avoid resending one comment.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Market.GetComments(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns comments list for an item.
            Docs: <see href="https://vk.com/dev/market.getComments">market.getComments</see>
            </summary>
            <param name="ownerId">ID of an item owner community</param>
            <param name="itemId">Item ID.</param>
            <param name="needLikes">'1' — to return likes info.</param>
            <param name="startCommentId">ID of a comment to start a list from (details below).</param>
            <param name="count">Number of results to return.</param>
            <param name="sort">Sort order ('asc' — from old to new, 'desc' — from new to old)</param>
            <param name="extended">
            '1' — comments will be returned as numbered objects, in addition lists of 'profiles' and
            'groups' objects will be returned.
            </param>
            <param name="fields">List of additional profile fields to return. See the details</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Market.DeleteComment(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes an item's comment
            Docs: <see href="https://vk.com/dev/market.deleteComment">market.deleteComment</see>
            </summary>
            <param name="ownerId">
            identifier of an item owner community; "Note that community id in the 'owner_id' parameter
            should be negative number. For example 'owner_id'=-1 matches the VK API community "
            </param>
            <param name="commentId">comment id</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Market.RestoreComment(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Restores a recently deleted comment
            Docs: <see href="https://vk.com/dev/market.restoreComment">market.restoreComment</see>
            </summary>
            <param name="ownerId">
            identifier of an item owner community; "Note that community id in the 'owner_id' parameter
            should be negative number. For example 'owner_id'=-1 matches the VK API community "
            </param>
            <param name="commentId">deleted comment id</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Market.EditComment(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Chages item comment's text
            Docs: <see href="https://vk.com/dev/market.editComment">market.editComment</see>
            </summary>
            <param name="ownerId">ID of an item owner community.</param>
            <param name="commentId">Comment ID.</param>
            <param name="message">New comment text (required if 'attachments' are not specified); ; 2048 symbols maximum.</param>
            <param name="attachments">
            (Required if 'message' is not set.) List of objects attached to the post, in the following format:; 
            "%owner_id%_%media_id%, %owner_id%_%media_id%"; 
            '' — Type of media attachment:; 
            'photo' — photo; 
            'video' — video; 
            'audio' — audio; 
            'doc' — document; 
            '%owner_id%' — Media attachment owner ID.; 
            '%media_id%' — Media attachment ID.;
            Example:; "photo100172_166443618,photo66748_265827614"
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Market.ReportComment(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Sends a complaint to the item's comment.
            Docs: <see href="https://vk.com/dev/market.reportComment">market.reportComment</see>
            </summary>
            <param name="ownerId">ID of an item owner community.</param>
            <param name="commentId">Comment ID.</param>
            <param name="reason">
            Complaint reason. Possible values:; *'0' — spam;; *'1' — child porn;; *'2' — extremism;; *'3' —
            violence;; *'4' — drugs propaganda;; *'5' — adult materials;; *'6' — insult.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Market.GetCategories(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of market categories.
            Docs: <see href="https://vk.com/dev/market.getCategories">market.getCategories</see>
            </summary>
            <param name="count">Number of results to return.</param>
            <param name="offset">Offset needed to return a specific subset of results.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Market.Report(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Sends a complaint to the item.
            Docs: <see href="https://vk.com/dev/market.report">market.report</see>
            </summary>
            <param name="ownerId">ID of an item owner community.</param>
            <param name="itemId">Item ID.</param>
            <param name="reason">
            Complaint reason. Possible values:; *'0' — spam;; *'1' — child porn;; *'2' — extremism;; *'3' —
            violence;; *'4' — drugs propaganda;; *'5' — adult materials;; *'6' — insult.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Market.Add(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.UInt32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Ads a new item to the market.
            Docs: <see href="https://vk.com/dev/market.add">market.add</see>
            </summary>
            <param name="ownerId">ID of an item owner community.</param>
            <param name="name">Item name.</param>
            <param name="description">Item description.</param>
            <param name="categoryId">Item category ID.</param>
            <param name="price">Item price.</param>
            <param name="deleted">Item status ('1' — deleted, '0' — not deleted).</param>
            <param name="mainPhotoId">Cover photo ID.</param>
            <param name="photoIds">IDs of additional photos.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Market.Edit(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.UInt32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Edits an item.
            Docs: <see href="https://vk.com/dev/market.edit">market.edit</see>
            </summary>
            <param name="ownerId">ID of an item owner community.</param>
            <param name="itemId">Item ID.</param>
            <param name="name">Item name.</param>
            <param name="description">Item description.</param>
            <param name="categoryId">Item category ID.</param>
            <param name="price">Item price.</param>
            <param name="deleted">Item status ('1' — deleted, '0' — not deleted).</param>
            <param name="mainPhotoId">Cover photo ID.</param>
            <param name="photoIds">IDs of additional photos.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Market.Delete(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes an item.
            Docs: <see href="https://vk.com/dev/market.delete">market.delete</see>
            </summary>
            <param name="ownerId">ID of an item owner community.</param>
            <param name="itemId">Item ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Market.Restore(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Restores recently deleted item
            Docs: <see href="https://vk.com/dev/market.restore">market.restore</see>
            </summary>
            <param name="ownerId">ID of an item owner community.</param>
            <param name="itemId">Deleted item ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Market.ReorderItems(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Changes item place in a collection.
            Docs: <see href="https://vk.com/dev/market.reorderItems">market.reorderItems</see>
            </summary>
            <param name="ownerId">ID of an item owner community.</param>
            <param name="albumId">ID of a collection to reorder items in. Set 0 to reorder full items list.</param>
            <param name="itemId">Item ID.</param>
            <param name="before">ID of an item to place current item before it.</param>
            <param name="after">ID of an item to place current item after it.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Market.ReorderAlbums(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Reorders the collections list.
            Docs: <see href="https://vk.com/dev/market.reorderAlbums">market.reorderAlbums</see>
            </summary>
            <param name="ownerId">ID of an item owner community.</param>
            <param name="albumId">Collection ID.</param>
            <param name="before">ID of a collection to place current collection before it.</param>
            <param name="after">ID of a collection to place current collection after it.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Market.AddAlbum(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Creates new collection of items
            Docs: <see href="https://vk.com/dev/market.addAlbum">market.addAlbum</see>
            </summary>
            <param name="ownerId">ID of an item owner community.</param>
            <param name="title">Collection title.</param>
            <param name="photoId">Cover photo ID.</param>
            <param name="mainAlbum">Set as main ('1' – set, '0' – no).</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Market.EditAlbum(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Edits a collection of items
            Docs: <see href="https://vk.com/dev/market.editAlbum">market.editAlbum</see>
            </summary>
            <param name="ownerId">ID of an collection owner community.</param>
            <param name="albumId">Collection ID.</param>
            <param name="title">Collection title.</param>
            <param name="photoId">Cover photo id</param>
            <param name="mainAlbum">Set as main ('1' – set, '0' – no).</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Market.DeleteAlbum(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes a collection of items.
            Docs: <see href="https://vk.com/dev/market.deleteAlbum">market.deleteAlbum</see>
            </summary>
            <param name="ownerId">ID of an collection owner community.</param>
            <param name="albumId">Collection ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Market.RemoveFromAlbum(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Removes an item from one or multiple collections.
            Docs: <see href="https://vk.com/dev/market.removeFromAlbum">market.removeFromAlbum</see>
            </summary>
            <param name="ownerId">ID of an item owner community.</param>
            <param name="itemId">Item ID.</param>
            <param name="albumIds">Collections IDs to remove item from.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Market.AddToAlbum(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Adds an item to one or multiple collections.
            Docs: <see href="https://vk.com/dev/market.addToAlbum">market.addToAlbum</see>
            </summary>
            <param name="ownerId">ID of an item owner community.</param>
            <param name="itemId">Item ID.</param>
            <param name="albumIds">Collections IDs to add item to.</param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Messages">
            <summary>
            Messages API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.Get(System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of the current user's incoming or outgoing private messages.
            Docs: <see href="https://vk.com/dev/messages.get">messages.get</see>
            </summary>
            <param name="out_">'1' — to return outgoing messages; '0' — to return incoming messages (default)</param>
            <param name="offset">Offset needed to return a specific subset of messages.</param>
            <param name="count">Number of messages to return.</param>
            <param name="timeOffset">
            Maximum time since a message was sent, in seconds. To return messages without a time
            limitation, set as '0'.
            </param>
            <param name="previewLength">
            Number of characters after which to truncate a previewed message. To preview the full
            message, specify '0'.; "NOTE: Messages are not truncated by default. Messages are truncated by words."
            </param>
            <param name="lastMessageId">
            ID of the message received before the message that will be returned last (provided that
            no more than 'count' messages were received before it; otherwise 'offset' parameter shall be used).
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.GetDialogs(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of the current user's conversations.
            Docs: <see href="https://vk.com/dev/messages.getDialogs">messages.getDialogs</see>
            </summary>
            <param name="offset">Offset needed to return a specific subset of messages.</param>
            <param name="count">Number of messages to return.</param>
            <param name="startMessageId">ID of the message from what to return dialogs.</param>
            <param name="previewLength">
            Number of characters after which to truncate a previewed message. To preview the full
            message, specify '0'.; "NOTE: Messages are not truncated by default. Messages are truncated by words."
            </param>
            <param name="unread">'1' — return unread messages only.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.GetById(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Returns messages by their IDs.
            Docs: <see href="https://vk.com/dev/messages.getById">messages.getById</see>
            </summary>
            <param name="messageIds">Message IDs.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.Search(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of the current user's private messages that match search criteria.
            Docs: <see href="https://vk.com/dev/messages.search">messages.search</see>
            </summary>
            <param name="q">Search query string.</param>
            <param name="peerId">
            Destination ID.; ; "For user:; 'User ID', e.g. '12345'.; ; For chat:; '2000000000' + 'chat_id',
            e.g. '2000000001'.; ; For community:; '- community ID', e.g. '-12345'.; "
            </param>
            <param name="date">Date to search message before in Unixtime.</param>
            <param name="count">Number of messages to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.GetHistory(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns message history for the specified user or group chat.
            Docs: <see href="https://vk.com/dev/messages.getHistory">messages.getHistory</see>
            </summary>
            <param name="offset">Offset needed to return a specific subset of messages.</param>
            <param name="count">Number of messages to return.</param>
            <param name="userId">ID of the user whose message history you want to return.</param>
            <param name="peerId"></param>
            <param name="startMessageId">Starting message ID from which to return history.</param>
            <param name="rev">
            Sort order:; '1' — return messages in chronological order.; '0' — return messages in reverse
            chronological order.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.GetHistoryAttachments(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns media files from the dialog or group chat.
            Docs: <see href="https://vk.com/dev/messages.getHistoryAttachments">messages.getHistoryAttachments</see>
            </summary>
            <param name="peerId">Peer ID.; ; "; For group chat:; '2000000000 + chat ID' ; ; For community:; '-community ID'"</param>
            <param name="mediaType">
            Type of media files to return:; *'photo';; *'video';; *'audio';; *'doc';;
            *'link'.;;*'market'.;;*'wall'.;;*'share'
            </param>
            <param name="startFrom">Message ID to start return results from.</param>
            <param name="count">Number of objects to return.</param>
            <param name="photoSizes">'1' — to return photo sizes in a</param>
            <param name="fields">Additional profile fields to return. </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.Send(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.String,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Sends a message.
            Docs: <see href="https://vk.com/dev/messages.send">messages.send</see>
            </summary>
            <param name="userId">User ID (by default — current user).</param>
            <param name="randomId">Unique identifier to avoid resending the message.</param>
            <param name="peerId">
            Destination ID.; ; "For user:; 'User ID', e.g. '12345'.; ; For chat:; '2000000000' + 'chat_id',
            e.g. '2000000001'.; ; For community:; '- community ID', e.g. '-12345'.; "
            </param>
            <param name="domain">User's short address (for example, 'illarionov').</param>
            <param name="chatId">ID of conversation the message will relate to.</param>
            <param name="userIds">IDs of message recipients (if new conversation shall be started).</param>
            <param name="message">(Required if 'attachments' is not set.) Text of the message.</param>
            <param name="lat">Geographical latitude of a check-in, in degrees (from -90 to 90).</param>
            <param name="long_">Geographical longitude of a check-in, in degrees (from -180 to 180).</param>
            <param name="attachment">
            (Required if 'message' is not set.) List of objects attached to the message, separated by commas, in the following
            format:; "%owner_id%_%media_id%"; '' — Type of media attachment:; 'photo' — photo; 'video' — video; 'audio' — audio; 'doc' —
            document; 'wall' — wall post; '%owner_id%' — ID of the media attachment owner.; '%media_id%' — media attachment ID.; ; Example:; "photo100172_166443618"
            </param>
            <param name="forwardMessages">
            ID of forwarded messages, separated with a comma. Listed messages of the sender will be
            shown in the message body at the recipient's.; ; Example:; "123,431,544"
            </param>
            <param name="stickerId">Sticker id.</param>
            <param name="notification">'1' if the message is a notification (for community messages).</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.Delete(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Nullable{System.Boolean})">
            <summary>
            Deletes one or more messages.
            Docs: <see href="https://vk.com/dev/messages.delete">messages.delete</see>
            </summary>
            <param name="messageIds">Message IDs.</param>
            <param name="spam">'1' — to mark message as spam.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.DeleteDialog(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes all private messages in a conversation.
            Docs: <see href="https://vk.com/dev/messages.deleteDialog">messages.deleteDialog</see>
            </summary>
            <param name="userId">User ID. To clear a chat history use 'chat_id'</param>
            <param name="peerId">
            Destination ID.; ; "For user:; 'User ID', e.g. '12345'.; ; For chat:; '2000000000' + 'chat_id',
            e.g. '2000000001'.; ; For community:; '- community ID', e.g. '-12345'.; "
            </param>
            <param name="offset">Offset needed to return a specific subset of messages.</param>
            <param name="count">
            Number of messages to delete.; "NOTE: If the number of messages exceeds the maximum, the method
            shall be called several times."
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.Restore(System.Nullable{System.Int32})">
            <summary>
            Restores a deleted message.
            Docs: <see href="https://vk.com/dev/messages.restore">messages.restore</see>
            </summary>
            <param name="messageId">ID of a previously-deleted message to restore.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.MarkAsRead(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.String,System.Nullable{System.Int32})">
            <summary>
            Marks messages as read.
            Docs: <see href="https://vk.com/dev/messages.markAsRead">messages.markAsRead</see>
            </summary>
            <param name="messageIds">IDs of messages to mark as read.</param>
            <param name="peerId">
            Destination ID.; ; "For user:; 'User ID', e.g. '12345'.; ; For chat:; '2000000000' + 'chat_id',
            e.g. '2000000001'.; ; For community:; '- community ID', e.g. '-12345'.; "
            </param>
            <param name="startMessageId">Message ID to start from.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.MarkAsImportant(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Nullable{System.Int32})">
            <summary>
            Marks and unmarks messages as important (starred).
            Docs: <see href="https://vk.com/dev/messages.markAsImportant">messages.markAsImportant</see>
            </summary>
            <param name="messageIds">IDs of messages to mark as important.</param>
            <param name="important">'1' — to add a star (mark as important); '0' — to remove the star</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.GetLongPollServer(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Returns data required for connection to a Long Poll server.
            Docs: <see href="https://vk.com/dev/messages.getLongPollServer">messages.getLongPollServer</see>
            </summary>
            <param name="useSsl">'1' — to use SSL.</param>
            <param name="needPts">
            '1' — to return the 'pts' field, needed for the
            messages.getLongPollHistory method.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.GetLongPollHistory(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns updates in user's private messages.
            Docs: <see href="https://vk.com/dev/messages.getLongPollHistory">messages.getLongPollHistory</see>
            </summary>
            <param name="ts">
            Last value of the 'ts' parameter returned from the Long Poll server or by using
            messages.getLongPollHistory method.
            </param>
            <param name="pts">
            Lsat value of 'pts' parameter returned from the Long Poll server or by using
            messages.getLongPollHistory method.
            </param>
            <param name="previewLength">
            Number of characters after which to truncate a previewed message. To preview the full
            message, specify '0'.; "NOTE: Messages are not truncated by default. Messages are truncated by words."
            </param>
            <param name="onlines">'1' — to return history with online users only.</param>
            <param name="fields">Additional profile fields to return.</param>
            <param name="eventsLimit">Maximum number of events to return.</param>
            <param name="msgsLimit">Maximum number of messages to return.</param>
            <param name="maxMsgId">
            Maximum ID of the message among existing ones in the local copy. Both messages received with
            API methods (for example, , ), and data received from a Long Poll server (events with code 4) are taken into
            account.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.GetChat(System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Returns information about a chat.
            Docs: <see href="https://vk.com/dev/messages.getChat">messages.getChat</see>
            </summary>
            <param name="chatId">Chat ID.</param>
            <param name="chatIds">Chat IDs.</param>
            <param name="fields">Profile fields to return.;</param>
            <param name="nameCase">
            Case for declension of user name and surname:; 'nom' — nominative (default); 'gen' — genitive ;
            'dat' — dative; 'acc' — accusative ; 'ins' — instrumental ; 'abl' — prepositional
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.CreateChat(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.String)">
            <summary>
            Creates a chat with several participants.
            Docs: <see href="https://vk.com/dev/messages.createChat">messages.createChat</see>
            </summary>
            <param name="userIds">IDs of the users to be added to the chat.</param>
            <param name="title">Chat title.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.EditChat(System.Nullable{System.Int32},System.String)">
            <summary>
            Edits the title of a chat.
            Docs: <see href="https://vk.com/dev/messages.editChat">messages.editChat</see>
            </summary>
            <param name="chatId">Chat ID.</param>
            <param name="title">New title of the chat.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.GetChatUsers(System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Returns a list of IDs of users participating in a chat.
            Docs: <see href="https://vk.com/dev/messages.getChatUsers">messages.getChatUsers</see>
            </summary>
            <param name="chatId">Chat ID.</param>
            <param name="chatIds">Chat IDs.</param>
            <param name="fields">Profile fields to return.;</param>
            <param name="nameCase">
            Case for declension of user name and surname:; 'nom' — nominative (default); 'gen' — genitive;
            'dat' — dative; 'acc' — accusative; 'ins' — instrumental; 'abl' — prepositional
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.SetActivity(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Changes the status of a user as typing in a conversation.
            Docs: <see href="https://vk.com/dev/messages.setActivity">messages.setActivity</see>
            </summary>
            <param name="userId">User ID.</param>
            <param name="type">'typing' — user has started to type.</param>
            <param name="peerId">
            Destination ID.; ; "For user:; 'User ID', e.g. '12345'.; ; For chat:; '2000000000' + 'chat_id',
            e.g. '2000000001'.; ; For community:; '- community ID', e.g. '-12345'.; "
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.SearchDialogs(System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns a list of the current user's conversations that match search criteria.
            Docs: <see href="https://vk.com/dev/messages.searchDialogs">messages.searchDialogs</see>
            </summary>
            <param name="q">Search query string.</param>
            <param name="limit">Maximum number of results.</param>
            <param name="fields">Profile fields to return.;</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.AddChatUser(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Adds a new user to a chat.
            Docs: <see href="https://vk.com/dev/messages.addChatUser">messages.addChatUser</see>
            </summary>
            <param name="chatId">Chat ID.</param>
            <param name="userId">ID of the user to be added to the chat.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.RemoveChatUser(System.Nullable{System.Int32},System.String)">
            <summary>
            Allows the current user to leave a chat or, if the current user started the chat, allows the user to remove another
            user from the chat.
            Docs: <see href="https://vk.com/dev/messages.removeChatUser">messages.removeChatUser</see>
            </summary>
            <param name="chatId">Chat ID.</param>
            <param name="userId">ID of the user to be removed from the chat.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.GetLastActivity(System.Nullable{System.Int32})">
            <summary>
            Returns a user's current status and date of last activity.
            Docs: <see href="https://vk.com/dev/messages.getLastActivity">messages.getLastActivity</see>
            </summary>
            <param name="userId">User ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.SetChatPhoto(System.String)">
            <summary>
            Sets a previously-uploaded picture as the cover picture of a chat.
            Docs: <see href="https://vk.com/dev/messages.setChatPhoto">messages.setChatPhoto</see>
            </summary>
            <param name="file">
            Upload URL from the 'response' field returned by the
            photos.getChatUploadServer method upon successfully uploading an image.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.DeleteChatPhoto(System.Nullable{System.Int32})">
            <summary>
            Deletes a chat's cover picture.
            Docs: <see href="https://vk.com/dev/messages.deleteChatPhoto">messages.deleteChatPhoto</see>
            </summary>
            <param name="chatId">Chat ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.DenyMessagesFromCommunity(System.Nullable{System.Int32})">
            <summary>
            Denies sending message from community to the current user.
            Docs: <see href="https://vk.com/dev/messages.denyMessagesFromCommunity">messages.denyMessagesFromCommunity</see>
            </summary>
            <param name="groupId">Group ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.AllowMessagesFromCommunity(System.Nullable{System.Int32})">
            <summary>
            Allows sending messages from community to the current user.
            Docs: <see href="https://vk.com/dev/messages.allowMessagesFromCommunity">messages.allowMessagesFromCommunity</see>
            </summary>
            <param name="groupId">Group ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Messages.IsMessagesFromGroupAllowed(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns information whether sending messages from the community to current user is allowed.
            Docs: <see href="https://vk.com/dev/messages.isMessagesFromGroupAllowed">messages.isMessagesFromGroupAllowed</see>
            </summary>
            <param name="groupId">Group ID.</param>
            <param name="userId">User ID.</param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Newsfeed">
            <summary>
            Newsfeed API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Newsfeed.Get(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns data required to show newsfeed for the current user.
            Docs: <see href="https://vk.com/dev/newsfeed.get">newsfeed.get</see>
            </summary>
            <param name="filters">
            Filters to apply:; 'post' — new wall posts; 'photo' — new photos; 'photo_tag' — new photo tags;
            'wall_photo' — new wall photos; 'friend' — new friends; 'note' — new notes
            </param>
            <param name="returnBanned">'1' — to return news items from banned sources</param>
            <param name="startTime">Earliest timestamp (in Unix time) of a news item to return. By default, 24 hours ago.</param>
            <param name="endTime">Latest timestamp (in Unix time) of a news item to return. By default, the current time.</param>
            <param name="maxPhotos">Maximum number of photos to return. By default, '5'.</param>
            <param name="sourceIds">
            Sources to obtain news from, separated by commas.; ; User IDs can be specified in formats ''
            or 'u' ; where '' is the user's friend ID.; ; Community IDs can be specified in formats '-' or 'g' ; where '' is
            the community ID.; ; If the parameter is not set, all of the user's friends and communities are returned, except
            for banned sources, which can be obtained with the newsfeed.getBanned method.;
            </param>
            <param name="startFrom">
            identifier required to get the next page of results. ; Value for this parameter is returned in
            'next_from' field in a reply.
            </param>
            <param name="count">
            Number of news items to return (default 50; maximum 100). For auto feed, you can use the
            'new_offset' parameter returned by this method.
            </param>
            <param name="fields">
            Additional fields of communities to
            return.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Newsfeed.GetRecommended(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            ; Returns a list of newsfeeds recommended to the current user.
            Docs: <see href="https://vk.com/dev/newsfeed.getRecommended">newsfeed.getRecommended</see>
            </summary>
            <param name="startTime">Earliest timestamp (in Unix time) of a news item to return. By default, 24 hours ago.</param>
            <param name="endTime">Latest timestamp (in Unix time) of a news item to return. By default, the current time.</param>
            <param name="maxPhotos">Maximum number of photos to return. By default, '5'.</param>
            <param name="startFrom">'new_from' value obtained in previous call.</param>
            <param name="count">Number of news items to return.</param>
            <param name="fields">
            Additional fields of communities to
            return.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Newsfeed.GetComments(System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns a list of comments in the current user's newsfeed.
            Docs: <see href="https://vk.com/dev/newsfeed.getComments">newsfeed.getComments</see>
            </summary>
            <param name="count">
            Number of comments to return. For auto feed, you can use the 'new_offset' parameter returned by
            this method.
            </param>
            <param name="filters">
            Filters to apply:; 'post' — new comments on wall posts; 'photo' — new comments on photos; 'video'
            — new comments on videos; 'topic' — new comments on discussions; 'note' — new comments on notes;
            </param>
            <param name="reposts">
            Object ID, comments on repost of which shall be returned, e.g. 'wall1_45486'. (If the parameter
            is set, the 'filters' parameter is optional.);
            </param>
            <param name="startTime">Earliest timestamp (in Unix time) of a comment to return. By default, 24 hours ago.</param>
            <param name="endTime">Latest timestamp (in Unix time) of a comment to return. By default, the current time.</param>
            <param name="startFrom">
            Identificator needed to return the next page with results. Value for this parameter returns in
            'next_from' field.
            </param>
            <param name="fields">
            Additional fields of communities to
            return.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Newsfeed.GetMentions(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of posts on user walls in which the current user is mentioned.;
            Docs: <see href="https://vk.com/dev/newsfeed.getMentions">newsfeed.getMentions</see>
            </summary>
            <param name="ownerId">Owner ID.</param>
            <param name="startTime">Earliest timestamp (in Unix time) of a post to return. By default, 24 hours ago.;</param>
            <param name="endTime">Latest timestamp (in Unix time) of a post to return. By default, the current time.;</param>
            <param name="offset">Offset needed to return a specific subset of posts.</param>
            <param name="count">Number of posts to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Newsfeed.GetBanned(System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Returns a list of users and communities banned from the current user's newsfeed.
            Docs: <see href="https://vk.com/dev/newsfeed.getBanned">newsfeed.getBanned</see>
            </summary>
            <param name="extended">'1' — return extra information about users and communities</param>
            <param name="fields">Profile fields to return.; ;</param>
            <param name="nameCase">
            Case for declension of user name and surname:; 'nom' — nominative (default); 'gen' — genitive ;
            'dat' — dative; 'acc' — accusative ; 'ins' — instrumental ; 'abl' — prepositional
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Newsfeed.AddBan(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Prevents news from specified users and communities from appearing in the current user's newsfeed.
            Docs: <see href="https://vk.com/dev/newsfeed.addBan">newsfeed.addBan</see>
            </summary>
            <param name="userIds"></param>
            <param name="groupIds"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Newsfeed.DeleteBan(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Allows news from previously banned users and communities to be shown in the current user's newsfeed.
            Docs: <see href="https://vk.com/dev/newsfeed.deleteBan">newsfeed.deleteBan</see>
            </summary>
            <param name="userIds"></param>
            <param name="groupIds"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Newsfeed.IgnoreItem(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Hides an item from the newsfeed.
            Docs: <see href="https://vk.com/dev/newsfeed.ignoreItem">newsfeed.ignoreItem</see>
            </summary>
            <param name="type">
            Item type. Possible values:; *'wall' – post on the wall;; *'tag' – tag on a photo;; *'profilephoto'
            – profile photo;; *'video' – video;; *'audio' – audio.
            </param>
            <param name="ownerId">
            Item owner's identifier (user or community); "Note that community id must be negative. ;
            'owner_id=1' – user ; 'owner_id=-1' – community "
            </param>
            <param name="itemId">Item identifier</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Newsfeed.UnignoreItem(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a hidden item to the newsfeed.
            Docs: <see href="https://vk.com/dev/newsfeed.unignoreItem">newsfeed.unignoreItem</see>
            </summary>
            <param name="type">
            Item type. Possible values:; *'wall' – post on the wall;; *'tag' – tag on a photo;; *'profilephoto'
            – profile photo;; *'video' – video;; *'audio' – audio.
            </param>
            <param name="ownerId">
            Item owner's identifier (user or community); "Note that community id must be negative. ;
            'owner_id=1' – user ; 'owner_id=-1' – community "
            </param>
            <param name="itemId">Item identifier</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Newsfeed.Search(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns search results by statuses.;
            Docs: <see href="https://vk.com/dev/newsfeed.search">newsfeed.search</see>
            </summary>
            <param name="q">Search query string (e.g., 'New Year').</param>
            <param name="extended">'1' — to return additional information about the user or community that placed the post.</param>
            <param name="count">Number of posts to return.</param>
            <param name="latitude">Geographical latitude point (in degrees, -90 to 90) within which to search.;</param>
            <param name="longitude">Geographical longitude point (in degrees, -180 to 180) within which to search.;</param>
            <param name="startTime">Earliest timestamp (in Unix time) of a news item to return. By default, 24 hours ago.</param>
            <param name="endTime">Latest timestamp (in Unix time) of a news item to return. By default, the current time.</param>
            <param name="startFrom"></param>
            <param name="fields">
            Additional fields of communities to
            return.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Newsfeed.GetLists(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Returns a list of newsfeeds followed by the current user.
            Docs: <see href="https://vk.com/dev/newsfeed.getLists">newsfeed.getLists</see>
            </summary>
            <param name="listIds">numeric list identifiers.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Newsfeed.SaveList(System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Nullable{System.Boolean})">
            <summary>
            Creates and edits user newsfeed lists
            Docs: <see href="https://vk.com/dev/newsfeed.saveList">newsfeed.saveList</see>
            </summary>
            <param name="listId">numeric list identifier (if not sent, will be set automatically).</param>
            <param name="title">list name.</param>
            <param name="sourceIds">
            users and communities identifiers to be added to the list. Community identifiers must be
            negative numbers.
            </param>
            <param name="noReposts">reposts display on and off ('1' is for off).</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Newsfeed.DeleteList(System.Nullable{System.Int32})">
            <summary>
            Docs: <see href="https://vk.com/dev/newsfeed.deleteList">newsfeed.deleteList</see>
            </summary>
            <param name="listId"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Newsfeed.Unsubscribe(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Unsubscribes the current user from specified newsfeeds.
            Docs: <see href="https://vk.com/dev/newsfeed.unsubscribe">newsfeed.unsubscribe</see>
            </summary>
            <param name="type">
            Type of object from which to unsubscribe:; 'note' — note; 'photo' — photo; 'post' — post on user
            wall or community wall; 'topic' — topic; 'video' — video
            </param>
            <param name="ownerId">Object owner ID.</param>
            <param name="itemId">Object ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Newsfeed.GetSuggestedSources(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns communities and users that current user is suggested to follow.
            Docs: <see href="https://vk.com/dev/newsfeed.getSuggestedSources">newsfeed.getSuggestedSources</see>
            </summary>
            <param name="offset">offset required to choose a particular subset of communities or users.</param>
            <param name="count">amount of communities or users to return.</param>
            <param name="shuffle">shuffle the returned list or not.</param>
            <param name="fields">
            list of extra fields to be returned. See available fields for users and
            communities.
            </param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Notes">
            <summary>
            Notes API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Notes.Get(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of notes created by a user.
            Docs: <see href="https://vk.com/dev/notes.get">notes.get</see>
            </summary>
            <param name="noteIds">Note IDs.</param>
            <param name="userId">Note owner ID.</param>
            <param name="count">Number of notes to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Notes.GetById(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a note by its ID.
            Docs: <see href="https://vk.com/dev/notes.getById">notes.getById</see>
            </summary>
            <param name="noteId">Note ID.</param>
            <param name="ownerId">Note owner ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Notes.Add(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new note for the current user.
            Docs: <see href="https://vk.com/dev/notes.add">notes.add</see>
            </summary>
            <param name="title">Note title.</param>
            <param name="text">Note text.</param>
            <param name="privacyView"></param>
            <param name="privacyComment"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Notes.Edit(System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Edits a note of the current user.
            Docs: <see href="https://vk.com/dev/notes.edit">notes.edit</see>
            </summary>
            <param name="noteId">Note ID.</param>
            <param name="title">Note title.</param>
            <param name="text">Note text.</param>
            <param name="privacyView"></param>
            <param name="privacyComment"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Notes.Delete(System.Nullable{System.Int32})">
            <summary>
            Deletes a note of the current user.
            Docs: <see href="https://vk.com/dev/notes.delete">notes.delete</see>
            </summary>
            <param name="noteId">Note ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Notes.GetComments(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of comments on a note.
            Docs: <see href="https://vk.com/dev/notes.getComments">notes.getComments</see>
            </summary>
            <param name="noteId">Note ID.</param>
            <param name="ownerId">Note owner ID.</param>
            <param name="count">Number of comments to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Notes.CreateComment(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Adds a new comment on a note.
            Docs: <see href="https://vk.com/dev/notes.createComment">notes.createComment</see>
            </summary>
            <param name="noteId">Note ID.</param>
            <param name="ownerId">Note owner ID.</param>
            <param name="replyTo">ID of the user to whom the reply is addressed (if the comment is a reply to another comment).;</param>
            <param name="message">Comment text.</param>
            <param name="guid"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Notes.EditComment(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Edits a comment on a note.
            Docs: <see href="https://vk.com/dev/notes.editComment">notes.editComment</see>
            </summary>
            <param name="commentId">Comment ID.</param>
            <param name="ownerId">Note owner ID.</param>
            <param name="message">New comment text.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Notes.DeleteComment(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes a comment on a note.
            Docs: <see href="https://vk.com/dev/notes.deleteComment">notes.deleteComment</see>
            </summary>
            <param name="commentId">Comment ID.</param>
            <param name="ownerId">Note owner ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Notes.RestoreComment(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Restores a deleted comment on a note.
            Docs: <see href="https://vk.com/dev/notes.restoreComment">notes.restoreComment</see>
            </summary>
            <param name="commentId">Comment ID.</param>
            <param name="ownerId">Note owner ID.</param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Notifications">
            <summary>
            Notifications API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Notifications.Get(System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of notifications about other users' feedback to the current user's wall posts.
            Docs: <see href="https://vk.com/dev/notifications.get">notifications.get</see>
            </summary>
            <param name="count">Number of notifications to return.</param>
            <param name="startFrom"></param>
            <param name="filters">
            Type of notifications to return:; 'wall' — wall posts; 'mentions' — mentions in wall posts,
            comments, or topics; 'comments' — comments to wall posts, photos, and videos; 'likes' — likes; 'reposted' — wall
            posts that are copied from the current user's wall; 'followers' — new followers; 'friends' — accepted friend
            requests
            </param>
            <param name="startTime">Earliest timestamp (in Unix time) of a notification to return. By default, 24 hours ago.</param>
            <param name="endTime">Latest timestamp (in Unix time) of a notification to return. By default, the current time.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Notifications.MarkAsViewed">
            <summary>
            Resets the counter of new notifications about other users' feedback to the current user's wall posts.
            Docs: <see href="https://vk.com/dev/notifications.markAsViewed">notifications.markAsViewed</see>
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Methods.Orders">
            <summary>
            Orders API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Orders.Get(System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of orders.
            Docs: <see href="https://vk.com/dev/orders.get">orders.get</see>
            </summary>
            <param name="count">number of returned orders.</param>
            <param name="testMode">if this parameter is set to 1, this method returns a list of test mode orders. By default — 0.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Orders.GetById(System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Nullable{System.Boolean})">
            <summary>
            Returns information about orders by their IDs.
            Docs: <see href="https://vk.com/dev/orders.getById">orders.getById</see>
            </summary>
            <param name="orderId">order ID.</param>
            <param name="orderIds">order IDs (when information about several orders is requested).</param>
            <param name="testMode">if this parameter is set to 1, this method returns a list of test mode orders. By default — 0.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Orders.ChangeState(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Changes order status.
            Docs: <see href="https://vk.com/dev/orders.changeState">orders.changeState</see>
            </summary>
            <param name="orderId">order ID.</param>
            <param name="action">
            action to be done with the order. ; ; Available actions:; *cancel — to cancel unconfirmed order.;
            *charge — to confirm unconfirmed order. Applies only if processing of
            order_change_state notification failed.; *refund — to cancel confirmed order.;
            </param>
            <param name="appOrderId">internal ID of the order in the application.</param>
            <param name="testMode">if this parameter is set to 1, this method returns a list of test mode orders. By default — 0.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Orders.GetAmount(System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Docs: <see href="https://vk.com/dev/orders.getAmount">orders.getAmount</see>
            </summary>
            <param name="userId"></param>
            <param name="votes"></param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Pages">
            <summary>
            Pages API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Pages.Get(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Returns information about a wiki page.
            Docs: <see href="https://vk.com/dev/pages.get">pages.get</see>
            </summary>
            <param name="ownerId">Page owner ID.</param>
            <param name="pageId">Wiki page ID.</param>
            <param name="global">'1' — to return information about a global wiki page</param>
            <param name="sitePreview">'1' — resulting wiki page is a preview for the attached link</param>
            <param name="title">Wiki page title.</param>
            <param name="needSource"></param>
            <param name="needHtml">'1' — to return the page as HTML;</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Pages.Save(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Saves the text of a wiki page.
            Docs: <see href="https://vk.com/dev/pages.save">pages.save</see>
            </summary>
            <param name="text">Text of the wiki page in wiki-format.</param>
            <param name="pageId">Wiki page ID. The 'title' parameter can be passed instead of 'pid'.</param>
            <param name="groupId">ID of the community that owns the wiki page.</param>
            <param name="userId"></param>
            <param name="title">Wiki page title.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Pages.SaveAccess(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Saves modified read and edit access settings for a wiki page.
            Docs: <see href="https://vk.com/dev/pages.saveAccess">pages.saveAccess</see>
            </summary>
            <param name="pageId">Wiki page ID.</param>
            <param name="groupId">ID of the community that owns the wiki page.</param>
            <param name="userId"></param>
            <param name="view">
            Who can view the wiki page:; '1' — only community members; '2' — all users can view the page; '0' —
            only community managers
            </param>
            <param name="edit">
            Who can edit the wiki page:; '1' — only community members; '2' — all users can edit the page; '0' —
            only community managers
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Pages.GetHistory(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of all previous versions of a wiki page.
            Docs: <see href="https://vk.com/dev/pages.getHistory">pages.getHistory</see>
            </summary>
            <param name="pageId">Wiki page ID.</param>
            <param name="groupId">ID of the community that owns the wiki page.</param>
            <param name="userId"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Pages.GetTitles(System.Nullable{System.Int32})">
            <summary>
            Returns a list of wiki pages in a group.
            Docs: <see href="https://vk.com/dev/pages.getTitles">pages.getTitles</see>
            </summary>
            <param name="groupId">ID of the community that owns the wiki page.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Pages.GetVersion(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns the text of one of the previous versions of a wiki page.
            Docs: <see href="https://vk.com/dev/pages.getVersion">pages.getVersion</see>
            </summary>
            <param name="versionId"></param>
            <param name="groupId">ID of the community that owns the wiki page.</param>
            <param name="userId"></param>
            <param name="needHtml">'1' — to return the page as HTML</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Pages.ParseWiki(System.String,System.Nullable{System.Int32})">
            <summary>
            Returns HTML representation of the wiki markup.
            Docs: <see href="https://vk.com/dev/pages.parseWiki">pages.parseWiki</see>
            </summary>
            <param name="text">Text of the wiki page.</param>
            <param name="groupId">ID of the group in the context of which this markup is interpreted.;</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Pages.ClearCache(System.String)">
            <summary>
            Allows to clear the cache of particular 'external' pages which may be attached to VK posts.
            Docs: <see href="https://vk.com/dev/pages.clearCache">pages.clearCache</see>
            </summary>
            <param name="url">Address of the page where you need to refesh the cached version</param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Photos">
            <summary>
            Photos API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.Get(System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns photos given in photo_ids list.
            </summary>
            <param name="ownerId">Owner's id</param>
            <param name="albumId">Aldum id: wall, profile, saved</param>
            <param name="photoIds">Photo ids enumerable</param>
            <param name="rev">Reverce order or not</param>
            <param name="extended">Extended or not</param>
            <param name="feedType">photo, photo_tag</param>
            <param name="feed">time info</param>
            <param name="photoSizes">1 - return photo sizes, 0 - no</param>
            <param name="offset">offset info</param>
            <param name="count">count info</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.GetById(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Returns photos specified in photos enumerable.
            </summary>
            <param name="photos">Photo ids array</param>
            <param name="extended">Should vk return additional fields?</param>
            <param name="photoSizes">Return photo sizes or not</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.GetAlbums(System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of a user's or community's photo albums.
            </summary>
            <param name="ownerId">ID of the user or community that owns the albums.</param>
            <param name="albumIds">Album IDs. </param>
            <param name="offset">Offset needed to return a specific subset of albums.</param>
            <param name="count">Number of albums to return.</param>
            <param name="needSystem">true — to return system albums with negative IDs</param>
            <param name="needCovers">true — to return an additional thumb_src field </param>
            <param name="photoSizes">1 — to return photo sizes in a special format</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.GetChatUploadServer(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get chat upload server.
            Docs: <see href="https://vk.com/dev/photos.getChatUploadServer">photos.getChatUploadServer</see>
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.GetMessagesUploadServer">
            <summary>
            Get messages upload server.
            Docs: <see href="https://vk.com/dev/photos.getMessagesUploadServer">photos.getMessagesUploadServer</see>
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.GetOwnerPhotoUploadServer(System.Int32)">
            <summary>
            Gets owner photo upload server.
            Docs: <see href="https://vk.com/dev/photos.getOwnerPhotoUploadServer">photos.getOwnerPhotoUploadServer</see>
            </summary>
            <param name="ownerId">Owner id. Add "-" for groups.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.GetWallUploadServer(System.UInt32)">
            <summary>
            Get wall upload server.
            Docs: <see href="https://vk.com/dev/photos.getWallUploadServer">photos.getWallUploadServer</see>
            </summary>
            <param name="groupId">Group id.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.GetUploadServer(System.Int32,System.UInt32)">
            <summary>
            Get photos upload server.
            Docs: <see href="https://vk.com/dev/photos.getUploadServer">photos.getUploadServer</see>
            </summary>
            <param name="albumId">Album id.</param>
            <param name="groupId">Group id.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.Save(System.Nullable{System.Int32},System.Nullable{System.UInt32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String)">
            <summary>
            Saves photos after successful uploading.
            Docs: <see href="https://vk.com/dev/photos.save">photos.save</see>
            </summary>
            <param name="albumId">ID of the album to save photos to.</param>
            <param name="groupId">ID of the community to save photos to.</param>
            <param name="server">Parameter returned when photos are uploaded to server.</param>
            <param name="photosList">Parameter returned when photos are uploaded to server.</param>
            <param name="hash">Parameter returned when photos are uploaded to server.</param>
            <param name="latitude">Geographical latitude, in degrees (from '-90' to '90').</param>
            <param name="longitude">Geographical longitude, in degrees (from '-180' to '180').</param>
            <param name="caption">Text describing the photo. 2048 digits max.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.SaveWallPhoto(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String)">
            <summary>
            Saves wall photo after successful uploading.
            Docs: <see href="https://vk.com/dev/photos.saveWallPhoto">photos.save</see>
            </summary>
            <param name="userId">ID of the user to save photos to.</param>
            <param name="groupId">ID of the community to save photos to.</param>
            <param name="server">Parameter returned when photos are uploaded to server.</param>
            <param name="photo">Parameter returned when photos are uploaded to server.</param>
            <param name="hash">Parameter returned when photos are uploaded to server.</param>
            <param name="latitude">Geographical latitude, in degrees (from '-90' to '90').</param>
            <param name="longitude">Geographical longitude, in degrees (from '-180' to '180').</param>
            <param name="caption">Text describing the photo. 2048 digits max.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.Copy(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Allows to copy a photo to the "Saved photos" album
            Docs: <see href="https://vk.com/dev/photos.copy">photos.copy</see>
            </summary>
            <param name="ownerId">photo's owner ID</param>
            <param name="photoId">photo ID</param>
            <param name="accessKey">for private photos</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.Edit(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Edits the caption of a photo.
            Docs: <see href="https://vk.com/dev/photos.edit">photos.edit</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the photo.</param>
            <param name="photoId">Photo ID.</param>
            <param name="caption">
            New caption for the photo. If this parameter is not set, it is considered to be equal to an empty
            string.
            </param>
            <param name="latitude"></param>
            <param name="longitude"></param>
            <param name="placeStr"></param>
            <param name="foursquareId"></param>
            <param name="deletePlace"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.Move(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Moves a photo from one album to another.
            Docs: <see href="https://vk.com/dev/photos.move">photos.move</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the photo.</param>
            <param name="targetAlbumId">ID of the album to which the photo will be moved.</param>
            <param name="photoId">Photo ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.MakeCover(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Makes a photo into an album cover.
            Docs: <see href="https://vk.com/dev/photos.makeCover">photos.makeCover</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the photo.</param>
            <param name="photoId">Photo ID.</param>
            <param name="albumId">Album ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.ReorderAlbums(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Reorders the album in the list of user albums.
            Docs: <see href="https://vk.com/dev/photos.reorderAlbums">photos.reorderAlbums</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the album.</param>
            <param name="albumId">Album ID.</param>
            <param name="before">ID of the album before which the album in question shall be placed.</param>
            <param name="after">ID of the album after which the album in question shall be placed.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.ReorderPhotos(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Reorders the photo in the list of photos of the user album.
            Docs: <see href="https://vk.com/dev/photos.reorderPhotos">photos.reorderPhotos</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the photo.</param>
            <param name="photoId">Photo ID.</param>
            <param name="before">ID of the photo before which the photo in question shall be placed.</param>
            <param name="after">ID of the photo after which the photo in question shall be placed.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.GetAll(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of photos belonging to a user or community, in reverse chronological order.
            Docs: <see href="https://vk.com/dev/photos.getAll">photos.getAll</see>
            </summary>
            <param name="ownerId">
            ID of a user or community that owns the photos.; Use a negative value to designate a community
            ID.
            </param>
            <param name="extended">'1' — to return detailed information about photos</param>
            <param name="offset">Offset needed to return a specific subset of photos. By default, '0'.</param>
            <param name="count">Number of photos to return.</param>
            <param name="photoSizes">'1' – to return image sizes in special format.</param>
            <param name="noServiceAlbums">
            '1' – to return photos only from standard albums; '0' – to return all photos including
            those in service albums, e.g., 'My wall photos' (default)
            </param>
            <param name="needHidden">'1' – to show information about photos being hidden from the block above the wall.</param>
            <param name="skipHidden">
            '1' – not to return photos being hidden from the block above the wall. Works only with
            owner_id>0, no_service_albums is ignored.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.GetUserPhotos(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Returns a list of photos in which a user is tagged.
            Docs: <see href="https://vk.com/dev/photos.getUserPhotos">photos.getUserPhotos</see>
            </summary>
            <param name="userId">User ID.</param>
            <param name="offset">Offset needed to return a specific subset of photos. By default, '0'.</param>
            <param name="count">Number of photos to return. Maximum value is 1000.</param>
            <param name="extended">'1' — to return an additional 'likes' field; '0' — (default)</param>
            <param name="sort">
            Sort order:; '1' — by date the tag was added in ascending order; '0' — by date the tag was added in
            descending order
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.DeleteAlbum(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes a photo album belonging to the current user.
            Docs: <see href="https://vk.com/dev/photos.deleteAlbum">photos.deleteAlbum</see>
            </summary>
            <param name="albumId">Album ID.</param>
            <param name="groupId">ID of the community that owns the album.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.Delete(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes a photo.
            Docs: <see href="https://vk.com/dev/photos.delete">photos.delete</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the photo.</param>
            <param name="photoId">Photo ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.Restore(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Restores a deleted photo.
            Docs: <see href="https://vk.com/dev/photos.restore">photos.restore</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the photo.</param>
            <param name="photoId">Photo ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.ConfirmTag(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Confirms a tag on a photo.
            Docs: <see href="https://vk.com/dev/photos.confirmTag">photos.confirmTag</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the photo.</param>
            <param name="photoId">Photo ID.</param>
            <param name="tagId">Tag ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.GetComments(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns a list of comments on a photo.
            Docs: <see href="https://vk.com/dev/photos.getComments">photos.getComments</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the photo.</param>
            <param name="photoId">Photo ID.</param>
            <param name="needLikes">'1' — to return an additional 'likes' field; '0' — (default)</param>
            <param name="startCommentId"></param>
            <param name="offset">Offset needed to return a specific subset of comments. By default, '0'.</param>
            <param name="count">Number of comments to return.</param>
            <param name="sort">Sort order:; 'asc' — old first; 'desc' — new first</param>
            <param name="accessKey"></param>
            <param name="extended"></param>
            <param name="fields"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.GetAllComments(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of comments on a specific photo album or all albums of the user sorted in reverse chronological
            order.
            Docs: <see href="https://vk.com/dev/photos.getAllComments">photos.getAllComments</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the album(s).</param>
            <param name="albumId">Album ID. If the parameter is not set, comments on all of the user's albums will be returned.</param>
            <param name="needLikes">'1' — to return an additional 'likes' field; '0' — (default)</param>
            <param name="offset">Offset needed to return a specific subset of comments. By default, '0'.</param>
            <param name="count">Number of comments to return. By default, '20'. Maximum value, '100'.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.CreateComment(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Adds a new comment on the photo.
            Docs: <see href="https://vk.com/dev/photos.createComment">photos.createComment</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the photo.</param>
            <param name="photoId">Photo ID.</param>
            <param name="message">Comment text.</param>
            <param name="attachments">
            (Required if 'message' is not set.) List of objects attached to the post, in the following format:; 
            "%owner_id%_%media_id%, %owner_id%_%media_id%"; 
            '' — Type of media attachment:; 
            'photo' — photo; 
            'video' — video; 
            'audio' — audio; 
            'doc' — document; 
            '%owner_id%' — Media attachment owner ID.; 
            '%media_id%' — Media attachment ID.;
            Example:; "photo100172_166443618,photo66748_265827614"
            </param>
            <param name="fromGroup">'1' — to post a comment from the community</param>
            <param name="replyToComment"></param>
            <param name="stickerId"></param>
            <param name="accessKey"></param>
            <param name="guid"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.DeleteComment(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes a comment on the photo.
            Docs: <see href="https://vk.com/dev/photos.deleteComment">photos.deleteComment</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the photo.</param>
            <param name="commentId">Comment ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.RestoreComment(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Restores a deleted comment on a photo.
            Docs: <see href="https://vk.com/dev/photos.restoreComment">photos.restoreComment</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the photo.</param>
            <param name="commentId">ID of the deleted comment.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.EditComment(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Edits a comment on a photo.
            Docs: <see href="https://vk.com/dev/photos.editComment">photos.editComment</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the photo.</param>
            <param name="commentId">Comment ID.</param>
            <param name="message">New text of the comment.</param>
            <param name="attachments">
            (Required if 'message' is not set.) List of objects attached to the post, in the following format:; 
            "%owner_id%_%media_id%, %owner_id%_%media_id%"; 
            '' — Type of media attachment:; 
            'photo' — photo; 'video' — video; 'audio' — audio; 'doc' — document; 
            '%owner_id%' — Media attachment owner ID.; 
            '%media_id%' — Media attachment ID.;
            Example:; "photo100172_166443618,photo66748_265827614"
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.GetTags(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Returns a list of tags on a photo.
            Docs: <see href="https://vk.com/dev/photos.getTags">photos.getTags</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the photo.</param>
            <param name="photoId">Photo ID.</param>
            <param name="accessKey"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.PutTag(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Adds a tag on the photo.
            Docs: <see href="https://vk.com/dev/photos.putTag">photos.putTag</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the photo.</param>
            <param name="photoId">Photo ID.</param>
            <param name="userId">ID of the user to be tagged.</param>
            <param name="x">Upper left-corner coordinate of the tagged area (as a percentage of the photo's width).</param>
            <param name="y">Upper left-corner coordinate of the tagged area (as a percentage of the photo's height).</param>
            <param name="x2">Lower right-corner coordinate of the tagged area (as a percentage of the photo's width).</param>
            <param name="y2">Lower right-corner coordinate of the tagged area (as a percentage of the photo's height).</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.RemoveTag(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Removes a tag from a photo.
            Docs: <see href="https://vk.com/dev/photos.removeTag">photos.removeTag</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the photo.</param>
            <param name="photoId">Photo ID.</param>
            <param name="tagId">Tag ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Photos.GetNewTags(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of photos with tags that have not been viewed.
            Docs: <see href="https://vk.com/dev/photos.getNewTags">photos.getNewTags</see>
            </summary>
            <param name="offset">Offset needed to return a specific subset of photos.</param>
            <param name="count">Number of photos to return.</param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Places">
            <summary>
            Places API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Places.Add(System.Nullable{System.Int32},System.String,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Adds a new location to the location database.
            Docs: <see href="https://vk.com/dev/places.add">places.add</see>
            </summary>
            <param name="type">
            ID of the location's type (e.g., '1' — Home, '2' — Work). To get location type IDs, use the
            places.getTypes method.
            </param>
            <param name="title">Title of the location.</param>
            <param name="latitude">Geographical latitude, in degrees (from '-90' to '90').</param>
            <param name="longitude">Geographical longitude, in degrees (from '-180' to '180').</param>
            <param name="country">
            ID of the location's country. To get country IDs, use the
            database.getCountries method.
            </param>
            <param name="city">
            ID of the location's city. To get city IDs, use the
            database.getCities method.
            </param>
            <param name="address">Street address of the location (e.g., '125 Elm Street').</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Places.GetById(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Returns information about locations by their IDs.
            Docs: <see href="https://vk.com/dev/places.getById">places.getById</see>
            </summary>
            <param name="places">Location IDs.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Places.Search(System.String,System.Nullable{System.Int32},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of locations that match the search criteria.
            Docs: <see href="https://vk.com/dev/places.search">places.search</see>
            </summary>
            <param name="q">Search query string.</param>
            <param name="city">City ID.</param>
            <param name="latitude">Geographical latitude of the initial search point, in degrees (from '-90' to '90').</param>
            <param name="longitude">Geographical longitude of the initial search point, in degrees (from '-180' to '180').</param>
            <param name="radius">Radius of the search zone:; '1' — 100 m. (default); '2' — 800 m.; '3' — 6 km.; '4' — 50 km.</param>
            <param name="offset">Offset needed to return a specific subset of locations.</param>
            <param name="count">Number of locations to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Places.Checkin(System.Nullable{System.Int32},System.String,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Checks a user in at the specified location.
            Docs: <see href="https://vk.com/dev/places.checkin">places.checkin</see>
            </summary>
            <param name="placeId">Location ID.</param>
            <param name="text">Text of the comment on the check-in (255 characters maximum; line breaks not supported).</param>
            <param name="latitude">Geographical latitude of the check-in, in degrees (from '-90' to '90').</param>
            <param name="longitude">Geographical longitude of the check-in, in degrees (from '-180' to '180').</param>
            <param name="friendsOnly">
            '1' — Check-in will be available only for friends.; '0' — Check-in will be available for all
            users (default).
            </param>
            <param name="services">
            List of services or websites (e.g., 'twitter', 'facebook') to which the check-in will be
            exported, if the user has set up the respective option.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Places.GetCheckins(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of user check-ins at locations according to the set parameters.
            Docs: <see href="https://vk.com/dev/places.getCheckins">places.getCheckins</see>
            </summary>
            <param name="latitude">Geographical latitude of the initial search point, in degrees (from '-90' to '90').</param>
            <param name="longitude">Geographical longitude of the initial search point, in degrees (from '-180' to '180').</param>
            <param name="place">Location ID of check-ins to return. (Ignored if 'latitude' and 'longitude' are specified.)</param>
            <param name="userId"></param>
            <param name="offset">Offset needed to return a specific subset of check-ins. (Ignored if 'timestamp' is not null.)</param>
            <param name="count">Number of check-ins to return. (Ignored if 'timestamp' is not null.)</param>
            <param name="timestamp">Specifies that only those check-ins created after the specified timestamp will be returned.</param>
            <param name="friendsOnly">
            '1' — to return only check-ins with set geographical coordinates. (Ignored if 'latitude' and
            'longitude' are not set.)
            </param>
            <param name="needPlaces">'1' — to return location information with the check-ins. (Ignored if 'place' is not set.);</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Places.GetTypes">
            <summary>
            Returns a list of all types of locations.
            Docs: <see href="https://vk.com/dev/places.getTypes">places.getTypes</see>
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Methods.Polls">
            <summary>
            Polls API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Polls.GetById(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            Returns detailed information about a poll by its ID.
            Docs: <see href="https://vk.com/dev/polls.getById">polls.getById</see>
            </summary>
            <param name="ownerId">
            ID of the user or community that owns the poll. Use a negative value to designate a community ID.
            </param>
            <param name="isBoard">'1' – poll is in a board, '0' – poll is on a wall. ; '0' by default.</param>
            <param name="pollId">Poll ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Polls.AddVote(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Adds the current user's vote to the selected answer in the poll.
            Docs: <see href="https://vk.com/dev/polls.addVote">polls.addVote</see>
            </summary>
            <param name="ownerId">
            ID of the user or community that owns the poll. Use a negative value to designate a community
            ID.
            </param>
            <param name="pollId">Poll ID.</param>
            <param name="answerId">Answer ID.</param>
            <param name="isBoard"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Polls.DeleteVote(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Deletes the current user's vote from the selected answer in the poll.
            Docs: <see href="https://vk.com/dev/polls.deleteVote">polls.deleteVote</see>
            </summary>
            <param name="ownerId">
            ID of the user or community that owns the poll. Use a negative value to designate a community
            ID.
            </param>
            <param name="pollId">Poll ID.</param>
            <param name="answerId">Answer ID.</param>
            <param name="isBoard"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Polls.GetVoters(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Returns a list of IDs of users who selected specific answers in the poll.
            Docs: <see href="https://vk.com/dev/polls.getVoters">polls.getVoters</see>
            </summary>
            <param name="ownerId">
            ID of the user or community that owns the poll. Use a negative value to designate a community
            ID.
            </param>
            <param name="pollId">Poll ID.</param>
            <param name="answerIds">Answer IDs.</param>
            <param name="isBoard"></param>
            <param name="friendsOnly">'1' — to return only current user's friends; '0' — to return all users (default);</param>
            <param name="offset">Offset needed to return a specific subset of voters.; '0' — (default)</param>
            <param name="count">
            Number of user IDs to return (if the 'friends_only' parameter is not set, maximum '1000'; otherwise
            '10').; '100' — (default)
            </param>
            <param name="fields">
            Profile fields to return. Sample values: 'nickname', 'screen_name', 'sex', 'bdate (birthdate)',
            'city', 'country', 'timezone', 'photo', 'photo_medium', 'photo_big', 'has_mobile', 'rate', 'contacts', 'education',
            'online', 'counters'.;
            </param>
            <param name="nameCase">
            Case for declension of user name and surname: ; 'nom' — nominative (default) ; 'gen' — genitive
            ; 'dat' — dative ; 'acc' — accusative ; 'ins' — instrumental ; 'abl' — prepositional
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Polls.Create(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)">
            <summary>
            Creates polls that can be attached to the users' or communities' posts.
            Docs: <see href="https://vk.com/dev/polls.create">polls.create</see>
            </summary>
            <param name="question">question text</param>
            <param name="isAnonymous">
            '1' – anonymous poll, participants list is hidden;; '0' – public poll, participants list is
            available;; Default value is '0'.
            </param>
            <param name="ownerId">
            If a poll will be added to a communty it is required to send a negative group identifier.
            Current user by default.
            </param>
            <param name="addAnswers">
            available answers list, for example:; " ["yes","no","maybe"]"; There can be from 1 to 10
            answers.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Polls.Edit(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>
            Edits created polls
            Docs: <see href="https://vk.com/dev/polls.edit">polls.edit</see>
            </summary>
            <param name="ownerId">poll owner id</param>
            <param name="pollId">edited poll's id</param>
            <param name="question">new question text</param>
            <param name="addAnswers">answers list, for example: ; "["yes","no","maybe"]"</param>
            <param name="editAnswers">
            object containing answers that need to be edited;; key – answer id, value – new answer
            text.; Example:; {"382967099":"option1", "382967103":"option2"}"
            </param>
            <param name="deleteAnswers">list of answer ids to be deleted. For example:; "[382967099, 382967103]"</param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Search">
            <summary>
            Search API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Search.GetHints(System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean})">
            <summary>
            Allows the programmer to do a quick search for any substring.
            Docs: <see href="https://vk.com/dev/search.getHints">search.getHints</see>
            </summary>
            <param name="q">Search query string.</param>
            <param name="limit">Maximum number of results to return.</param>
            <param name="filters"></param>
            <param name="searchGlobal"></param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Secure">
            <summary>
            Secure API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Secure.CheckToken(System.String,System.String)">
            <summary>
            Checks the user authentication in 'IFrame' and 'Flash' apps using the 'access_token' parameter.
            Docs: <see href="https://vk.com/dev/secure.checkToken">secure.checkToken</see>
            </summary>
            <param name="token">client 'access_token'</param>
            <param name="ip">
            user 'ip address'. Note that user may access using the 'ipv6' address, in this case it is required to
            transmit the 'ipv6' address. ; If not transmitted, the address will not be checked.
            </param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Stats">
            <summary>
            Stats API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Stats.Get(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Returns statistics of a community or an application.
            Docs: <see href="https://vk.com/dev/stats.get">stats.get</see>
            </summary>
            <param name="groupId">Community ID.</param>
            <param name="appId">Application ID.</param>
            <param name="dateFrom">Latest datestamp (in Unix time) of statistics to return.</param>
            <param name="dateTo">End datestamp (in Unix time) of statistics to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Stats.TrackVisitor">
            <summary>
            Docs: <see href="https://vk.com/dev/stats.trackVisitor">stats.trackVisitor</see>
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Stats.GetPostReach(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns stats for a wall post.
            Docs: <see href="https://vk.com/dev/stats.getPostReach">stats.getPostReach</see>
            </summary>
            <param name="ownerId">post owner community id. Specify with "-" sign.</param>
            <param name="postId">
            wall post id. Note that stats are available only for '300' last (newest) posts on a community
            wall.
            </param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Status">
            <summary>
            Status API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Status.Get(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns data required to show the status of a user or community.
            Docs: <see href="https://vk.com/dev/status.get">status.get</see>
            </summary>
            <param name="userId">User ID or community ID. Use a negative value to designate a community ID.</param>
            <param name="groupId"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Status.Set(System.String,System.Nullable{System.Int32})">
            <summary>
            Sets a new status for the current user.
            Docs: <see href="https://vk.com/dev/status.set">status.set</see>
            </summary>
            <param name="text">Text of the new status.</param>
            <param name="groupId">Identifier of a community to set a status in. If left blank the status is set to current user.</param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Storage">
            <summary>
            Storage API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Storage.Get(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32})">
            <summary>
            Returns a value of variable with the name set by key parameter.
            Docs: <see href="https://vk.com/dev/storage.get">storage.get</see>
            </summary>
            <param name="key"></param>
            <param name="keys"></param>
            <param name="userId"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Storage.Set(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Saves a value of variable with the name set by 'key' parameter.
            Docs: <see href="https://vk.com/dev/storage.set">storage.set</see>
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="userId"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Storage.GetKeys(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns the names of all variables.
            Docs: <see href="https://vk.com/dev/storage.getKeys">storage.getKeys</see>
            </summary>
            <param name="userId">user id, whose variables names are returned if they were requested with a server method.</param>
            <param name="count">amount of variable names the info needs to be collected from.</param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Users">
            <summary>
            Users API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Users.Get(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Returns detailed information on users.
            Docs: <see href="https://vk.com/dev/users.get">users.get</see>
            </summary>
            <param name="userIds">User IDs or screen names ('screen_name'). By default, current user ID.</param>
            <param name="fields">
            Profile fields to return. Sample values: 'nickname', 'screen_name', 'sex', 'bdate' (birthdate),
            'city', 'country', 'timezone', 'photo', 'photo_medium', 'photo_big', 'has_mobile', 'contacts', 'education',
            'online', 'counters', 'relation', 'last_seen', 'activity', 'can_write_private_message', 'can_see_all_posts',
            'can_post', 'universities';
            </param>
            <param name="nameCase">
            Case for declension of user name and surname:; 'nom' — nominative (default); 'gen' — genitive ;
            'dat' — dative; 'acc' — accusative ; 'ins' — instrumental ; 'abl' — prepositional
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Users.Search(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns a list of users matching the search criteria.
            Docs: <see href="https://vk.com/dev/users.search">users.search</see>
            </summary>
            <param name="q">Search query string (e.g., 'Vasya Babich').</param>
            <param name="sort">Sort order:; '1' — by date registered; '0' — by rating</param>
            <param name="offset">Offset needed to return a specific subset of users.</param>
            <param name="count">Number of users to return.</param>
            <param name="fields">
            Profile fields to return. Sample values: 'nickname', 'screen_name', 'sex', 'bdate' (birthdate),
            'city', 'country', 'timezone', 'photo', 'photo_medium', 'photo_big', 'has_mobile', 'rate', 'contacts', 'education',
            'online';
            </param>
            <param name="city">City ID.</param>
            <param name="country">Country ID.</param>
            <param name="hometown">City name in a string.</param>
            <param name="universityCountry">ID of the country where the user graduated.</param>
            <param name="university">ID of the institution of higher education.</param>
            <param name="universityYear">Year of graduation from an institution of higher education.</param>
            <param name="universityFaculty">Faculty ID.</param>
            <param name="universityChair">Chair ID.</param>
            <param name="sex">'1' — female; '2' — male; '0' — any (default)</param>
            <param name="status">
            Relationship status:; '1' — Not married; '2' — In a relationship; '3' — Engaged; '4' — Married;
            '5' — It's complicated; '6' — Actively searching; '7' — In love
            </param>
            <param name="ageFrom">Minimum age.</param>
            <param name="ageTo">Maximum age.</param>
            <param name="birthDay">Day of birth.</param>
            <param name="birthMonth">Month of birth.</param>
            <param name="birthYear">Year of birth.</param>
            <param name="online">'1' — online only; '0' — all users</param>
            <param name="hasPhoto">'1' — with photo only; '0' — all users</param>
            <param name="schoolCountry">ID of the country where users finished school.</param>
            <param name="schoolCity">ID of the city where users finished school.</param>
            <param name="schoolClass"></param>
            <param name="school">ID of the school.</param>
            <param name="schoolYear">School graduation year.</param>
            <param name="religion">Users' religious affiliation.</param>
            <param name="interests">Users' interests.</param>
            <param name="company">Name of the company where users work.</param>
            <param name="position">Job position.</param>
            <param name="groupId">ID of a community to search in communities.</param>
            <param name="fromList"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Users.IsAppUser(System.Nullable{System.Int32})">
            <summary>
            Returns information whether a user installed the application.
            Docs: <see href="https://vk.com/dev/users.isAppUser">users.isAppUser</see>
            </summary>
            <param name="userId"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Users.GetSubscriptions(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns a list of IDs of users and communities followed by the user.
            Docs: <see href="https://vk.com/dev/users.getSubscriptions">users.getSubscriptions</see>
            </summary>
            <param name="userId">User ID.</param>
            <param name="extended">
            '1' — to return a combined list of users and communities; '0' — to return separate lists of
            users and communities (default)
            </param>
            <param name="offset">Offset needed to return a specific subset of subscriptions.</param>
            <param name="count">Number of users and communities to return.</param>
            <param name="fields"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Users.GetFollowers``1(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Returns a list of IDs of followers of the user in question, sorted by date added, most recent first.
            Docs: <see href="https://vk.com/dev/users.getFollowers">users.getFollowers</see>
            </summary>
            <param name="userId">User ID.</param>
            <param name="offset">Offset needed to return a specific subset of followers.</param>
            <param name="count">Number of followers to return.</param>
            <param name="fields">
            Profile fields to return. Sample values: 'nickname', 'screen_name', 'sex', 'bdate' (birthdate),
            'city', 'country', 'timezone', 'photo', 'photo_medium', 'photo_big', 'has_mobile', 'rate', 'contacts', 'education',
            'online'.;
            </param>
            <param name="nameCase">
            Case for declension of user name and surname:; 'nom' — nominative (default); 'gen' — genitive ;
            'dat' — dative; 'acc' — accusative ; 'ins' — instrumental ; 'abl' — prepositional
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Users.Report(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Reports (submits a complain about) a user.;
            Docs: <see href="https://vk.com/dev/users.report">users.report</see>
            </summary>
            <param name="userId">ID of the user about whom a complaint is being made.</param>
            <param name="type">
            Type of complaint:; 'porn' – pornography; 'spam' – spamming; 'insult' – abusive behavior;
            'advertisment' – disruptive advertisements
            </param>
            <param name="comment">Comment describing the complaint.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Users.GetNearby(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Indexes current user location and returns nearby users.
            Docs: <see href="https://vk.com/dev/users.getNearby">users.getNearby</see>
            </summary>
            <param name="latitude">geographic latitude of the place a user is located, in degrees (from -90 to 90)</param>
            <param name="longitude">geographic longitude of the place a user is located, in degrees (from -180 to 180)</param>
            <param name="accuracy">current location accuracy in meters</param>
            <param name="timeout">time when a user disappears from location search results, in seconds</param>
            <param name="radius">search zone radius type (1 to 4); :* 1 – 300 m;; :* 2 – 2400 m;; :* 3 – 18 km;; :* 4 – 150 km.</param>
            <param name="fields">
            list of additional fields to return.; Available values: sex, bdate, city, country, photo_50,
            photo_100, photo_200_orig, photo_200, photo_400_orig, photo_max, photo_max_orig, online, online_mobile, domain,
            has_mobile, contacts, connections, site, education, universities, schools, can_post, can_see_all_posts,
            can_see_audio, can_write_private_message, status, last_seen, common_count, relation, relatives, counters,
            screen_name, maiden_name, timezone, occupation
            </param>
            <param name="nameCase">
            Case for declension of user name and surname: ; nom –nominative (default) ; gen – genitive ;
            dat – dative ; acc – accusative ; ins – instrumental ; abl – prepositional
            </param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Utils">
            <summary>
            Utils API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Utils.CheckLink(System.String)">
            <summary>
            Checks whether a link is blocked in VK.
            Docs: <see href="https://vk.com/dev/utils.checkLink">utils.checkLink</see>
            </summary>
            <param name="url">Link to check (e.g., 'http://google.com').</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Utils.ResolveScreenName(System.String)">
            <summary>
            Detects a type of object (e.g., user, community, application) and its ID by screen name.
            Docs: <see href="https://vk.com/dev/utils.resolveScreenName">utils.resolveScreenName</see>
            </summary>
            <param name="screenName">
            Screen name of the user, community (e.g., 'apiclub,' 'andrew', or 'rules_of_war'), or
            application.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Utils.GetServerTime">
            <summary>
            Returns the current time of the VK server.
            Docs: <see href="https://vk.com/dev/utils.getServerTime">utils.getServerTime</see>
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Utils.GetShortLink(System.String,System.Nullable{System.Boolean})">
            <summary>
            Allows to receive a link shortened via vk.cc. 
            Docs: <see href="https://vk.com/dev/utils.getShortLink">utils.getShortLink</see>
            </summary>
            <param name="url">URL to be shortened.</param>
            <param name="private_"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Utils.GetLinkStats(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns stats data for shortened link. 
            Docs: <see href="https://vk.com/dev/utils.getLinkStats">utils.getLinkStats</see>
            </summary>
            <param name="key">Returns stats data for shortened link.</param>
            <param name="accessKey">Access key for private link stats</param>
            <param name="interval">Interval. Possible values: hour; day; week; month; forever.</param>
            <param name="intervalsCount">Number of intervals to return. </param>
            <param name="extended">
            1 — to return extended stats data (sex, age, geo).
             0 (by default) — to return views number only.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Utils.GetLastShortenedLinks(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of user's shortened links. 
            Docs: <see href="https://vk.com/dev/utils.getLastShortenedLinks">utils.getLastShortenedLinks</see>
            </summary>
            <param name="count">Number of links to return.</param>
            <param name="offset">Offset needed to return a specific subset of links.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Utils.DeleteFromLastShortened(System.String)">
            <summary>
            Deletes shortened link from user's list. 
            </summary>
            <param name="key">Link key (characters after "vk.cc"). </param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Video">
            <summary>
            Video API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.Get(System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns detailed information about videos.
            Docs: <see href="https://vk.com/dev/video.get">video.get</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the video(s).</param>
            <param name="videos">
            Video IDs, in the following format:; 
            "%owner_id%_%media_id%, %owner_id%_%media_id%";
            Use a negative value to designate a community ID.; 
            Example: "-4363_136089719,13245770_137352259"
            </param>
            <param name="albumId">ID of the album containing the video(s).</param>
            <param name="count">Number of videos to return.</param>
            <param name="offset">Offset needed to return a specific subset of videos.</param>
            <param name="extended">'1' — to return an extended response with additional fields</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.Edit(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Edits information about a video on a user or community page.
            Docs: <see href="https://vk.com/dev/video.edit">video.edit</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the video.</param>
            <param name="videoId">Video ID.</param>
            <param name="name">New video title.</param>
            <param name="desc">New video description.</param>
            <param name="privacyView">
            Privacy settings in a special format.; Privacy setting is
            available for videos uploaded to own profile by user.
            </param>
            <param name="privacyComment">Privacy settings for comments in a special format.</param>
            <param name="noComments">Disable comments for the group video.</param>
            <param name="repeat">'1' — to repeat the playback of the video; '0' — to play the video once;</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.Add(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Adds a video to a user or community page.
            Docs: <see href="https://vk.com/dev/video.add">video.add</see>
            </summary>
            <param name="targetId">
            identifier of a user or community to add a video to.; Use a negative value to designate a
            community ID.
            </param>
            <param name="videoId">Video ID.</param>
            <param name="ownerId">
            ID of the user or community that owns the video.; Use a negative value to designate a community
            ID.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.Save(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Returns a server address (required for upload) and video data.
            Docs: <see href="https://vk.com/dev/video.save">video.save</see>
            </summary>
            <param name="name">Name of the video.</param>
            <param name="description">Description of the video.</param>
            <param name="isPrivate">
            '1' — to designate the video as private (send it via a private message); the video will not
            appear on the user's video list and will not be available by ID for other users; '0' — not to designate the video
            as private
            </param>
            <param name="wallpost">
            '1' — to post the saved video on a user's wall; '0' — not to post the saved video on a user's
            wall
            </param>
            <param name="link">URL for embedding the video from an external website.</param>
            <param name="groupId">ID of the community in which the video will be saved. By default, the current user's page.</param>
            <param name="albumId">ID of the album to which the saved video will be added.</param>
            <param name="privacyView"></param>
            <param name="privacyComment"></param>
            <param name="noComments"></param>
            <param name="repeat">'1' — to repeat the playback of the video; '0' — to play the video once;</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.Delete(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes a video from a user or community page.
            Docs: <see href="https://vk.com/dev/video.delete">video.delete</see>
            </summary>
            <param name="videoId">Video ID.</param>
            <param name="ownerId">ID of the user or community that owns the video.</param>
            <param name="targetId"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.Restore(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Restores a previously deleted video.
            Docs: <see href="https://vk.com/dev/video.restore">video.restore</see>
            </summary>
            <param name="videoId">Video ID.</param>
            <param name="ownerId">ID of the user or community that owns the video.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.Search(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of videos under the set search criterion.
            Docs: <see href="https://vk.com/dev/video.search">video.search</see>
            </summary>
            <param name="q">Search query string (e.g., 'The Beatles').</param>
            <param name="sort">Sort order:; '1' — by duration; '2' — by relevance; '0' — by date added</param>
            <param name="hd">If not null, only searches for high-definition videos.</param>
            <param name="adult">'1' — to disable the Safe Search filter; '0' — to enable the Safe Search filter</param>
            <param name="filters">
            Filters to apply:; 'youtube' — return YouTube videos only; 'vimeo' — return Vimeo videos only;
            'short' — return short videos only; 'long' — return long videos only
            </param>
            <param name="searchOwn"></param>
            <param name="offset">Offset needed to return a specific subset of videos.</param>
            <param name="longer"></param>
            <param name="shorter"></param>
            <param name="count">Number of videos to return.</param>
            <param name="extended"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.GetUserVideos(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns list of videos in which the user is tagged.
            Docs: <see href="https://vk.com/dev/video.getUserVideos">video.getUserVideos</see>
            </summary>
            <param name="userId">User ID.</param>
            <param name="offset">Offset needed to return a specific subset of videos.</param>
            <param name="count">Number of videos to return.</param>
            <param name="extended"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.GetAlbums(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of video albums owned by a user or community.
            Docs: <see href="https://vk.com/dev/video.getAlbums">video.getAlbums</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the video album(s).</param>
            <param name="offset">Offset needed to return a specific subset of video albums.</param>
            <param name="count">Number of video albums to return.</param>
            <param name="extended">'1' — to return additional information about album privacy settings for the current user</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.GetAlbumById(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns video album info
            Docs: <see href="https://vk.com/dev/video.getAlbumById">video.getAlbumById</see>
            </summary>
            <param name="ownerId">
            identifier of a user or community to add a video to. ; Use a negative value to designate a
            community ID.
            </param>
            <param name="albumId">Album ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.AddAlbum(System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates an empty album for videos.
            Docs: <see href="https://vk.com/dev/video.addAlbum">video.addAlbum</see>
            </summary>
            <param name="groupId">Community ID (if the album will be created in a community).</param>
            <param name="title">Album title.</param>
            <param name="privacy">
            new access permissions for the album.; Possible values: ; *'0' – all users;; *'1' – friends
            only;; *'2' – friends and friends of friends;; *'3' – "only me".
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.EditAlbum(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Edits the title of a video album.
            Docs: <see href="https://vk.com/dev/video.editAlbum">video.editAlbum</see>
            </summary>
            <param name="groupId">Community ID (if the album edited is owned by a community).</param>
            <param name="albumId">Album ID.</param>
            <param name="title">New album title.</param>
            <param name="privacy">
            new access permissions for the album.; Possible values: ; *'0' – all users;; *'1' – friends
            only;; *'2' – friends and friends of friends;; *'3' – "only me".
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.DeleteAlbum(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes a video album.
            Docs: <see href="https://vk.com/dev/video.deleteAlbum">video.deleteAlbum</see>
            </summary>
            <param name="groupId">Community ID (if the album is owned by a community).</param>
            <param name="albumId">Album ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.ReorderAlbums(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Reorders the album in the list of user video albums.
            Docs: <see href="https://vk.com/dev/video.reorderAlbums">video.reorderAlbums</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the albums..</param>
            <param name="albumId">Album ID.</param>
            <param name="before">ID of the album before which the album in question shall be placed.</param>
            <param name="after">ID of the album after which the album in question shall be placed.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.ReorderVideos(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Reorders the video in the video album.
            Docs: <see href="https://vk.com/dev/video.reorderVideos">video.reorderVideos</see>
            </summary>
            <param name="targetId">ID of the user or community that owns the album with videos.</param>
            <param name="albumId">ID of the video album.</param>
            <param name="ownerId">ID of the user or community that owns the video.</param>
            <param name="videoId">ID of the video.</param>
            <param name="beforeOwnerId">
            ID of the user or community that owns the video before which the video in question shall
            be placed.
            </param>
            <param name="beforeVideoId">ID of the video before which the video in question shall be placed.</param>
            <param name="afterOwnerId">
            ID of the user or community that owns the video after which the photo in question shall be
            placed.
            </param>
            <param name="afterVideoId">ID of the video after which the photo in question shall be placed.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.AddToAlbum(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Docs: <see href="https://vk.com/dev/video.addToAlbum">video.addToAlbum</see>
            </summary>
            <param name="targetId"></param>
            <param name="albumId"></param>
            <param name="albumIds"></param>
            <param name="ownerId"></param>
            <param name="videoId"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.RemoveFromAlbum(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Docs: <see href="https://vk.com/dev/video.removeFromAlbum">video.removeFromAlbum</see>
            </summary>
            <param name="targetId"></param>
            <param name="albumId"></param>
            <param name="albumIds"></param>
            <param name="ownerId"></param>
            <param name="videoId"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.GetAlbumsByVideo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Docs: <see href="https://vk.com/dev/video.getAlbumsByVideo">video.getAlbumsByVideo</see>
            </summary>
            <param name="targetId"></param>
            <param name="ownerId"></param>
            <param name="videoId"></param>
            <param name="extended"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.GetComments(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Returns a list of comments on a video.
            Docs: <see href="https://vk.com/dev/video.getComments">video.getComments</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the video.</param>
            <param name="videoId">Video ID.</param>
            <param name="needLikes">'1' — to return an additional 'likes' field</param>
            <param name="startCommentId"></param>
            <param name="offset">Offset needed to return a specific subset of comments.</param>
            <param name="count">Number of comments to return.</param>
            <param name="sort">Sort order:; 'asc' — oldest comment first; 'desc' — newest comment first</param>
            <param name="extended"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.CreateComment(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Adds a new comment on a video.
            Docs: <see href="https://vk.com/dev/video.createComment">video.createComment</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the video.</param>
            <param name="videoId">Video ID.</param>
            <param name="message">New comment text.</param>
            <param name="attachments">
            (Required if 'message' is not set.) List of objects attached to the post, in the following format:; 
            "%owner_id%_%media_id%, %owner_id%_%media_id%"; 
            '' — Type of media attachment:; 
            'photo' — photo; 
            'video' — video; 
            'audio' — audio; 
            'doc' — document; 
            '%owner_id%' — Media attachment owner ID.; 
            '%media_id%' — Media attachment ID.;
            Example:; "photo100172_166443618,photo66748_265827614"
            </param>
            <param name="fromGroup">
            '1' — to post the comment from a community name (only if 'owner_id' is larger than 0)</param>
            <param name="replyToComment"></param>
            <param name="stickerId"></param>
            <param name="guid"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.DeleteComment(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes a comment on a video.
            Docs: <see href="https://vk.com/dev/video.deleteComment">video.deleteComment</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the video.</param>
            <param name="commentId">ID of the comment to be deleted.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.RestoreComment(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Restores a previously deleted comment on a video.
            Docs: <see href="https://vk.com/dev/video.restoreComment">video.restoreComment</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the video.</param>
            <param name="commentId">ID of the deleted comment.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.EditComment(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Edits the text of a comment on a video.
            Docs: <see href="https://vk.com/dev/video.editComment">video.editComment</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the video.</param>
            <param name="commentId">Comment ID.</param>
            <param name="message">New comment text.</param>
            <param name="attachments">
            (Required if 'message' is not set.) List of objects attached to the post, in the following format:; 
            "%owner_id%_%media_id%, %owner_id%_%media_id%"; 
            '' — Type of media attachment:; 
            'photo' — photo; 
            'video' — video; 
            'audio' — audio; 
            'doc' — document; 
            '%owner_id%' — Media attachment owner ID.; 
            '%media_id%' — Media attachment ID.;
            Example:; "photo100172_166443618,photo66748_265827614"
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.GetTags(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of tags on a video.
            Docs: <see href="https://vk.com/dev/video.getTags">video.getTags</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the video.</param>
            <param name="videoId">Video ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.PutTag(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Adds a tag on a video.
            Docs: <see href="https://vk.com/dev/video.putTag">video.putTag</see>
            </summary>
            <param name="userId">ID of the user to be tagged.</param>
            <param name="ownerId">ID of the user or community that owns the video.</param>
            <param name="videoId">Video ID.</param>
            <param name="taggedName">Tag text.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.RemoveTag(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Removes a tag from a video.
            Docs: <see href="https://vk.com/dev/video.removeTag">video.removeTag</see>
            </summary>
            <param name="tagId">Tag ID.</param>
            <param name="ownerId">ID of the user or community that owns the video.</param>
            <param name="videoId">Video ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.GetNewTags(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a list of videos with tags that have not been viewed.
            Docs: <see href="https://vk.com/dev/video.getNewTags">video.getNewTags</see>
            </summary>
            <param name="offset">Offset needed to return a specific subset of videos.</param>
            <param name="count">Number of videos to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.Report(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Reports (submits a complaint about) a video.
            Docs: <see href="https://vk.com/dev/video.report">video.report</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the video.</param>
            <param name="videoId">Video ID.</param>
            <param name="reason">
            Reason for the complaint:; '0' – spam; '1' – child pornography; '2' – extremism; '3' – violence;
            '4' – drug propaganda; '5' – adult material; '6' – insult; abuse
            </param>
            <param name="comment">Comment describing the complaint.</param>
            <param name="searchQuery">(If the video was found in search results.) Search query string.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.ReportComment(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Reports (submits a complaint about) a comment on a video.;
            Docs: <see href="https://vk.com/dev/video.reportComment">video.reportComment</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the video.</param>
            <param name="commentId">ID of the comment being reported.</param>
            <param name="reason">
            Reason for the complaint: ; 0 – spam ; 1 – child pornography ; 2 – extremism ; 3 – violence ; 4 –
            drug propaganda ; 5 – adult material ; 6 – insult; abuse
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.GetCatalog(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean})">
            <summary>
            Returns video catalog
            Docs: <see href="https://vk.com/dev/video.getCatalog">video.getCatalog</see>
            </summary>
            <param name="count">number of catalog blocks to return.</param>
            <param name="itemsCount">number of videos in each block.</param>
            <param name="from">
            parameter for requesting the next results page. Value for transmitting here is returned in the
            'next' field in a reply.
            </param>
            <param name="filters">list of requested catalog sections</param>
            <param name="extended">1 – return additional infor about users and communities in profiles and groups fields.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.GetCatalogSection(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns a separate catalog section
            Docs: <see href="https://vk.com/dev/video.getCatalogSection">video.getCatalogSection</see>
            </summary>
            <param name="sectionId">'id' value returned with a block by the '' method.</param>
            <param name="from">'next' value returned with a block by the '' method.</param>
            <param name="count">number of blocks to return.</param>
            <param name="extended">1 – return additional infor about users and communities in profiles and groups fields.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Video.HideCatalogSection(System.Nullable{System.Int32})">
            <summary>
            Hides a video catalog section from a user.
            Docs: <see href="https://vk.com/dev/video.hideCatalogSection">video.hideCatalogSection</see>
            </summary>
            <param name="sectionId">'id' value returned with a block to hide by the '' method.</param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Wall">
            <summary>
            Wall API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Wall.Get(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns a list of posts on a user wall or community wall.
            </summary>
            <param name="ownerId">
            ID of the user or community that owns the wall. By default, current user ID. Use a negative
            value to designate a community ID.
            </param>
            <param name="domain">User or community short address.</param>
            <param name="offset">Offset needed to return a specific subset of posts.</param>
            <param name="count">Number of posts to return (maximum 100).</param>
            <param name="filter">
            Filter to apply: 'owner' � posts by the wall owner; 'others' � posts by someone else; 'all' �
            posts by the wall owner and others (default); 'postponed' � timed posts (only available for calls with an
            'access_token'); 'suggests' � suggested posts on a community wall
            </param>
            <param name="extended">
            '1' � to return 'wall', 'profiles', and 'groups' fields; '0' � to return no additional fields
            (default)
            </param>
            <param name="fields"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Wall.Search(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Allows to search posts on user or community walls.
            </summary>
            <param name="ownerId">user or community id. Remember that for a community 'owner_id' must be negative.</param>
            <param name="domain">user or community screen name.</param>
            <param name="query">search query string.</param>
            <param name="ownersOnly">'1' � returns only page owner's posts.</param>
            <param name="count">count of posts to return.</param>
            <param name="extended">count of posts to return.</param>
            <param name="fields"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Wall.GetById(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns a list of posts from user or community walls by their IDs.
            Docs: <see href="https://vk.com/dev/wall.getById">wall.getById</see>
            </summary>
            <param name="posts">
            User or community IDs and post IDs, separated by underscores. Use a negative value to designate a
            community ID. Example:; "93388_21539,93388_20904,2943_4276,-1_1"
            </param>
            <param name="extended">
            '1' � to return user and community objects needed to display posts; '0' � no additional fields
            are returned (default)
            </param>
            <param name="copyHistoryDepth">
            Sets the number of parent elements to include in the array 'copy_history' that is
            returned if the post is a repost from another wall.
            </param>
            <param name="fields"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Wall.Post(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Adds a new post on a user wall or community wall. Can also be used to publish suggested or scheduled posts.
            Docs: <see href="https://vk.com/dev/wall.post">wall.post</see>
            </summary>
            <param name="ownerId">User ID or community ID. Use a negative value to designate a community ID.</param>
            <param name="friendsOnly">
            '1' � post will be available to friends only; '0' � post will be available to all users
            (default)
            </param>
            <param name="fromGroup">
            For a community:; '1' � post will be published by the community; '0' � post will be published
            by the user (default)
            </param>
            <param name="message">(Required if 'attachments' is not set.) Text of the post.</param>
            <param name="attachments">
            (Required if 'message' is not set.) List of objects attached to the post, in the following format:; 
            "%owner_id%_%media_id%, %owner_id%_%media_id%"; 
            '' � Type of media attachment:; 
            'photo' � photo; 
            'video' � video; 
            'audio' � audio; 
            'doc' � document; 
            '%owner_id%' � Media attachment owner ID.; 
            '%media_id%' � Media attachment ID.;
            Example:; "photo100172_166443618,photo66748_265827614"
            </param>
            <param name="services">
            List of services or websites the update will be exported to, if the user has so requested.
            Sample values: 'twitter', 'facebook'.
            </param>
            <param name="signed">
            Only for posts in communities with 'from_group' set to '1':; '1' � post will be signed with the
            name of the posting user; '0' � post will not be signed (default)
            </param>
            <param name="publishDate">Publication date (in Unix time). If used, posting will be delayed until the set time.</param>
            <param name="lat">Geographical latitude of a check-in, in degrees (from -90 to 90).</param>
            <param name="long_">Geographical longitude of a check-in, in degrees (from -180 to 180).</param>
            <param name="placeId">ID of the location where the user was tagged.</param>
            <param name="postId">Post ID. Used for publishing of scheduled and suggested posts.</param>
            <param name="guid"></param>
            <param name="markAsAds"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Wall.Repost(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Reposts (copies) an object to a user wall or community wall.
            Docs: <see href="https://vk.com/dev/wall.repost">wall.repost</see>
            </summary>
            <param name="object_">ID of the object to be reposted on the wall. Example:; "wall66748_3675"</param>
            <param name="message">Comment to be added along with the reposted object.</param>
            <param name="groupId">Target community ID when reposting to a community.</param>
            <param name="markAsAds"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Wall.GetReposts(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns information about reposts of a post on user wall or community wall.
            Docs: <see href="https://vk.com/dev/wall.getReposts">wall.getReposts</see>
            </summary>
            <param name="ownerId">
            User ID or community ID. By default, current user ID. Use a negative value to designate a
            community ID.
            </param>
            <param name="postId">Post ID.</param>
            <param name="offset">Offset needed to return a specific subset of reposts.</param>
            <param name="count">Number of reposts to return.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Wall.Edit(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Edits a post on a user wall or community wall.
            Docs: <see href="https://vk.com/dev/wall.edit">wall.edit</see>
            </summary>
            <param name="ownerId">User ID or community ID. Use a negative value to designate a community ID.</param>
            <param name="postId">Post ID.</param>
            <param name="friendsOnly">
            (Applies only when editing a scheduled post.); '1' � post will be available to friends only;
            '0' � post will be available to all users (default)
            </param>
            <param name="message">(Required if 'attachments' is not set.) Text of the post.</param>
            <param name="attachments">
            (Required if 'message' is not set.) List of objects attached to the post, in the following format:; 
            "%owner_id%_%media_id%, %owner_id%_%media_id%"; 
            '' � Type of media attachment:; 
            'photo' � photo; 
            'video' � video; 
            'audio' � audio; 
            'doc' � document; 
            '%owner_id%' � Media attachment owner ID.; 
            '%media_id%' � Media attachment ID.;
            Example:; "photo100172_166443618,photo66748_265827614,http://habrahabr.ru"
            </param>
            <param name="services">
            (Applies only to a scheduled post.) List of services or websites where status will be updated,
            if the user has so requested. Sample values: 'twitter', 'facebook'.
            </param>
            <param name="signed">
            (Applies only to a post that was created "as community" on a community wall.); '1' � to add the
            signature of the user who created the post
            </param>
            <param name="publishDate">
            (Applies only to a scheduled post.) Publication date (in Unix time). If used, posting will
            be delayed until the set time.
            </param>
            <param name="lat">Geographical latitude of the check-in, in degrees (from -90 to 90).</param>
            <param name="long_">Geographical longitude of the check-in, in degrees (from -180 to 180).</param>
            <param name="placeId">ID of the location where the user was tagged.</param>
            <param name="markAsAds"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Wall.Delete(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes a post from a user wall or community wall.
            Docs: <see href="https://vk.com/dev/wall.delete">wall.delete</see>
            </summary>
            <param name="ownerId">User ID or community ID. Use a negative value to designate a community ID.</param>
            <param name="postId">ID of the post to be deleted.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Wall.Restore(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Restores a post deleted from a user wall or community wall.
            Docs: <see href="https://vk.com/dev/wall.restore">wall.restore</see>
            </summary>
            <param name="ownerId">
            User ID or community ID from whose wall the post was deleted. Use a negative value to designate
            a community ID.
            </param>
            <param name="postId">ID of the post to be restored.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Wall.Pin(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Pins the post on wall.
            Docs: <see href="https://vk.com/dev/wall.pin">wall.pin</see>
            </summary>
            <param name="ownerId">
            ID of the user or community that owns the wall. By default, current user ID. Use a negative
            value to designate a community ID.
            </param>
            <param name="postId">Post ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Wall.Unpin(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Unpins the post on wall.
            Docs: <see href="https://vk.com/dev/wall.unpin">wall.unpin</see>
            </summary>
            <param name="ownerId">
            ID of the user or community that owns the wall. By default, current user ID. Use a negative
            value to designate a community ID.
            </param>
            <param name="postId">Post ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Wall.GetComments(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Returns a list of comments on a post on a user wall or community wall.
            Docs: <see href="https://vk.com/dev/wall.getComments">wall.getComments</see>
            </summary>
            <param name="ownerId">User ID or community ID. Use a negative value to designate a community ID.</param>
            <param name="postId">Post ID.</param>
            <param name="needLikes">'1' � to return the 'likes' field; '0' � not to return the 'likes' field (default)</param>
            <param name="startCommentId"></param>
            <param name="offset">Offset needed to return a specific subset of comments.</param>
            <param name="count">Number of comments to return (maximum 100).</param>
            <param name="sort">Sort order:; 'asc' � chronological; 'desc' � reverse chronological</param>
            <param name="previewLength">
            Number of characters at which to truncate comments when previewed. By default, '90'.
            Specify '0' if you do not want to truncate comments.;
            </param>
            <param name="extended"></param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Wall.CreateComment(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.String)">
            <summary>
            Adds a comment to a post on a user wall or community wall.
            Docs: <see href="https://vk.com/dev/wall.createComment">wall.createComment</see>
            </summary>
            <param name="ownerId">User ID or community ID. Use a negative value to designate a community ID.</param>
            <param name="postId">Post ID.</param>
            <param name="fromGroup">
            '1' � to post the comment as from the community;; '0' � (default) to post the comment as from
            the user.
            </param>
            <param name="message">(Required if 'attachments' is not set.) Text of the comment.</param>
            <param name="replyToComment">ID of comment to reply.</param>
            <param name="attachments">
            (Required if 'message' is not set.) List of objects attached to the post, in the following format:; 
            "%owner_id%_%media_id%, %owner_id%_%media_id%"; 
            '' � Type of media attachment:; 
            'photo' � photo; 
            'video' � video; 
            'audio' � audio; 
            'doc' � document; 
            '%owner_id%' � Media attachment owner ID.; 
            '%media_id%' � Media attachment ID.;
            Example:; "photo100172_166443618,photo66748_265827614"
            </param>
            <param name="stickerId">Sticker ID.</param>
            <param name="guid">Unique identifier to avoid repeated comments.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Wall.EditComment(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Edits a comment on a user wall or community wall.;
            Docs: <see href="https://vk.com/dev/wall.editComment">wall.editComment</see>
            </summary>
            <param name="ownerId">User ID or community ID. Use a negative value to designate a community ID.; ;</param>
            <param name="commentId">Comment ID.</param>
            <param name="message">New comment text.;</param>
            <param name="attachments">
            (Required if 'message' is not set.) List of objects attached to the post, in the following format:; 
            "%owner_id%_%media_id%, %owner_id%_%media_id%"; 
            '' � Type of media attachment:; 
            'photo' � photo; 
            'video' � video; 
            'audio' � audio; 
            'doc' � document; 
            '%owner_id%' � Media attachment owner ID.; 
            '%media_id%' � Media attachment ID.;
            Example:; "photo100172_166443618,photo66748_265827614"
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Wall.DeleteComment(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes a comment on a post on a user wall or community wall.;
            Docs: <see href="https://vk.com/dev/wall.deleteComment">wall.deleteComment</see>
            </summary>
            <param name="ownerId">User ID or community ID. Use a negative value to designate a community ID.;</param>
            <param name="commentId">Comment ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Wall.RestoreComment(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Restores a comment deleted from a user wall or community wall.;
            Docs: <see href="https://vk.com/dev/wall.restoreComment">wall.restoreComment</see>
            </summary>
            <param name="ownerId">User ID or community ID. Use a negative value to designate a community ID.</param>
            <param name="commentId">Comment ID.</param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Wall.ReportPost(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Reports (submits a complaint about) a post on a user wall or community wall.;
            Docs: <see href="https://vk.com/dev/wall.reportPost">wall.reportPost</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the wall.</param>
            <param name="postId">Post ID.</param>
            <param name="reason">
            Reason for the complaint:; '0' � spam; '1' � child pornography; '2' � extremism; '3' � violence;
            '4' � drug propaganda; '5' � adult material; '6' � insult; abuse
            </param>
        </member>
        <member name="M:VkLibrary.Core.Methods.Wall.ReportComment(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Reports (submits a complaint about) a comment on a post on a user wall or community wall.;
            Docs: <see href="https://vk.com/dev/wall.reportComment">wall.reportComment</see>
            </summary>
            <param name="ownerId">ID of the user or community that owns the wall.</param>
            <param name="commentId">Comment ID.</param>
            <param name="reason">
            Reason for the complaint:; '0' � spam; '1' � child pornography; '2' � extremism; '3' � violence;
            '4' � drug propaganda; '5' � adult material; '6' � insult; abuse
            </param>
        </member>
        <member name="T:VkLibrary.Core.Methods.Widgets">
            <summary>
            Widgets API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Widgets.GetComments(System.Nullable{System.Int32},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32})">
            <summary>
            Gets a list of comments for the page added through the Comments widget.
            Docs: <see href="https://vk.com/dev/widgets.getComments">widgets.getComments</see>
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Methods.Widgets.GetPages(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Gets a list of application/site pages where the Comments widget or Like widget is installed.
            Docs: <see href="https://vk.com/dev/widgets.getPages">widgets.getPages</see>
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Account.ChangePasswordResponse">
            <summary>
            API ChangePasswordResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Account.ChangePasswordResponse.Secret">
            <summary>
            New secret
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Account.ChangePasswordResponse.Token">
            <summary>
            New token
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Account.SaveProfileInfoResponse">
            <summary>
            API SaveProfileInfoResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Account.SaveProfileInfoResponse.Changed">
            <summary>
            1 if changes has been processed
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Account.SaveProfileInfoResponse.NameRequest">
            <summary>
            None
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Ads.CreateTargetGroupResponse">
            <summary>
            API CreateTargetGroupResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Ads.CreateTargetGroupResponse.Id">
            <summary>
            Group ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Ads.CreateTargetGroupResponse.Pixel">
            <summary>
            Pixel code
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Audio.AddAlbumResponse">
            <summary>
            API AddAlbumResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Audio.AddAlbumResponse.AlbumId">
            <summary>
            Created album ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Audio.GetUploadServerResponse">
            <summary>
            API GetUploadServerResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Audio.GetUploadServerResponse.UploadUrl">
            <summary>
            URL to upload the audio
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Auth.ConfirmResponse">
            <summary>
            API ConfirmResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Auth.ConfirmResponse.Success">
            <summary>
            1 if success
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Auth.ConfirmResponse.UserId">
            <summary>
            User ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Auth.RestoreResponse">
            <summary>
            API RestoreResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Auth.RestoreResponse.Success">
            <summary>
            1 if success
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Auth.RestoreResponse.Sid">
            <summary>
            Parameter needed to grant access by code
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Auth.SignupResponse">
            <summary>
            API SignupResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Auth.SignupResponse.Sid">
            <summary>
            Parameter to retry
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Docs.AddResponse">
            <summary>
            API AddResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Docs.AddResponse.Id">
            <summary>
            Doc ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Docs.GetUploadServerResponse">
            <summary>
            API GetUploadServerResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Docs.GetUploadServerResponse.UploadUrl">
            <summary>
            Upload URL
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Docs.GetWallUploadServerResponse">
            <summary>
            API GetWallUploadServerResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Docs.GetWallUploadServerResponse.UploadUrl">
            <summary>
            Upload URL
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Friends.AddListResponse">
            <summary>
            API AddListResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Friends.AddListResponse.ListId">
            <summary>
            List ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Friends.DeleteResponse">
            <summary>
            API DeleteResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Friends.DeleteResponse.SuggestionDeleted">
            <summary>
            Returns 1 if suggestion has been declined
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Friends.DeleteResponse.Success">
            <summary>
            None
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Friends.DeleteResponse.OutRequestDeleted">
            <summary>
            Returns 1 if out request has been canceled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Friends.DeleteResponse.InRequestDeleted">
            <summary>
            Returns 1 if incoming request has been declined
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Friends.DeleteResponse.FriendDeleted">
            <summary>
            Returns 1 if friend has been deleted
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Friends.GetOnlineOnlineMobileResponse">
            <summary>
            API GetOnlineOnlineMobileResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Friends.GetOnlineOnlineMobileResponse.Online">
            <summary>
            None
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Friends.GetOnlineOnlineMobileResponse.OnlineMobile">
            <summary>
            None
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Groups.EditPlaceResponse">
            <summary>
            API EditPlaceResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.EditPlaceResponse.Success">
            <summary>
            None
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.EditPlaceResponse.Address">
            <summary>
            Place address
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Groups.GetCallbackConfirmationCodeResponse">
            <summary>
            API GetCallbackConfirmationCodeResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCallbackConfirmationCodeResponse.Code">
            <summary>
            Confirmation code
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Groups.GetCallbackServerSettingsResponse">
            <summary>
            API GetCallbackServerSettingsResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCallbackServerSettingsResponse.ServerUrl">
            <summary>
            Server URL
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCallbackServerSettingsResponse.SecretKey">
            <summary>
            Callback API secret key
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Groups.GetCallbackSettingsResponse">
            <summary>
            API GetCallbackSettingsResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCallbackSettingsResponse.WallReplyEdit">
            <summary>
            Whether notifications about wall replies edits enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCallbackSettingsResponse.GroupLeave">
            <summary>
            Whether notifications about anyone left the community enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCallbackSettingsResponse.WallPostNew">
            <summary>
            Whether notifications about new wall posts enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCallbackSettingsResponse.BoardPostRestore">
            <summary>
            Whether notifications about board posts restores enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCallbackSettingsResponse.GroupJoin">
            <summary>
            Whether notifications about anyone joined the community enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCallbackSettingsResponse.MessageDeny">
            <summary>
            Whether notifications about denied messages enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCallbackSettingsResponse.MessageNew">
            <summary>
            Whether notifications about new message enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCallbackSettingsResponse.WallReplyNew">
            <summary>
            Whether notifications about new wall replies enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCallbackSettingsResponse.BoardPostNew">
            <summary>
            Whether notifications about new board posts enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCallbackSettingsResponse.VideoCommentNew">
            <summary>
            Whether notifications about new video comments enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCallbackSettingsResponse.VideoNew">
            <summary>
            Whether notifications about new videos enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCallbackSettingsResponse.BoardPostDelete">
            <summary>
            Whether notifications about board posts deleted enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCallbackSettingsResponse.MessageAllow">
            <summary>
            Whether notifications about allowed messages enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCallbackSettingsResponse.AudioNew">
            <summary>
            Whether notifications about new audios enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCallbackSettingsResponse.BoardPostEdit">
            <summary>
            Whether notifications about board posts edits enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCallbackSettingsResponse.PhotoNew">
            <summary>
            Whether notifications about new photos enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCallbackSettingsResponse.PhotoCommentNew">
            <summary>
            Whether notifications about new photo comments enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCallbackSettingsResponse.MarketCommentNew">
            <summary>
            Whether notifications about new market comments enabled
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Groups.GetCatalogInfoExtendedResponse">
            <summary>
            API GetCatalogInfoExtendedResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCatalogInfoExtendedResponse.Categories">
            <summary>
            None
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCatalogInfoExtendedResponse.Enabled">
            <summary>
            Information whether catalog is enabled for current user
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Groups.GetCatalogInfoResponse">
            <summary>
            API GetCatalogInfoResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCatalogInfoResponse.Categories">
            <summary>
            None
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.GetCatalogInfoResponse.Enabled">
            <summary>
            Information whether catalog is enabled for current user
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Groups.IsMemberExtendedResponse">
            <summary>
            API IsMemberExtendedResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.IsMemberExtendedResponse.Request">
            <summary>
            Information whether user has sent request to the group
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.IsMemberExtendedResponse.Member">
            <summary>
            Information whether user is a member of the group
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.IsMemberExtendedResponse.Invitation">
            <summary>
            Information whether user has been invited to the group
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Groups.SetCallbackServerResponse">
            <summary>
            API SetCallbackServerResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.SetCallbackServerResponse.StateCode">
            <summary>
            State code
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Groups.SetCallbackServerResponse.State">
            <summary>
            State
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Leads.MetricHitResponse">
            <summary>
            API MetricHitResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Leads.MetricHitResponse.RedirectLink">
            <summary>
            Redirect link
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Leads.MetricHitResponse.Result">
            <summary>
            Information whether request has been processed successfully
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Likes.AddResponse">
            <summary>
            API AddResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Likes.AddResponse.Likes">
            <summary>
            Total likes number
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Likes.DeleteResponse">
            <summary>
            API DeleteResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Likes.DeleteResponse.Likes">
            <summary>
            Total likes number
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Likes.IsLikedResponse">
            <summary>
            API IsLikedResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Likes.IsLikedResponse.Copied">
            <summary>
            Information whether user reposted the object
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Likes.IsLikedResponse.Liked">
            <summary>
            Information whether user liked the object
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Market.AddAlbumResponse">
            <summary>
            API AddAlbumResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Market.AddAlbumResponse.MarketAlbumId">
            <summary>
            Album ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Market.AddResponse">
            <summary>
            API AddResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Market.AddResponse.MarketItemId">
            <summary>
            Item ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Messages.DeleteChatPhotoResponse">
            <summary>
            API DeleteChatPhotoResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Messages.DeleteChatPhotoResponse.Chat">
            <summary>
            None
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Messages.DeleteChatPhotoResponse.MessageId">
            <summary>
            Service message ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Messages.GetLongPollHistoryResponse">
            <summary>
            API GetLongPollHistoryResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Messages.GetLongPollHistoryResponse.Messages">
            <summary>
            None
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Messages.GetLongPollHistoryResponse.History">
            <summary>
            None
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Messages.IsMessagesFromGroupAllowedResponse">
            <summary>
            API IsMessagesFromGroupAllowedResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Messages.IsMessagesFromGroupAllowedResponse.IsAllowed">
            <summary>
            None
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Messages.SetChatPhotoResponse">
            <summary>
            API SetChatPhotoResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Messages.SetChatPhotoResponse.Chat">
            <summary>
            None
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Messages.SetChatPhotoResponse.MessageId">
            <summary>
            Service message ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Newsfeed.GetBannedExtendedResponse">
            <summary>
            API GetBannedExtendedResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Newsfeed.GetBannedExtendedResponse.Groups">
            <summary>
            None
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Newsfeed.GetBannedExtendedResponse.Members">
            <summary>
            None
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Newsfeed.GetBannedResponse">
            <summary>
            API GetBannedResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Newsfeed.GetBannedResponse.Groups">
            <summary>
            None
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Newsfeed.GetBannedResponse.Members">
            <summary>
            None
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Newsfeed.NewsFeedResponse">
            <summary>
            API NewsFeedResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Newsfeed.NewsFeedResponse.Items">
            <summary>
            Posts list.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Newsfeed.NewsFeedResponse.Profiles">
            <summary>
            Users whose ids were referenced in posts.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Newsfeed.NewsFeedResponse.Groups">
            <summary>
            Groups whose ids were referenced in posts.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Newsfeed.NewsFeedResponse.NewOffset">
            <summary>
            New offset info.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Newsfeed.NewsFeedResponse.NextFrom">
            <summary>
            Pass this into Newsfeed.Get to get next news page.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Newsfeed.NewsFeedResponse.Count">
            <summary>
            Total items count (if API provides, otherwise null)
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Photos.GetChatUploadServerResponse">
            <summary>
            API GetChatUploadServerResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Photos.GetChatUploadServerResponse.UploadUrl">
            <summary>
            URL to upload the photo
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Photos.GetMarketAlbumUploadServerResponse">
            <summary>
            API GetMarketAlbumUploadServerResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Photos.GetMarketAlbumUploadServerResponse.UploadUrl">
            <summary>
            URL to upload the photo
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Photos.GetMarketUploadServerResponse">
            <summary>
            API GetMarketUploadServerResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Photos.GetMarketUploadServerResponse.UploadUrl">
            <summary>
            URL to upload the photo
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Photos.GetOwnerPhotoUploadServerResponse">
            <summary>
            API GetOwnerPhotoUploadServerResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Photos.GetOwnerPhotoUploadServerResponse.UploadUrl">
            <summary>
            URL to upload the photo
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Photos.SaveOwnerPhotoResponse">
            <summary>
            API SaveOwnerPhotoResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Photos.SaveOwnerPhotoResponse.PhotoHash">
            <summary>
            Parameter for saveProfilePhoto method
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Photos.SaveOwnerPhotoResponse.PhotoSrc">
            <summary>
            Uploaded image url
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Places.AddResponse">
            <summary>
            API AddResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Places.AddResponse.Id">
            <summary>
            Place ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Places.CheckinResponse">
            <summary>
            API CheckinResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Places.CheckinResponse.Id">
            <summary>
            Checkin ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Users.GetSubscriptionsResponse">
            <summary>
            API GetSubscriptionsResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Users.GetSubscriptionsResponse.Users">
            <summary>
            None
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Users.GetSubscriptionsResponse.Groups">
            <summary>
            None
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Video.AddAlbumResponse">
            <summary>
            API AddAlbumResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Video.AddAlbumResponse.AlbumId">
            <summary>
            Created album ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Wall.CommentsResponse">
            <summary>
            API CommentsResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Wall.CommentsResponse.Items">
            <summary>
            Comments list.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Wall.CommentsResponse.Profiles">
            <summary>
            Profiles referenced in comments list.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Wall.CommentsResponse.Groups">
            <summary>
            Groups referenced in comments list.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Wall.CommentsResponse.NewOffset">
            <summary>
            New offset.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Wall.CommentsResponse.NextFrom">
            <summary>
            Value used to view next comments page.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Wall.CommentsResponse.Count">
            <summary>
            Total comments count.
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Wall.CreateCommentResponse">
            <summary>
            API CreateCommentResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Wall.CreateCommentResponse.CommentId">
            <summary>
            Created comment ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Wall.PostResponse">
            <summary>
            API PostResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Wall.PostResponse.PostId">
            <summary>
            Created post ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Wall.RepostResponse">
            <summary>
            API RepostResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Wall.RepostResponse.PostId">
            <summary>
            Created post ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Wall.RepostResponse.Success">
            <summary>
            None
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Wall.RepostResponse.LikesCount">
            <summary>
            Reposts number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Wall.RepostResponse.RepostsCount">
            <summary>
            Reposts number
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Widgets.GetCommentsResponse">
            <summary>
            API GetCommentsResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Widgets.GetCommentsResponse.Posts">
            <summary>
            None
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Widgets.GetCommentsResponse.Count">
            <summary>
            Total number
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Responses.Widgets.GetPagesResponse">
            <summary>
            API GetPagesResponse.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Widgets.GetPagesResponse.Count">
            <summary>
            Total number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Responses.Widgets.GetPagesResponse.Pages">
            <summary>
            None
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Vkontakte">
            <summary>
            Vkontakte .NET API.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.DirectAuth">
            <summary>
            API part related to direct auth.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.UploadHelper">
            <summary>
            API files upload helper. Contains upload methods.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.OAuth">
            <summary>
            OAuth helpers API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Account">
            <summary>
            Account API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Ads">
            <summary>
            Ads API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Apps">
            <summary>
            Apps API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Audio">
            <summary>
            Audio API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Board">
            <summary>
            Board API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Database">
            <summary>
            Database API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Docs">
            <summary>
            Docs API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Fave">
            <summary>
            Fave API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Friends">
            <summary>
            Friends API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Gifts">
            <summary>
            Gifts API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Groups">
            <summary>
            Groups API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Leads">
            <summary>
            Leads API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Likes">
            <summary>
            Likes API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Market">
            <summary>
            Market API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Messages">
            <summary>
            Messages API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Newsfeed">
            <summary>
            Newsfeed API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Notes">
            <summary>
            Notes API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Notifications">
            <summary>
            Notifications API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Orders">
            <summary>
            Orders API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Pages">
            <summary>
            Pages API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Photos">
            <summary>
            Photos API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Places">
            <summary>
            Places API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Polls">
            <summary>
            Polls API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Search">
            <summary>
            Search API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Secure">
            <summary>
            Secure API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Stats">
            <summary>
            Stats API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Status">
            <summary>
            Status API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Storage">
            <summary>
            Storage API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Users">
            <summary>
            Users API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Utils">
            <summary>
            Utils API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Video">
            <summary>
            Video API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Wall">
            <summary>
            Wall API section.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Widgets">
            <summary>
            Widgets API section.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Vkontakte.#ctor(System.Int32,System.String,System.String,VkLibrary.Core.RequestMethod,VkLibrary.Core.ParseJson)">
            <summary>
            Initializes the library.
            </summary>
            <param name="appId">Unique VK app identifier. Get it at vk.com/dev -> App Settings</param>
            <param name="appSecret">App secret key. Used only with secure section methods and with direct auth.</param>
            <param name="apiVersion">API version the library is going to use. Min: 5.63</param>
            <param name="requestMethod">GET or POST requests the library should use?</param>
            <param name="parseJson">Should the library log received JSONs or focus on performance?</param>
        </member>
        <member name="M:VkLibrary.Core.Vkontakte.#ctor(System.Int32,VkLibrary.Core.Services.ILogger,System.String,System.String,VkLibrary.Core.RequestMethod,VkLibrary.Core.ParseJson)">
            <summary>
            Initializes the library with extended parameters.
            </summary>
            <param name="appId">Unique VK app identifier. Get it at vk.com/dev -> App Settings</param>
            <param name="appSecret">App secret key. Used only with secure section methods and with direct auth.</param>
            <param name="apiVersion">API version the library is going to use. Min: 5.63</param>
            <param name="requestMethod">GET or POST requests the library should use?</param>
            <param name="parseJson">Should the library log received JSONs or focus on performance?</param>
            <param name="logger">Logger the library should use. By default is logs info into DEBUG output.</param>
        </member>
        <member name="M:VkLibrary.Core.Vkontakte.#ctor(System.Int32,VkLibrary.Core.Services.IHttpService,System.String,System.String,VkLibrary.Core.RequestMethod,VkLibrary.Core.ParseJson)">
            <summary>
            Initializes the library with extended parameters.
            </summary>
            <param name="appId">Unique VK app identifier. Get it at vk.com/dev -> App Settings</param>
            <param name="appSecret">App secret key. Used only with secure section methods and with direct auth.</param>
            <param name="apiVersion">API version the library is going to use. Min: 5.63</param>
            <param name="requestMethod">GET or POST requests the library should use?</param>
            <param name="parseJson">Should the library log received JSONs or focus on performance?</param>
            <param name="httpService">
            HttpService the library should use. You can inject your own implementation of IHttpService 
            into the library if default one does not suite you for some reasons.
            </param>
        </member>
        <member name="M:VkLibrary.Core.Vkontakte.#ctor(System.Int32,VkLibrary.Core.Services.ILogger,VkLibrary.Core.Services.IHttpService,System.String,System.String,VkLibrary.Core.RequestMethod,VkLibrary.Core.ParseJson)">
            <summary>
            Initializes the library with extended parameters.
            </summary>
            <param name="appId">Unique VK app identifier. Get it at vk.com/dev -> App Settings</param>
            <param name="appSecret">App secret key. Used only with secure section methods and with direct auth.</param>
            <param name="apiVersion">API version the library is going to use. Min: 5.63</param>
            <param name="requestMethod">GET or POST requests the library should use?</param>
            <param name="parseJson">Should the library log received JSONs or focus on performance?</param>
            <param name="logger">Logger the library should use. By default is logs info into DEBUG output.</param>
            <param name="httpService">
            HttpService the library should use. You can inject your own implementation of IHttpService 
            into the library if default one does not suite you for some reasons.
            </param>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.HttpService">
            <summary>
            Http service which library uses to send requests.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.Logger">
            <summary>
            Logger that library uses to log information.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Vkontakte.RequestAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sends GET or POST request and deserializes response from STREAM or from LOGGABLE STRING 
            based on settings passed during initialization. Also supplies request with AccessToken, 
            Captcha, ApiVersion if these properties are not null. Throws ApiException if error 
            has been received from Vkontakte API servers. 
            </summary>
            <param name="method"></param>
            <param name="parameters"></param>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:VkLibrary.Core.ApiException"></exception>
        </member>
        <member name="M:VkLibrary.Core.Vkontakte.Deserialize``1(System.Uri,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sends POST or GET requests and deserializes objects from stream. If 
            </summary>
            <param name="url"></param>
            <param name="parameters"></param>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:VkLibrary.Core.Vkontakte.RequestForStream(System.Uri,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Send POST or GET requests based on initialization preferences.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Vkontakte.Execute``1(System.String)">
            <summary>
            Executes given script written in VKSCRIPT language on VK servers.
            See docs for more info: https://vk.com/dev/execute
            </summary>
            <typeparam name="TResult">Type to return</typeparam>
            <param name="script">Your code</param>
            <returns>Object of a given type, determined by a script.</returns>
        </member>
        <member name="M:VkLibrary.Core.Vkontakte.UnixTimeToDateTime(System.Double)">
            <summary>
            Converts Unix timestamp to regular DateTime.
            </summary>
            <param name="unixTimeStamp">unix TimeStamp</param>
            <returns>Converted DateTime</returns>
        </member>
        <member name="M:VkLibrary.Core.Vkontakte.DateTimeToUnixTime(System.DateTime)">
            <summary>
            Converts DateTime to Unix timestamp.
            </summary>
            <param name="dateTime">DateTime</param>
            <returns>Converted Unix Timestamp</returns>
        </member>
        <member name="M:VkLibrary.Core.Vkontakte.StartLongPollClient(System.String,System.String,System.Int32,System.Int32,System.Int32,VkLibrary.Core.LongPolling.AnswerFlags)">
            <summary>
            Inits a LongPollClient using extended settings.
            Docs: <see href="https://vk.com/dev/using_longpoll">Using LongPoll</see>
            </summary>
            <param name="key">Secret session key.</param>
            <param name="server">Server address to which you need to send the request</param>
            <param name="ts">Number of the last event from which you want to receive data</param>
            <param name="mode">Additional answer options.</param>
            <param name="version">
            Actual version: 1. For version 0 (default), community IDs will arrive in the format 
            group_id + 1000000000 for saving backward compatibility. 
            We recommend using the updated version.
            </param>
            <param name="wait">
            Waiting period (as most proxy servers terminate the connection after 30 seconds, 
            we recommend indicating wait = 25). Maximum: 90. 
            </param>
            <returns>Running Long Poll Client instance.</returns>
        </member>
        <member name="M:VkLibrary.Core.Vkontakte.SetCaptchaForNextRequest(System.String,System.String)">
            <summary>
            If any action is performed too frequently, an API request may return "Captcha needed" error. 
            After that a user needs to enter a code from the image and resend a request with a Captcha 
            code input in the request parameters. Use SetCaptchaForNextRequest method to set the captcha 
            codes for ONLY ONE next request.
            </summary>
            <param name="captchaSid">Received ID by ApiException</param>
            <param name="captchaKey">Text input, answer for captcha</param>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.AppId">
            <summary>
            Application identifier for current library instance.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.AppSecret">
            <summary>
            Application secret key used for secure API sections for current library instance.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.ApiVersion">
            <summary>
            API version that current library instance uses.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Vkontakte.AccessToken">
            <summary>
            User access token.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Vkontakte.Dispose">
            <summary>
            Disposes internaly stored HttpService.
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Services.DefaultHttpService">
            <summary>
            Default Vklibrary.Core HTTP service.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Services.DefaultHttpService.#ctor(VkLibrary.Core.Services.ILogger)">
            <summary>
            Initializes a new instane of default HTTP service.
            </summary>
            <param name="logger">Logger to log info into.</param>
        </member>
        <member name="M:VkLibrary.Core.Services.DefaultHttpService.GetForStreamAsync(System.Uri,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sends GET request and reads response as a stream.
            </summary>
            <param name="url">Base url to use.</param>
            <param name="parameters">Parameters to append to query url.</param>
        </member>
        <member name="M:VkLibrary.Core.Services.DefaultHttpService.PostForStreamAsync(System.Uri,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sends POST request and reads response as a stream.
            </summary>
            <param name="url">Base url to use.</param>
            <param name="parameters">Parameters to append to query url as encoded content.</param>
        </member>
        <member name="M:VkLibrary.Core.Services.DefaultHttpService.PostSingleFileAsync(System.Uri,System.Byte[],System.String,System.String)">
            <summary>
            Uploads single file to a web server using POST method.
            </summary>
            <param name="uri">Request uri</param>
            <param name="bytes">Bytes</param>
            <param name="type">Type (file/photo/audio/etc.)</param>
            <param name="name">File's name</param>
        </member>
        <member name="M:VkLibrary.Core.Services.DefaultHttpService.PostMultipleFilesAsync(System.Uri,System.Collections.Generic.Dictionary{System.String,System.Byte[]})">
            <summary>
            Async POST request that uploads multiple file entries as byte arrays.
            </summary>
            <param name="uri">Server uri to upload the document to.</param>
            <param name="files">Files dictionary. Key is file name, value is file itself.</param>
        </member>
        <member name="M:VkLibrary.Core.Services.DefaultHttpService.BuildGetRequestUrl(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Creates GET request url.
            </summary>
            <param name="baseUrl">Base url.</param>
            <param name="parameters">Query parameters.</param>
        </member>
        <member name="M:VkLibrary.Core.Services.DefaultHttpService.Dispose">
            <summary>
            Disposes internally stored HTTP client.
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Services.DefaultLogger">
            <summary>
            Default logger that outputs info into Debug output.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Services.DefaultLogger.Log(System.Object)">
            <summary>
            Stringifies passed object and dumps it into log output.
            </summary>
            <param name="o">Object to stringify and log.</param>
        </member>
        <member name="T:VkLibrary.Core.Services.IHttpService">
            <summary>
            Abstract HTTP service that can be used in VkLibrary.Core.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Services.IHttpService.GetForStreamAsync(System.Uri,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sends GET request and reads response as a stream.
            </summary>
            <param name="url">Base url to use.</param>
            <param name="parameters">Parameters to append to query url.</param>
        </member>
        <member name="M:VkLibrary.Core.Services.IHttpService.PostForStreamAsync(System.Uri,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sends POST request and reads response as a stream.
            </summary>
            <param name="url">Base url to use.</param>
            <param name="parameters">Parameters to append to query url as encoded content.</param>
        </member>
        <member name="M:VkLibrary.Core.Services.IHttpService.PostSingleFileAsync(System.Uri,System.Byte[],System.String,System.String)">
            <summary>
            Uploads single file to a web server using POST method.
            </summary>
            <param name="url">Request uri</param>
            <param name="bytes">Bytes</param>
            <param name="type">Type (file/photo/audio/etc.)</param>
            <param name="name">File's name</param>
        </member>
        <member name="M:VkLibrary.Core.Services.IHttpService.PostMultipleFilesAsync(System.Uri,System.Collections.Generic.Dictionary{System.String,System.Byte[]})">
            <summary>
            Async POST request that uploads multiple file entries as byte arrays.
            </summary>
            <param name="url">Server uri to upload the document to.</param>
            <param name="files">Files dictionary. Key is file name, value is file itself.</param>
        </member>
        <member name="M:VkLibrary.Core.Services.IHttpService.BuildGetRequestUrl(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Creates GET request url.
            </summary>
            <param name="baseUrl">Base url.</param>
            <param name="parameters">Query parameters.</param>
        </member>
        <member name="T:VkLibrary.Core.Services.ILogger">
            <summary>
            Logger resonsible for logging every important event happend during VkLibrary.Core lifetime.
            </summary>
        </member>
        <member name="M:VkLibrary.Core.Services.ILogger.Log(System.Object)">
            <summary>
            Logs information somehow.
            </summary>
            <param name="o">Object to log.</param>
        </member>
        <member name="T:VkLibrary.Core.Types.Account.AccountCounters">
            <summary>
            API AccountCounters object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.AccountCounters.Videos">
            <summary>
            New video tags number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.AccountCounters.Messages">
            <summary>
            New messages number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.AccountCounters.Notifications">
            <summary>
            New notifications number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.AccountCounters.Photos">
            <summary>
            New photo tags number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.AccountCounters.Friends">
            <summary>
            New friends requests number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.AccountCounters.Events">
            <summary>
            New events number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.AccountCounters.Gifts">
            <summary>
            New gifts number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.AccountCounters.Groups">
            <summary>
            New groups number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.AccountCounters.AppRequests">
            <summary>
            New app_requests number
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Account.Info">
            <summary>
            API Info object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.Info.Lang">
            <summary>
            Language ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.Info.NoWallReplies">
            <summary>
            Information whether wall comments should be hidden
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.Info.Intro">
            <summary>
            Information whether user has been processed intro
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.Info.Is2FaRequired">
            <summary>
            Two factor authentication is enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.Info.Country">
            <summary>
            Country code
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.Info.OwnPostsDefault">
            <summary>
            Information whether only owners posts should be shown
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.Info.HttpsRequired">
            <summary>
            Information whether HTTPS-only is enabled
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Account.LookupResult">
            <summary>
            API LookupResult object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.LookupResult.Other">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.LookupResult.Found">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Account.NameRequest">
            <summary>
            API NameRequest object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.NameRequest.LastName">
            <summary>
            Last name in request
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.NameRequest.FirstName">
            <summary>
            First name in request
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.NameRequest.Status">
            <summary>
            Request status
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.NameRequest.Id">
            <summary>
            Request ID needed to cancel the request
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Account.Offer">
            <summary>
            API Offer object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.Offer.Instruction">
            <summary>
            Instruction how to process the offer
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.Offer.ShortDescription">
            <summary>
            Offer short description
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.Offer.InstructionHtml">
            <summary>
            Instruction how to process the offer (HTML format)
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.Offer.Id">
            <summary>
            Offer ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.Offer.Tag">
            <summary>
            Offer tag
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.Offer.Description">
            <summary>
            Offer description
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.Offer.Price">
            <summary>
            Offer price
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.Offer.Title">
            <summary>
            Offer title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.Offer.Img">
            <summary>
            URL of the preview image
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Account.OtherContact">
            <summary>
            API OtherContact object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.OtherContact.CommonCount">
            <summary>
            Mutual friends count
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.OtherContact.Contact">
            <summary>
            Contact
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Account.PushConversations">
            <summary>
            API PushConversations object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushConversations.Count">
            <summary>
            Items count
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushConversations.Items">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Account.PushConversationsItem">
            <summary>
            API PushConversationsItem object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushConversationsItem.Sound">
            <summary>
            Information whether the sound are enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushConversationsItem.PeerId">
            <summary>
            Peer ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushConversationsItem.DisabledUntil">
            <summary>
            Time until that notifications are disabled in seconds
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Account.PushParams">
            <summary>
            API PushParams object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushParams.WallPost">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushParams.GroupAccepted">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushParams.Comment">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushParams.FriendFound">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushParams.WallPublish">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushParams.EventSoon">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushParams.Chat">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushParams.Msg">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushParams.Mention">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushParams.AppRequest">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushParams.NewPost">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushParams.Reply">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushParams.FriendAccepted">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushParams.PhotosTag">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushParams.Like">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushParams.SdkOpen">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushParams.Repost">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushParams.Birthday">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushParams.Friend">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushParams.GroupInvite">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Account.PushSettings">
            <summary>
            API PushSettings object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushSettings.DisabledUntil">
            <summary>
            Time until that notifications are disabled in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushSettings.Disabled">
            <summary>
            Information whether notifications are disabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushSettings.Settings">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.PushSettings.Conversations">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Account.UserSettings">
            <summary>
            API UserSettings object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.UserSettings.Sex">
            <summary>
            User sex
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.UserSettings.Status">
            <summary>
            User status
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.UserSettings.Relation">
            <summary>
            User relationship status
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.UserSettings.ScreenName">
            <summary>
            Domain name of the user's page
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.UserSettings.NameRequest">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.UserSettings.HomeTown">
            <summary>
            User's hometown
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.UserSettings.MaidenName">
            <summary>
            User maiden name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.UserSettings.RelationPartner">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.UserSettings.City">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.UserSettings.LastName">
            <summary>
            User last name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.UserSettings.Bdate">
            <summary>
            User's date of birth
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.UserSettings.BdateVisibility">
            <summary>
            Information whether user's birthdate are hidden
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.UserSettings.Phone">
            <summary>
            User phone number with some hidden digits
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.UserSettings.RelationRequests">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.UserSettings.RelationPending">
            <summary>
            Information whether relation status is pending
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.UserSettings.FirstName">
            <summary>
            User first name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.UserSettings.Country">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Account.UserXtrContact">
            <summary>
            API UserXtrContact object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.UserXtrContact.Contact">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.UserXtrContact.SortNum">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Account.UserXtrContact.RequestSent">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.Accesses">
            <summary>
            API Accesses object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Accesses.Role">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Accesses.ClientId">
            <summary>
            Client ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.Account">
            <summary>
            API Account object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Account.AccessRole">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Account.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Account.AccountStatus">
            <summary>
            Information whether account is active
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Account.AccountId">
            <summary>
            Account ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.Ad">
            <summary>
            API Ad object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Ad.Id">
            <summary>
            Ad ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Ad.Cpm">
            <summary>
            Cost of 1000 impressions, kopecks
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Ad.AdPlatform">
            <summary>
            Ad platform
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Ad.CampaignId">
            <summary>
            Campaign ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Ad.AdFormat">
            <summary>
            Ad format
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Ad.Category1Id">
            <summary>
            Category ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Ad.Name">
            <summary>
            Ad title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Ad.ImpressionsLimit">
            <summary>
            Impressions limit
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Ad.Video">
            <summary>
            Information whether the ad is a video
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Ad.ImpressionsLimited">
            <summary>
            Information whether impressions are limited
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Ad.Category2Id">
            <summary>
            Additional category ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Ad.CostType">
            <summary>
            Cost type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Ad.Status">
            <summary>
            Ad atatus
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Ad.Cpc">
            <summary>
            Cost of a click, kopecks
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Ad.DisclaimerSupplements">
            <summary>
            Information whether disclaimer is enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Ad.AllLimit">
            <summary>
            Total limit
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Ad.DisclaimerMedical">
            <summary>
            Information whether disclaimer is enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Ad.DisclaimerSpecialist">
            <summary>
            Information whether disclaimer is enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Ad.Approved">
            <summary>
            Review status
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.AdLayout">
            <summary>
            API AdLayout object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.AdLayout.CampaignId">
            <summary>
            Campaign ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.AdLayout.AdFormat">
            <summary>
            Ad format
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.AdLayout.Video">
            <summary>
            Information whether the ad is a video
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.AdLayout.Title">
            <summary>
            Ad title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.AdLayout.PreviewLink">
            <summary>
            link to preview an ad as it is shown on the website
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.AdLayout.CostType">
            <summary>
            Cost type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.AdLayout.LinkDomain">
            <summary>
            Domain of advertised object
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.AdLayout.Description">
            <summary>
            Ad description
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.AdLayout.LinkUrl">
            <summary>
            URL of advertised object
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.AdLayout.Id">
            <summary>
            Ad ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.AdLayout.ImageSrc">
            <summary>
            Image URL
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.AdLayout.ImageSrc2X">
            <summary>
            URL of the preview image in double size
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.Campaign">
            <summary>
            API Campaign object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Campaign.StartTime">
            <summary>
            Campaign start time, as Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Campaign.Status">
            <summary>
            Campaign status
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Campaign.Type">
            <summary>
            Campaign type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Campaign.Name">
            <summary>
            Campaign title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Campaign.AllLimit">
            <summary>
            Campaign's total limit, rubles
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Campaign.Id">
            <summary>
            Campaign ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Campaign.DayLimit">
            <summary>
            Campaign's day limit, rubles
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Campaign.StopTime">
            <summary>
            Campaign stop time, as Unixtime
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.Category">
            <summary>
            API Category object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Category.Subcategories">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Category.Id">
            <summary>
            Category ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Category.Name">
            <summary>
            Category name
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.Client">
            <summary>
            API Client object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Client.AllLimit">
            <summary>
            Client's total limit, rubles
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Client.Id">
            <summary>
            Client ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Client.DayLimit">
            <summary>
            Client's day limit, rubles
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Client.Name">
            <summary>
            Client name
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.Criteria">
            <summary>
            API Criteria object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.Sex">
            <summary>
            Sex
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.Streets">
            <summary>
            Streets IDs
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.CitiesNot">
            <summary>
            Cities IDs to except
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.UserOs">
            <summary>
            Operating systems
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.RetargetingGroupsNot">
            <summary>
            Retargeting groups IDs to except
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.AgeTo">
            <summary>
            Age to
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.Statuses">
            <summary>
            Relationship statuses
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.UserBrowsers">
            <summary>
            Browsers
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.Travellers">
            <summary>
            Travellers only
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.SchoolFrom">
            <summary>
            School graduation year from
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.SchoolTo">
            <summary>
            School graduation year to
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.Interests">
            <summary>
            Interests
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.Schools">
            <summary>
            Schools IDs
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.Stations">
            <summary>
            Stations IDs
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.Birthday">
            <summary>
            Days to birthday
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.Groups">
            <summary>
            Communities IDs
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.Positions">
            <summary>
            Positions IDs
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.RetargetingGroups">
            <summary>
            Retargeting groups IDs
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.AppsNot">
            <summary>
            Apps IDs to except
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.UniTo">
            <summary>
            University graduation year to
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.Religions">
            <summary>
            Religions IDs
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.AgeFrom">
            <summary>
            Age from
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.UniFrom">
            <summary>
            University graduation year from
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.UserDevices">
            <summary>
            Devices
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.Cities">
            <summary>
            Cities IDs
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.InterestCategories">
            <summary>
            Interests categories IDs
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.Districts">
            <summary>
            Districts IDs
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.Apps">
            <summary>
            Apps IDs
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.Country">
            <summary>
            Country ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Criteria.Paying">
            <summary>
            Information whether the user has proceeded VK payments before
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.DemoStats">
            <summary>
            API DemoStats object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.DemoStats.Type">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.DemoStats.Stats">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.DemoStats.Id">
            <summary>
            Object ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.DemostatsFormat">
            <summary>
            API DemostatsFormat object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.DemostatsFormat.Sex">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.DemostatsFormat.Overall">
            <summary>
            1 if period=overall
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.DemostatsFormat.SexAge">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.DemostatsFormat.Cities">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.DemostatsFormat.Age">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.DemostatsFormat.Day">
            <summary>
            Day as YYYY-MM-DD
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.DemostatsFormat.Month">
            <summary>
            Month as YYYY-MM
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.FloodStats">
            <summary>
            API FloodStats object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.FloodStats.Refresh">
            <summary>
            Time to refresh in seconds
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.FloodStats.Left">
            <summary>
            Requests left
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.LinkStatus">
            <summary>
            API LinkStatus object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.LinkStatus.RedirectUrl">
            <summary>
            URL
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.LinkStatus.Status">
            <summary>
            Link status
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.LinkStatus.Description">
            <summary>
            Reject reason
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.Paragraphs">
            <summary>
            API Paragraphs object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Paragraphs.Paragraph">
            <summary>
            Rules paragraph
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.PostStats">
            <summary>
            API PostStats object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.PostStats.AdId">
            <summary>
            Object ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.RejectReason">
            <summary>
            API RejectReason object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.RejectReason.Comment">
            <summary>
            Comment text
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.RejectReason.Rules">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.Rules">
            <summary>
            API Rules object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Rules.Paragraphs">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Rules.Title">
            <summary>
            Comment
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.Stats">
            <summary>
            API Stats object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Stats.Type">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Stats.StatsFormat">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Stats.Id">
            <summary>
            Object ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.StatsAge">
            <summary>
            API StatsAge object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsAge.Value">
            <summary>
            Age interval
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsAge.ImpressionsRate">
            <summary>
            Impressions rate
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsAge.ClicksRate">
            <summary>
            Clicks rate
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.StatsCities">
            <summary>
            API StatsCities object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsCities.Value">
            <summary>
            City ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsCities.Name">
            <summary>
            City name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsCities.ImpressionsRate">
            <summary>
            Impressions rate
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsCities.ClicksRate">
            <summary>
            Clicks rate
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.StatsFormat">
            <summary>
            API StatsFormat object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsFormat.VideoViewsFull">
            <summary>
            Video views (full video)
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsFormat.VideoViews">
            <summary>
            Video views number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsFormat.Overall">
            <summary>
            1 if period=overall
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsFormat.VideoClicksSite">
            <summary>
            Clickthoughs to the advertised site
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsFormat.Day">
            <summary>
            Day as YYYY-MM-DD
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsFormat.Reach">
            <summary>
            Reach
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsFormat.Impressions">
            <summary>
            Impressions number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsFormat.Clicks">
            <summary>
            Clicks number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsFormat.VideoViewsHalf">
            <summary>
            Video views (half of video)
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsFormat.Spent">
            <summary>
            Spent funds
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsFormat.JoinRate">
            <summary>
            Events number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsFormat.Month">
            <summary>
            Month as YYYY-MM
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.StatsSex">
            <summary>
            API StatsSex object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsSex.Value">
            <summary>
            Sex
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsSex.ImpressionsRate">
            <summary>
            Impressions rate
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsSex.ClicksRate">
            <summary>
            Clicks rate
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.StatsSexAge">
            <summary>
            API StatsSexAge object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsSexAge.Value">
            <summary>
            Sex and age interval
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsSexAge.ImpressionsRate">
            <summary>
            Impressions rate
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.StatsSexAge.ClicksRate">
            <summary>
            Clicks rate
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.TargetGroup">
            <summary>
            API TargetGroup object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.TargetGroup.Domain">
            <summary>
            Site domain
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.TargetGroup.Id">
            <summary>
            Group ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.TargetGroup.Name">
            <summary>
            Group name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.TargetGroup.Lifetime">
            <summary>
            Number of days for user to be in group
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.TargetGroup.Pixel">
            <summary>
            Pixel code
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.TargetGroup.AudienceCount">
            <summary>
            Audience
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.TargSettings">
            <summary>
            API TargSettings object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.TargSettings.CampaignId">
            <summary>
            Campaign ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.TargSettings.Id">
            <summary>
            Ad ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.TargStats">
            <summary>
            API TargStats object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.TargStats.RecommendedCpc">
            <summary>
            Recommended CPC value
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.TargStats.RecommendedCpm">
            <summary>
            Recommended CPM value
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.TargStats.AudienceCount">
            <summary>
            Audience
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.TargSuggestions">
            <summary>
            API TargSuggestions object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.TargSuggestions.Id">
            <summary>
            Object ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.TargSuggestions.Name">
            <summary>
            Object name
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.TargSuggestionsCities">
            <summary>
            API TargSuggestionsCities object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.TargSuggestionsCities.Id">
            <summary>
            Object ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.TargSuggestionsCities.Parent">
            <summary>
            Parent object
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.TargSuggestionsCities.Name">
            <summary>
            Object name
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.TargSuggestionsRegions">
            <summary>
            API TargSuggestionsRegions object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.TargSuggestionsRegions.Type">
            <summary>
            Object type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.TargSuggestionsRegions.Id">
            <summary>
            Object ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.TargSuggestionsRegions.Name">
            <summary>
            Object name
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.TargSuggestionsSchools">
            <summary>
            API TargSuggestionsSchools object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.TargSuggestionsSchools.Type">
            <summary>
            School type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.TargSuggestionsSchools.Parent">
            <summary>
            City name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.TargSuggestionsSchools.Id">
            <summary>
            School ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.TargSuggestionsSchools.Desc">
            <summary>
            Full school title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.TargSuggestionsSchools.Name">
            <summary>
            School title
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Ads.Users">
            <summary>
            API Users object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Users.UserId">
            <summary>
            User ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Ads.Users.Accesses">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Apps.App">
            <summary>
            API App object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.International">
            <summary>
            Information whether the application is multilanguage
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.CatalogPosition">
            <summary>
            Catalog position
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.Icon139">
            <summary>
            URL of the app icon with 139 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.AuthorUrl">
            <summary>
            Application author's URL
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.PlatformId">
            <summary>
            Application ID in store
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.IsInCatalog">
            <summary>
            Information whther application is in mobile catalog
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.GenreId">
            <summary>
            Genre ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.Id">
            <summary>
            Application ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.Section">
            <summary>
            Application section name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.Genre">
            <summary>
            Genre name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.Banner560">
            <summary>
            URL of the app banner with 560 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.LeaderboardType">
            <summary>
            Leaderboard type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.MembersCount">
            <summary>
            Members number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.ScreenName">
            <summary>
            Screen name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.Icon278">
            <summary>
            URL of the app icon with 279 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.Title">
            <summary>
            Application title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.Icon150">
            <summary>
            URL of the app icon with 150 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.Icon75">
            <summary>
            URL of the app icon with 75 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.Type">
            <summary>
            Application type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.Banner1120">
            <summary>
            URL of the app banner with 1120 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.Description">
            <summary>
            Application description
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.AuthorGroup">
            <summary>
            Official community's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.AuthorId">
            <summary>
            Application author's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.PublishedDate">
            <summary>
            Date when the application has been published in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.App.Screenshots">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Apps.Leaderboard">
            <summary>
            API Leaderboard object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.Leaderboard.Score">
            <summary>
            Score number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.Leaderboard.Level">
            <summary>
            Level
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.Leaderboard.Points">
            <summary>
            Points number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Apps.Leaderboard.UserId">
            <summary>
            User ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Audio.Audio">
            <summary>
            API Audio object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Audio.Audio.Id">
            <summary>
            Audio ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Audio.Audio.OwnerId">
            <summary>
            Audio owner's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Audio.Audio.AccessKey">
            <summary>
            Access key for the audio
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Audio.Audio.Url">
            <summary>
            URL of mp3 file
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Audio.Audio.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Audio.Audio.Artist">
            <summary>
            Artist name
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Audio.AudioAlbum">
            <summary>
            API AudioAlbum object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Audio.AudioAlbum.Id">
            <summary>
            Album ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Audio.AudioAlbum.OwnerId">
            <summary>
            Album owner's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Audio.AudioAlbum.Title">
            <summary>
            Album title
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Audio.AudioFull">
            <summary>
            API AudioFull object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Audio.AudioFull.AlbumId">
            <summary>
            Album ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Audio.AudioFull.Date">
            <summary>
            Date when uploaded
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Audio.AudioFull.LyricsId">
            <summary>
            Lyrics ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Audio.AudioFull.Duration">
            <summary>
            Duration in seconds
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Audio.AudioFull.NoSearch">
            <summary>
            Information whether the audio is hidden from search
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Audio.AudioFull.GenreId">
            <summary>
            Genre ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Audio.AudioUploadResponse">
            <summary>
            API AudioUploadResponse object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Audio.AudioUploadResponse.Audio">
            <summary>
            Uploaded aduio data
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Audio.AudioUploadResponse.Hash">
            <summary>
            Uploading hash
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Audio.AudioUploadResponse.Redirect">
            <summary>
            Redirect URL
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Audio.AudioUploadResponse.Server">
            <summary>
            Upload server number
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Audio.Lyrics">
            <summary>
            API Lyrics object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Audio.Lyrics.LyricsId">
            <summary>
            Lyrics ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Audio.Lyrics.Text">
            <summary>
            Lyrics text
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Base.CommentsInfo">
            <summary>
            API CommentsInfo object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.CommentsInfo.Count">
            <summary>
            Comments number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.CommentsInfo.CanPost">
            <summary>
            Information whether current user can comment the post
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Base.Country">
            <summary>
            API Country object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Country.Id">
            <summary>
            Country ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Country.Title">
            <summary>
            Country title
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Base.Error">
            <summary>
            API Error object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Error.RequestParams">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Error.ErrorMsg">
            <summary>
            Error message
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Error.ErrorCode">
            <summary>
            Error code
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Base.Geo">
            <summary>
            API Geo object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Geo.Coordinates">
            <summary>
            String with coordinates
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Geo.Showmap">
            <summary>
            Information whether a map is showed
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Geo.Type">
            <summary>
            Place type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Geo.Place">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Base.Likes">
            <summary>
            API Likes object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Likes.Count">
            <summary>
            Likes number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Likes.UserLikes">
            <summary>
            Information whether current user likes the photo
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Base.LikesInfo">
            <summary>
            API LikesInfo object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.LikesInfo.Count">
            <summary>
            Likes number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.LikesInfo.CanPublish">
            <summary>
            Information whether current user can repost
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.LikesInfo.CanLike">
            <summary>
            Information whether current user can like the post
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.LikesInfo.UserLikes">
            <summary>
            Information whether current uer has liked the post
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Base.Link">
            <summary>
            API Link object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Link.Caption">
            <summary>
            Link caption
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Link.PreviewUrl">
            <summary>
            URL of the page with article preview
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Link.Application">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Link.Url">
            <summary>
            Link URL
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Link.Title">
            <summary>
            Link title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Link.IsExternal">
            <summary>
            Information whether the link is external
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Link.Product">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Link.Description">
            <summary>
            Link description
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Link.Button">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Link.Photo">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Link.PreviewPage">
            <summary>
            String ID of the page with article preview
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Link.Rating">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Base.LinkApplication">
            <summary>
            API LinkApplication object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.LinkApplication.Store">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.LinkApplication.AppId">
            <summary>
            Application Id
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Base.LinkApplicationStore">
            <summary>
            API LinkApplicationStore object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.LinkApplicationStore.Id">
            <summary>
            Store Id
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.LinkApplicationStore.Name">
            <summary>
            Store name
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Base.LinkButton">
            <summary>
            API LinkButton object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.LinkButton.Action">
            <summary>
            Button action
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.LinkButton.Title">
            <summary>
            Button title
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Base.LinkButtonAction">
            <summary>
            API LinkButtonAction object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.LinkButtonAction.Url">
            <summary>
            Action URL
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.LinkButtonAction.Type">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Base.LinkProduct">
            <summary>
            API LinkProduct object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.LinkProduct.Price">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Base.LinkRating">
            <summary>
            API LinkRating object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.LinkRating.Stars">
            <summary>
            Count of stars
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.LinkRating.ReviewsCount">
            <summary>
            Count of reviews
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Base.Object">
            <summary>
            API Object object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Object.Id">
            <summary>
            Object ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Object.Title">
            <summary>
            Object title
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Base.ObjectCount">
            <summary>
            API ObjectCount object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.ObjectCount.Count">
            <summary>
            Items count
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Base.ObjectWithName">
            <summary>
            API ObjectWithName object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.ObjectWithName.Id">
            <summary>
            Object ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.ObjectWithName.Name">
            <summary>
            Object name
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Base.Place">
            <summary>
            API Place object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Place.City">
            <summary>
            City name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Place.Latitude">
            <summary>
            Place latitude
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Place.Checkins">
            <summary>
            Checkins number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Place.Address">
            <summary>
            Place address
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Place.Id">
            <summary>
            Place ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Place.Longitude">
            <summary>
            Place longitude
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Place.Type">
            <summary>
            Place type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Place.Created">
            <summary>
            Date of the place creation in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Place.Icon">
            <summary>
            URL of the place's icon
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Place.Title">
            <summary>
            Place title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Place.Country">
            <summary>
            Country name
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Base.RepostsInfo">
            <summary>
            API RepostsInfo object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.RepostsInfo.Count">
            <summary>
            Reposts number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.RepostsInfo.UserReposted">
            <summary>
            Information whether current user has reposted the post
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Base.RequestParam">
            <summary>
            API RequestParam object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.RequestParam.Key">
            <summary>
            Parameter name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.RequestParam.Value">
            <summary>
            Parameter value
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Base.Sticker">
            <summary>
            API Sticker object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Sticker.Photo256">
            <summary>
            URL of the preview image with 256 px in height
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Sticker.Photo352">
            <summary>
            URL of the preview image with 352 px in height
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Sticker.Id">
            <summary>
            Sticker ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Sticker.Photo128">
            <summary>
            URL of the preview image with 128 px in height
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Sticker.ProductId">
            <summary>
            Collection ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Sticker.Photo64">
            <summary>
            URL of the preview image with 64 px in height
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Sticker.Width">
            <summary>
            Width in px
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.Sticker.Height">
            <summary>
            Hieght in px
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Base.UserId">
            <summary>
            API UserId object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.UserId.UserIdCode">
            <summary>
            User ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Base.ViewsInfo">
            <summary>
            API ViewsInfo object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Base.ViewsInfo.Count">
            <summary>
            Views count.
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Board.Topic">
            <summary>
            API Topic object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Board.Topic.CreatedBy">
            <summary>
            Creator ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Board.Topic.Comments">
            <summary>
            Comments number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Board.Topic.IsClosed">
            <summary>
            Information whether the topic is closed
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Board.Topic.Id">
            <summary>
            Topic ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Board.Topic.IsFixed">
            <summary>
            Information whether the topic is fixed
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Board.Topic.UpdatedBy">
            <summary>
            ID of user who updated the topic
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Board.Topic.Created">
            <summary>
            Date when the topic has been created in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Board.Topic.Title">
            <summary>
            Topic title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Board.Topic.Updated">
            <summary>
            Date when the topic has been updated in Unixtime
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Board.TopicComment">
            <summary>
            API TopicComment object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Board.TopicComment.Date">
            <summary>
            Date when the comment has been added in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Board.TopicComment.Id">
            <summary>
            Comment ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Board.TopicComment.Text">
            <summary>
            Comment text
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Board.TopicComment.FromId">
            <summary>
            Author ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Board.TopicComment.RealOffset">
            <summary>
            Real position of the comment
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Board.TopicComment.Attachments">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Board.TopicPoll">
            <summary>
            API TopicPoll object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Board.TopicPoll.Votes">
            <summary>
            Votes number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Board.TopicPoll.IsClosed">
            <summary>
            Information whether the poll is closed
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Board.TopicPoll.Question">
            <summary>
            Poll question
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Board.TopicPoll.PollId">
            <summary>
            Poll ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Board.TopicPoll.Answers">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Board.TopicPoll.Created">
            <summary>
            Date when poll has been created in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Board.TopicPoll.AnswerId">
            <summary>
            Current user's answer ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Board.TopicPoll.OwnerId">
            <summary>
            Poll owner's ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Database.City">
            <summary>
            API City object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Database.City.Region">
            <summary>
            Region title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Database.City.Area">
            <summary>
            Area title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Database.City.Important">
            <summary>
            Information whether the city is included in important cities list
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Database.Faculty">
            <summary>
            API Faculty object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Database.Faculty.Id">
            <summary>
            Faculty ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Database.Faculty.Title">
            <summary>
            Faculty title
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Database.Region">
            <summary>
            API Region object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Database.Region.Id">
            <summary>
            Region ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Database.Region.Title">
            <summary>
            Region title
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Database.School">
            <summary>
            API School object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Database.School.Id">
            <summary>
            School ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Database.School.Title">
            <summary>
            School title
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Database.Street">
            <summary>
            API Street object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Database.Street.Id">
            <summary>
            Street ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Database.Street.Title">
            <summary>
            Street title
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Database.University">
            <summary>
            API University object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Database.University.Id">
            <summary>
            University ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Database.University.Title">
            <summary>
            University title
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Docs.Doc">
            <summary>
            API Doc object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.Doc.Ext">
            <summary>
            File extension
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.Doc.Date">
            <summary>
            Date when file has been uploaded in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.Doc.Preview">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.Doc.Id">
            <summary>
            Document ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.Doc.OwnerId">
            <summary>
            Document owner ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.Doc.AccessKey">
            <summary>
            Access key for the document
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.Doc.Type">
            <summary>
            Document type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.Doc.Url">
            <summary>
            File URL
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.Doc.Title">
            <summary>
            Document title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.Doc.Size">
            <summary>
            File size in bites
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Docs.DocPreview">
            <summary>
            API DocPreview object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.DocPreview.Photo">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.DocPreview.Video">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.DocPreview.AudioMessage">
            <summary>
            Doc preview audio message (if contains, otherwise null)
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Docs.DocPreviewAudioMsg">
            <summary>
            API DocPreview object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.DocPreviewAudioMsg.Duration">
            <summary>
            Audio duration.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.DocPreviewAudioMsg.Waveform">
            <summary>
            Audio waveform.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.DocPreviewAudioMsg.LinkOgg">
            <summary>
            Link to ogg file.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.DocPreviewAudioMsg.LinkMp3">
            <summary>
            Link to mp3 file.
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Docs.DocPreviewPhoto">
            <summary>
            API DocPreviewPhoto object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.DocPreviewPhoto.Sizes">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Docs.DocPreviewVideo">
            <summary>
            API DocPreviewVideo object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.DocPreviewVideo.Src">
            <summary>
            Video URL
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.DocPreviewVideo.Filesize">
            <summary>
            Video file size in bites
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.DocPreviewVideo.Width">
            <summary>
            Video's width in pixels
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.DocPreviewVideo.Height">
            <summary>
            Video's height in pixels
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Docs.DocTypes">
            <summary>
            API DocTypes object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.DocTypes.Count">
            <summary>
            Number of docs
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.DocTypes.Id">
            <summary>
            Doc type ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.DocTypes.Title">
            <summary>
            Doc type title
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Docs.DocUploadResponse">
            <summary>
            API DocUploadResponse object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Docs.DocUploadResponse.File">
            <summary>
            Uploaded file data
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Fave.FavesLink">
            <summary>
            API FavesLink object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Fave.FavesLink.Id">
            <summary>
            Link ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Fave.FavesLink.Description">
            <summary>
            Link description
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Fave.FavesLink.Photo200">
            <summary>
            URL of the preview image with 200 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Fave.FavesLink.Photo50">
            <summary>
            URL of the preview image with 50 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Fave.FavesLink.Url">
            <summary>
            Link URL
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Fave.FavesLink.Title">
            <summary>
            Link title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Fave.FavesLink.Photo100">
            <summary>
            URL of the preview image with 100 px in width
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Friends.FriendsList">
            <summary>
            API FriendsList object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Friends.FriendsList.Id">
            <summary>
            List ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Friends.FriendsList.Name">
            <summary>
            List title
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Friends.FriendStatus">
            <summary>
            API FriendStatus object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Friends.FriendStatus.Sign">
            <summary>
            MD5 hash for the result validation
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Friends.FriendStatus.ReadState">
            <summary>
            Information whether request is unviewed
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Friends.FriendStatus.UserId">
            <summary>
            User ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Friends.FriendStatus.RequestMessage">
            <summary>
            Message sent with request
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Friends.FriendStatus.FriendStatusCode">
            <summary>
            Friend status with the user
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Friends.Requests">
            <summary>
            API Requests object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Friends.Requests.UserId">
            <summary>
            User ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Friends.Requests.Mutual">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Friends.Requests.From">
            <summary>
            ID of the user by whom friend has been suggested
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Friends.RequestsMutual">
            <summary>
            API RequestsMutual object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Friends.RequestsMutual.Count">
            <summary>
            Total mutual friends number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Friends.RequestsMutual.Users">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Friends.RequestsXtrMessage">
            <summary>
            API RequestsXtrMessage object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Friends.RequestsXtrMessage.UserId">
            <summary>
            User ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Friends.RequestsXtrMessage.Mutual">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Friends.RequestsXtrMessage.Message">
            <summary>
            Message sent with a request
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Friends.RequestsXtrMessage.From">
            <summary>
            ID of the user by whom friend has been suggested
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Friends.UserXtrLists">
            <summary>
            API UserXtrLists object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Friends.UserXtrLists.Lists">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Friends.UserXtrPhone">
            <summary>
            API UserXtrPhone object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Friends.UserXtrPhone.Phone">
            <summary>
            User phone
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Gifts.Gift">
            <summary>
            API Gift object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Gifts.Gift.Date">
            <summary>
            Date when gist has been sent in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Gifts.Gift.GiftLayout">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Gifts.Gift.Id">
            <summary>
            Gift ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Gifts.Gift.Message">
            <summary>
            Comment text
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Gifts.Gift.GiftHash">
            <summary>
            Hash
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Gifts.Gift.Privacy">
            <summary>
            Gift privacy
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Gifts.Gift.FromId">
            <summary>
            Gift sender ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Gifts.Layout">
            <summary>
            API Layout object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Gifts.Layout.Thumb96">
            <summary>
            URL of the preview image with 96 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Gifts.Layout.Thumb256">
            <summary>
            URL of the preview image with 256 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Gifts.Layout.Id">
            <summary>
            Gift ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Gifts.Layout.Thumb48">
            <summary>
            URL of the preview image with 48 px in width
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Groups.BanInfo">
            <summary>
            API BanInfo object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.BanInfo.AdminId">
            <summary>
            Administrator ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.BanInfo.Date">
            <summary>
            Date when user has been added to blacklist in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.BanInfo.EndDate">
            <summary>
            Date when user will be removed from blacklist in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.BanInfo.Comment">
            <summary>
            Comment for a ban
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.BanInfo.Reason">
            <summary>
            Ban reason
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Groups.ContactsItem">
            <summary>
            API ContactsItem object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.ContactsItem.Phone">
            <summary>
            Contact phone
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.ContactsItem.Email">
            <summary>
            Contact email
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.ContactsItem.UserId">
            <summary>
            User ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.ContactsItem.Desc">
            <summary>
            Contact description
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Groups.CountersGroup">
            <summary>
            API CountersGroup object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.CountersGroup.Videos">
            <summary>
            Videos number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.CountersGroup.Topics">
            <summary>
            Topics number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.CountersGroup.Albums">
            <summary>
            Photo albums number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.CountersGroup.Photos">
            <summary>
            Photos number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.CountersGroup.Audios">
            <summary>
            Audios number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.CountersGroup.Market">
            <summary>
            Market items number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.CountersGroup.Docs">
            <summary>
            Docs number
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Groups.Group">
            <summary>
            API Group object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.Group.AdminLevel">
            <summary>
            Level of current user's credentials as manager
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.Group.Photo200">
            <summary>
            URL of square photo of the community with 200 pixels in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.Group.IsClosed">
            <summary>
            Information whether community is closed
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.Group.Type">
            <summary>
            Community type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.Group.Name">
            <summary>
            Community name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.Group.ScreenName">
            <summary>
            Domain of the community page
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.Group.IsMember">
            <summary>
            Information whether current user is member
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.Group.Id">
            <summary>
            Community ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.Group.Photo50">
            <summary>
            URL of square photo of the community with 50 pixels in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.Group.IsAdmin">
            <summary>
            Information whether current user is administrator
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.Group.Photo100">
            <summary>
            URL of square photo of the community with 100 pixels in width
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Groups.GroupCategory">
            <summary>
            API GroupCategory object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupCategory.Subcategories">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupCategory.Id">
            <summary>
            Category ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupCategory.Name">
            <summary>
            Category name
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Groups.GroupCategoryFull">
            <summary>
            API GroupCategoryFull object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupCategoryFull.PageCount">
            <summary>
            Pages number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupCategoryFull.Subcategories">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupCategoryFull.Id">
            <summary>
            Category ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupCategoryFull.PagePreviews">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupCategoryFull.Name">
            <summary>
            Category name
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Groups.GroupFull">
            <summary>
            API GroupFull object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.IsSubscribed">
            <summary>
            Information whether current user is subscribed
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.CanPost">
            <summary>
            Information whether current user can post on community's wall
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.StartDate">
            <summary>
            Start date of event in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.AgeLimits">
            <summary>
            Information whether age limit
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.MainSection">
            <summary>
            Main section of community
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.IsMessagesAllowed">
            <summary>
            Information whether current user can send a message to community
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.MainAlbumId">
            <summary>
            Community's main photo album ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.FinishDate">
            <summary>
            Finish date of event in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.CanUploadVideo">
            <summary>
            Information whether current user can upload video
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.City">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.Contacts">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.WikiPage">
            <summary>
            Community's main wiki page title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.Status">
            <summary>
            Community status
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.CanMessage">
            <summary>
            Information whether current user can send a message to community
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.CanSeeAllPosts">
            <summary>
            Information whether current user can see all posts on community's wall
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.MembersCount">
            <summary>
            Community members number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.Activity">
            <summary>
            Type of group, start date of event or category of public page
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.Verified">
            <summary>
            Information whether community is verified
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.MemberStatus">
            <summary>
            Current user's member status
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.Deactivated">
            <summary>
            Information whether community is banned
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.FixedPost">
            <summary>
            Fixed post ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.Counters">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.Site">
            <summary>
            Community's website
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.Description">
            <summary>
            Community description
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.CanCreateTopic">
            <summary>
            Information whether current user can create topic
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.Links">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.Market">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.Country">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupFull.IsFavorite">
            <summary>
            Information whether community is in faves
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Groups.GroupLink">
            <summary>
            API GroupLink object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupLink.Url">
            <summary>
            Link URL
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupLink.EditTitle">
            <summary>
            Information whether the title can be edited
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupLink.Id">
            <summary>
            Link ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupLink.Desc">
            <summary>
            Link description
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupLink.ImageProcessing">
            <summary>
            Information whether the image on processing
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Groups.GroupsArray">
            <summary>
            API GroupsArray object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupsArray.Count">
            <summary>
            Communities number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupsArray.Items">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Groups.GroupSettings">
            <summary>
            API GroupSettings object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupSettings.Address">
            <summary>
            Community's page domain
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupSettings.Wiki">
            <summary>
            Wiki settings
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupSettings.Subject">
            <summary>
            Community subject ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupSettings.Website">
            <summary>
            Community website
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupSettings.ObsceneStopwords">
            <summary>
            Information whether the stopwords filter is enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupSettings.Place">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupSettings.Access">
            <summary>
            Community access settings
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupSettings.Audio">
            <summary>
            Audio settings
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupSettings.Video">
            <summary>
            Video settings
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupSettings.Title">
            <summary>
            Community title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupSettings.ObsceneWords">
            <summary>
            The list of stop words
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupSettings.Wall">
            <summary>
            Wall settings
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupSettings.Topics">
            <summary>
            Topics settings
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupSettings.Rss">
            <summary>
            URL of the RSS feed
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupSettings.Description">
            <summary>
            Community description
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupSettings.Photos">
            <summary>
            Photos settings
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupSettings.SubjectList">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupSettings.ObsceneFilter">
            <summary>
            Information whether the obscene filter is enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupSettings.Docs">
            <summary>
            Docs settings
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Groups.GroupXtrInvitedBy">
            <summary>
            API GroupXtrInvitedBy object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupXtrInvitedBy.AdminLevel">
            <summary>
            Level of current user's credentials as manager
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupXtrInvitedBy.Photo200">
            <summary>
            URL of square photo of the community with 200 pixels in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupXtrInvitedBy.ScreenName">
            <summary>
            Domain of the community page
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupXtrInvitedBy.Name">
            <summary>
            Community name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupXtrInvitedBy.IsMember">
            <summary>
            Information whether current user is member
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupXtrInvitedBy.Photo50">
            <summary>
            URL of square photo of the community with 50 pixels in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupXtrInvitedBy.IsAdmin">
            <summary>
            Information whether current user is manager
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupXtrInvitedBy.Photo100">
            <summary>
            URL of square photo of the community with 100 pixels in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupXtrInvitedBy.IsClosed">
            <summary>
            Information whether community is closed
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupXtrInvitedBy.Type">
            <summary>
            Community type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupXtrInvitedBy.Id">
            <summary>
            Community ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.GroupXtrInvitedBy.InvitedBy">
            <summary>
            Inviter ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Groups.LinksItem">
            <summary>
            API LinksItem object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.LinksItem.Id">
            <summary>
            Link ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.LinksItem.Desc">
            <summary>
            Link description
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.LinksItem.Name">
            <summary>
            Link title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.LinksItem.EditTitle">
            <summary>
            Information whether the link title can be edited
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.LinksItem.Photo50">
            <summary>
            URL of square image of the link with 50 pixels in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.LinksItem.Url">
            <summary>
            Link URL
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.LinksItem.Photo100">
            <summary>
            URL of square image of the link with 100 pixels in width
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Groups.MarketInfo">
            <summary>
            API MarketInfo object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.MarketInfo.Enabled">
            <summary>
            Information whether the market is enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.MarketInfo.PriceMin">
            <summary>
            Minimum price
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.MarketInfo.MainAlbumId">
            <summary>
            Main market album ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.MarketInfo.PriceMax">
            <summary>
            Maximum price
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.MarketInfo.CurrencyText">
            <summary>
            Currency name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.MarketInfo.Currency">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.MarketInfo.ContactId">
            <summary>
            Contact person ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Groups.MemberRole">
            <summary>
            API MemberRole object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.MemberRole.Id">
            <summary>
            User ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.MemberRole.Role">
            <summary>
            User's credentials as community admin
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Groups.MemberStatus">
            <summary>
            API MemberStatus object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.MemberStatus.UserId">
            <summary>
            User ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.MemberStatus.Member">
            <summary>
            Information whether user is a member of the group
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Groups.MemberStatusFull">
            <summary>
            API MemberStatusFull object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.MemberStatusFull.UserId">
            <summary>
            User ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.MemberStatusFull.Invitation">
            <summary>
            Information whether user has been invited to the group
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.MemberStatusFull.Member">
            <summary>
            Information whether user is a member of the group
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.MemberStatusFull.Request">
            <summary>
            Information whether user has send request to the group
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Groups.SubjectItem">
            <summary>
            API SubjectItem object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.SubjectItem.Id">
            <summary>
            Subject ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.SubjectItem.Name">
            <summary>
            Subject title
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Groups.UserXtrBanInfo">
            <summary>
            API UserXtrBanInfo object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Relatives">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Domain">
            <summary>
            Domain name of the user's page
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.WallComments">
            <summary>
            Information whether current user can comment wall posts
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.CropPhoto">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Online">
            <summary>
            Information whether the user is online
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Schools">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.PhotoId">
            <summary>
            ID of the user's main photo
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.PhotoMaxOrig">
            <summary>
            URL of user's photo of maximum size
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.IsFriend">
            <summary>
            Information whether the user is a friend of current user
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.CommonCount">
            <summary>
            Number of common friends with current user
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.University">
            <summary>
            University ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.StatusAudio">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.LastName">
            <summary>
            User last name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Games">
            <summary>
            User's favorite games
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.HasPhoto">
            <summary>
            Information whether the user has main photo
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.RelationPartner">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.HomeTown">
            <summary>
            User hometown
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Blacklisted">
            <summary>
            Information whether current user is in the requested user's blacklist.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Skype">
            <summary>
            User's Skype nickname
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.FirstName">
            <summary>
            User first name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.City">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.UniversityName">
            <summary>
            University name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Status">
            <summary>
            User's status
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Photo200">
            <summary>
            URL of square photo of the user with 200 pixels in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Relation">
            <summary>
            User relationship status
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Timezone">
            <summary>
            User's timezone
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Activity">
            <summary>
            User's status
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Exports">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.MaidenName">
            <summary>
            User maiden name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Music">
            <summary>
            User's favorite music
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.About">
            <summary>
            About me field
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Photo100">
            <summary>
            URL of square photo of the user with 100 pixels in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Deactivated">
            <summary>
            Returns if a profile is deleted or blocked
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Bdate">
            <summary>
            User's date of birth
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.CanSeeAudio">
            <summary>
            Information whether current user can see the user's audio
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.BlacklistedByMe">
            <summary>
            Information whether the requested user is in current user's blacklist
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Universities">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.EducationForm">
            <summary>
            Education form
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Career">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Quotes">
            <summary>
            Favorite quotes
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Personal">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Occupation">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Site">
            <summary>
            User's website
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Sex">
            <summary>
            User sex
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Photo200Orig">
            <summary>
            URL of user's photo with 200 pixels in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Hidden">
            <summary>
            Returns if a profile is hidden.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Id">
            <summary>
            User ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.IsHiddenFromFeed">
            <summary>
            Information whether the requested user is hidden from current user's newsfeed
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Military">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Movies">
            <summary>
            User's favorite movies
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.CanPost">
            <summary>
            Information whether current user can post on the user's wall
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Photo50">
            <summary>
            URL of square photo of the user with 50 pixels in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Livejournal">
            <summary>
            User's Livejournal account
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.HasMobile">
            <summary>
            Information whether the user specified his phone number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.PhotoMax">
            <summary>
            URL of square photo of the user with maximum width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.FriendStatus">
            <summary>
            Friend status for current user
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.MobilePhone">
            <summary>
            Information whether current user can see
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.FacultyName">
            <summary>
            Faculty name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.EducationStatus">
            <summary>
            User's education status
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Photo400Orig">
            <summary>
            URL of user's photo with 400 pixels in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Books">
            <summary>
            User's favorite books
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.FollowersCount">
            <summary>
            Number of user's followers
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Graduation">
            <summary>
            Graduation year
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.CanSendFriendRequest">
            <summary>
            Information whether current user can send a friend request
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Facebook">
            <summary>
            User's Facebook account
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.CanSeeAllPosts">
            <summary>
            Information whether current user can see other users' audio on the wall
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.BanInfo">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Instagram">
            <summary>
            User's Instagram account
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Twitter">
            <summary>
            User's Twitter account
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.HomePhone">
            <summary>
            User's mobile phone number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.ScreenName">
            <summary>
            Domain name of the user's page
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.CanWritePrivateMessage">
            <summary>
            Information whether current user can write private message
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Faculty">
            <summary>
            Faculty ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Nickname">
            <summary>
            User nickname
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Verified">
            <summary>
            Information whether the user is verified
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Activities">
            <summary>
            User's activities
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.FacebookName">
            <summary>
            User's Facebook name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.IsFavorite">
            <summary>
            Information whether the requested user is in faves of current user
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.LastSeen">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Tv">
            <summary>
            User's favorite tv shows
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Country">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrBanInfo.Interests">
            <summary>
            User's interests
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Groups.UserXtrRole">
            <summary>
            API UserXtrRole object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Groups.UserXtrRole.Role">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Leads.Checked">
            <summary>
            API Checked object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Checked.Result">
            <summary>
            Information whether user can start the lead
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Checked.StartLink">
            <summary>
            URL user should open to start the lead
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Checked.Sid">
            <summary>
            Session ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Checked.Reason">
            <summary>
            Reason why user can't start the lead
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Leads.Complete">
            <summary>
            API Complete object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Complete.Success">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Complete.TestMode">
            <summary>
            Information whether test mode is enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Complete.Spent">
            <summary>
            Amount of spent votes
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Complete.Cost">
            <summary>
            Offer cost
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Complete.Limit">
            <summary>
            Offer limit
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Leads.Entry">
            <summary>
            API Entry object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Entry.Date">
            <summary>
            Date when the action has been started in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Entry.Status">
            <summary>
            Action type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Entry.Uid">
            <summary>
            User ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Entry.Comment">
            <summary>
            Comment text
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Entry.Aid">
            <summary>
            Application ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Entry.TestMode">
            <summary>
            Information whether test mode is enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Entry.StartDate">
            <summary>
            Start date in Unixtime (for status=2)
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Entry.Sid">
            <summary>
            Session string ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Leads.Lead">
            <summary>
            API Lead object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Lead.Spent">
            <summary>
            Amount of spent votes
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Lead.Started">
            <summary>
            Started offers number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Lead.Limit">
            <summary>
            Lead limit
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Lead.Days">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Lead.Impressions">
            <summary>
            Impressions number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Lead.Completed">
            <summary>
            Completed offers number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Lead.Cost">
            <summary>
            Offer cost
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Leads.LeadDays">
            <summary>
            API LeadDays object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.LeadDays.Spent">
            <summary>
            Amount of spent votes
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.LeadDays.Impressions">
            <summary>
            Impressions number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.LeadDays.Completed">
            <summary>
            Completed offers number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.LeadDays.Started">
            <summary>
            Started offers number
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Leads.Start">
            <summary>
            API Start object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Start.VkSid">
            <summary>
            Session data
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Leads.Start.TestMode">
            <summary>
            Information whether test mode is enabled
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Market.Currency">
            <summary>
            API Currency object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.Currency.Id">
            <summary>
            Currency ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.Currency.Name">
            <summary>
            Currency sign
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Market.MarketAlbum">
            <summary>
            API MarketAlbum object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.MarketAlbum.Count">
            <summary>
            Items number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.MarketAlbum.Id">
            <summary>
            Market album ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.MarketAlbum.OwnerId">
            <summary>
            Market album owner's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.MarketAlbum.Photo">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.MarketAlbum.UpdatedTime">
            <summary>
            Date when album has been updated last time in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.MarketAlbum.Title">
            <summary>
            Market album title
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Market.MarketCategory">
            <summary>
            API MarketCategory object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.MarketCategory.Section">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.MarketCategory.Id">
            <summary>
            Category ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.MarketCategory.Name">
            <summary>
            Category name
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Market.MarketItem">
            <summary>
            API MarketItem object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.MarketItem.Availability">
            <summary>
            Information whether the item is available
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.MarketItem.Category">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.MarketItem.Id">
            <summary>
            Item ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.MarketItem.OwnerId">
            <summary>
            Item owner's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.MarketItem.Description">
            <summary>
            Item description
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.MarketItem.Price">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.MarketItem.Date">
            <summary>
            Date when the item has been created in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.MarketItem.Title">
            <summary>
            Item title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.MarketItem.ThumbPhoto">
            <summary>
            URL of the preview image
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Market.MarketItemFull">
            <summary>
            API MarketItemFull object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.MarketItemFull.ViewsCount">
            <summary>
            Views number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.MarketItemFull.Likes">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.MarketItemFull.CanComment">
            <summary>
            Information whether current use can comment the item
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.MarketItemFull.CanRepost">
            <summary>
            Information whether current use can repost the item
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.MarketItemFull.Photos">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Market.Price">
            <summary>
            API Price object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.Price.Amount">
            <summary>
            Amount
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.Price.Currency">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.Price.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Market.Section">
            <summary>
            API Section object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.Section.Id">
            <summary>
            Section ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Market.Section.Name">
            <summary>
            Section name
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Messages.AttachmentsContainer">
            <summary>
            API AttachmentsContainer object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.AttachmentsContainer.MessageId">
            <summary>
            Message id
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.AttachmentsContainer.Attachment">
            <summary>
            Message id
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Messages.AttachmentsHistory">
            <summary>
            API AttachmentsHistory object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.AttachmentsHistory.Type">
            <summary>
            Attachments type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.AttachmentsHistory.Audio">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.AttachmentsHistory.Photo">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.AttachmentsHistory.Video">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.AttachmentsHistory.Link">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.AttachmentsHistory.Doc">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Messages.Chat">
            <summary>
            API Chat object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Chat.AdminId">
            <summary>
            Chat creator ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Chat.PushSettings">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Chat.Left">
            <summary>
            Shows that user has been left the chat
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Chat.Type">
            <summary>
            Chat type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Chat.Photo100">
            <summary>
            URL of the preview image with 100 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Chat.Kicked">
            <summary>
            Shows that user has been kicked from the chat
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Chat.Id">
            <summary>
            Chat ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Chat.Photo50">
            <summary>
            URL of the preview image with 50 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Chat.Photo200">
            <summary>
            URL of the preview image with 200 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Chat.Title">
            <summary>
            Chat title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Chat.Users">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Messages.ChatFull">
            <summary>
            API ChatFull object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.ChatFull.AdminId">
            <summary>
            Chat creator ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.ChatFull.PushSettings">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.ChatFull.Left">
            <summary>
            Shows that user has been left the chat
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.ChatFull.Type">
            <summary>
            Chat type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.ChatFull.Photo100">
            <summary>
            URL of the preview image with 100 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.ChatFull.Kicked">
            <summary>
            Shows that user has been kicked from the chat
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.ChatFull.Id">
            <summary>
            Chat ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.ChatFull.Photo50">
            <summary>
            URL of the preview image with 50 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.ChatFull.Photo200">
            <summary>
            URL of the preview image with 200 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.ChatFull.Title">
            <summary>
            Chat title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.ChatFull.Users">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Messages.ChatPushSettings">
            <summary>
            API ChatPushSettings object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.ChatPushSettings.Sound">
            <summary>
            Information whether the sound is on
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.ChatPushSettings.DisabledUntil">
            <summary>
            Time until that notifications are disabled
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Messages.Dialog">
            <summary>
            API Dialog object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Dialog.OutRead">
            <summary>
            ID of the last message read by the others
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Dialog.Unread">
            <summary>
            Information whether unread messages are in the dialog
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Dialog.InRead">
            <summary>
            ID of the last message read by current user
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Dialog.Message">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Messages.LastActivity">
            <summary>
            API LastActivity object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.LastActivity.Time">
            <summary>
            Time when user was online in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.LastActivity.Online">
            <summary>
            Information whether user is online
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Messages.LongpollMessages">
            <summary>
            API LongpollMessages object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.LongpollMessages.Count">
            <summary>
            Total number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.LongpollMessages.Items">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Messages.LongpollParams">
            <summary>
            API LongpollParams object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.LongpollParams.Server">
            <summary>
            Server URL
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.LongpollParams.Ts">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.LongpollParams.Key">
            <summary>
            Key
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Messages.Message">
            <summary>
            API Message object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Message.Geo">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Message.Photo200">
            <summary>
            URL of the preview image with 200px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Message.Photo50">
            <summary>
            URL of the preview image with 50px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Message.Id">
            <summary>
            Message ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Message.RandomId">
            <summary>
            ID used for sending messages. It returned only for outgoing messages
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Message.Deleted">
            <summary>
            Is it an deleted message
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Message.ChatId">
            <summary>
            Chat ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Message.ReadState">
            <summary>
            Information whether the messages is read
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Message.UserId">
            <summary>
            Message author's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Message.Title">
            <summary>
            Message title or chat title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Message.Photo100">
            <summary>
            URL of the preview image with 100px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Message.FromId">
            <summary>
            Message author's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Message.AdminId">
            <summary>
            Chat administrator ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Message.Date">
            <summary>
            Date when the message has been sent in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Message.FwdMessages">
            <summary>
            Forwarded messages
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Message.UsersCount">
            <summary>
            Chat users number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Message.Important">
            <summary>
            Is it an important message
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Message.Body">
            <summary>
            Message text
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Message.Out">
            <summary>
            Information whether the message is outcoming
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Message.Attachments">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Message.ChatActive">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Message.Action">
            <summary>
            Chat action type (or null if none type)
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Message.ActionText">
            <summary>
            Chat text (for chat_create and chat_title_update)
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.Message.ActionMid">
            <summary>
            User if (for chat_invite_user or chat_kick_user)
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Messages.MessageAttachment">
            <summary>
            API MessageAttachment object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.MessageAttachment.Sticker">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.MessageAttachment.Wall">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.MessageAttachment.Audio">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.MessageAttachment.WallReply">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.MessageAttachment.Video">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.MessageAttachment.Link">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.MessageAttachment.MarketMarketAlbum">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.MessageAttachment.Gift">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.MessageAttachment.Type">
            <summary>
            Attachment type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.MessageAttachment.Photo">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.MessageAttachment.Market">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.MessageAttachment.Doc">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Messages.UserXtrInvitedBy">
            <summary>
            API UserXtrInvitedBy object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Messages.UserXtrInvitedBy.InvitedBy">
            <summary>
            ID of the inviter
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Newsfeed.ItemAudio">
            <summary>
            API ItemAudio object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemAudio.Audio">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemAudio.PostId">
            <summary>
            Post ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Newsfeed.ItemAudioAudio">
            <summary>
            API ItemAudioAudio object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemAudioAudio.Count">
            <summary>
            Audios number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemAudioAudio.Items">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Newsfeed.ItemFriend">
            <summary>
            API ItemFriend object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemFriend.Friends">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Newsfeed.ItemNote">
            <summary>
            API ItemNote object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemNote.Notes">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Newsfeed.ItemNoteNotes">
            <summary>
            API ItemNoteNotes object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemNoteNotes.Count">
            <summary>
            Notes number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemNoteNotes.Items">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Newsfeed.ItemPhoto">
            <summary>
            API ItemPhoto object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemPhoto.PostId">
            <summary>
            Post ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemPhoto.Photos">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Newsfeed.ItemPhotoPhotos">
            <summary>
            API ItemPhotoPhotos object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemPhotoPhotos.Count">
            <summary>
            Photos number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemPhotoPhotos.Items">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Newsfeed.ItemPhotoTag">
            <summary>
            API ItemPhotoTag object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemPhotoTag.PhotoTags">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemPhotoTag.PostId">
            <summary>
            Post ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Newsfeed.ItemPhotoTagPhotoTags">
            <summary>
            API ItemPhotoTagPhotoTags object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemPhotoTagPhotoTags.Count">
            <summary>
            Tags number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemPhotoTagPhotoTags.Items">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Newsfeed.ItemTopic">
            <summary>
            API ItemTopic object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemTopic.Comments">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemTopic.Likes">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemTopic.PostId">
            <summary>
            Topic post ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemTopic.Text">
            <summary>
            Post text
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Newsfeed.ItemVideo">
            <summary>
            API ItemVideo object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemVideo.Video">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Newsfeed.ItemVideoVideo">
            <summary>
            API ItemVideoVideo object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemVideoVideo.Count">
            <summary>
            Tags number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemVideoVideo.Items">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Newsfeed.ItemWallpost">
            <summary>
            API ItemWallpost object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemWallpost.PostId">
            <summary>
            Post ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.ItemWallpost.SourceId">
            <summary>
            Post's Author
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Newsfeed.List">
            <summary>
            API List object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.List.NoReposts">
            <summary>
            Information whether reposts hiding is enabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.List.SourceIds">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.List.Id">
            <summary>
            List ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.List.Title">
            <summary>
            List title
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Newsfeed.NewsfeedNote">
            <summary>
            API NewsfeedNote object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.NewsfeedNote.Comments">
            <summary>
            Comments Number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.NewsfeedNote.Id">
            <summary>
            Note ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.NewsfeedNote.OwnerId">
            <summary>
            integer
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.NewsfeedNote.Title">
            <summary>
            Note title
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Newsfeed.NewsfeedPhoto">
            <summary>
            API NewsfeedPhoto object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.NewsfeedPhoto.Comments">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.NewsfeedPhoto.Likes">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.NewsfeedPhoto.CanComment">
            <summary>
            Information whether current user can comment the photo
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Newsfeed.NewsfeedPhoto.CanRepost">
            <summary>
            Information whether current user can repost the photo
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Notes.Note">
            <summary>
            API Note object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notes.Note.Comments">
            <summary>
            Comments number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notes.Note.Date">
            <summary>
            Date when the note has been created in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notes.Note.CanComment">
            <summary>
            Information whether current user can comment the note
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notes.Note.Id">
            <summary>
            Note ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notes.Note.OwnerId">
            <summary>
            Note owner's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notes.Note.TextWiki">
            <summary>
            Note text in wiki format
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notes.Note.Title">
            <summary>
            Note title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notes.Note.ViewUrl">
            <summary>
            URL of the page with note preview
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notes.Note.Text">
            <summary>
            Note text
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Notes.NoteComment">
            <summary>
            API NoteComment object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notes.NoteComment.ReplyTo">
            <summary>
            ID of replied comment
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notes.NoteComment.Date">
            <summary>
            Date when the comment has beed added in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notes.NoteComment.Uid">
            <summary>
            Comment author's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notes.NoteComment.Nid">
            <summary>
            Note ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notes.NoteComment.Id">
            <summary>
            Comment ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notes.NoteComment.Oid">
            <summary>
            Note ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notes.NoteComment.Message">
            <summary>
            Comment text
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Notifications.Feedback">
            <summary>
            API Feedback object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notifications.Feedback.ToId">
            <summary>
            Wall owner's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notifications.Feedback.Attachments">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notifications.Feedback.Likes">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notifications.Feedback.Id">
            <summary>
            Item ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notifications.Feedback.FromId">
            <summary>
            Reply author's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notifications.Feedback.Geo">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notifications.Feedback.Text">
            <summary>
            Reply text
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Notifications.Notification">
            <summary>
            API Notification object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notifications.Notification.Date">
            <summary>
            Date when the event has been occured
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notifications.Notification.Reply">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notifications.Notification.Type">
            <summary>
            Notification type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notifications.Notification.Feedback">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notifications.Notification.Parent">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Notifications.NotificationsComment">
            <summary>
            API NotificationsComment object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notifications.NotificationsComment.Date">
            <summary>
            Date when the comment has been added in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notifications.NotificationsComment.Id">
            <summary>
            Comment ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notifications.NotificationsComment.OwnerId">
            <summary>
            Author ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notifications.NotificationsComment.Topic">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notifications.NotificationsComment.Photo">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notifications.NotificationsComment.Video">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notifications.NotificationsComment.Post">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notifications.NotificationsComment.Text">
            <summary>
            Comment text
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Notifications.Reply">
            <summary>
            API Reply object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notifications.Reply.Date">
            <summary>
            Date when the reply has been created in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notifications.Reply.Id">
            <summary>
            Reply ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Notifications.Reply.Text">
            <summary>
            Reply text
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Oauth.Error">
            <summary>
            API Error object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Oauth.Error.RedirectUri">
            <summary>
            URI for validation
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Oauth.Error.ErrorString">
            <summary>
            Error type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Oauth.Error.ErrorDescription">
            <summary>
            Error description
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Orders.Amount">
            <summary>
            API Amount object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Orders.Amount.Currency">
            <summary>
            Currency name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Orders.Amount.Amounts">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Orders.AmountItem">
            <summary>
            API AmountItem object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Orders.AmountItem.Amount">
            <summary>
            Votes amount in user's currency
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Orders.AmountItem.Votes">
            <summary>
            Votes number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Orders.AmountItem.Description">
            <summary>
            Amount description
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Orders.Order">
            <summary>
            API Order object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Orders.Order.Amount">
            <summary>
            Amount
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Orders.Order.ReceiverId">
            <summary>
            Receiver ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Orders.Order.Id">
            <summary>
            Order ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Orders.Order.Item">
            <summary>
            Order item
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Orders.Order.AppOrderId">
            <summary>
            App order ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Orders.Order.CancelTransactionId">
            <summary>
            Cancel transaction ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Orders.Order.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Orders.Order.UserId">
            <summary>
            User ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Orders.Order.TransactionId">
            <summary>
            Transaction ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Orders.Order.Date">
            <summary>
            Date of creation in Unixtime
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Pages.Wikipage">
            <summary>
            API Wikipage object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.Wikipage.Views">
            <summary>
            Views number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.Wikipage.EditorName">
            <summary>
            Last editor name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.Wikipage.EditorId">
            <summary>
            Last editor ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.Wikipage.GroupId">
            <summary>
            Community ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.Wikipage.Id">
            <summary>
            Page ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.Wikipage.WhoCanEdit">
            <summary>
            Edit settings of the page
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.Wikipage.WhoCanView">
            <summary>
            View settings of the page
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.Wikipage.CreatorName">
            <summary>
            Page creator name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.Wikipage.Title">
            <summary>
            Page title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.Wikipage.CreatorId">
            <summary>
            Page creator ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Pages.WikipageFull">
            <summary>
            API WikipageFull object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.WikipageFull.EditorId">
            <summary>
            Last editor ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.WikipageFull.GroupId">
            <summary>
            Community ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.WikipageFull.Id">
            <summary>
            Page ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.WikipageFull.Edited">
            <summary>
            Date when the page has been edited in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.WikipageFull.WhoCanEdit">
            <summary>
            Edit settings of the page
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.WikipageFull.Source">
            <summary>
            Page content, wiki
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.WikipageFull.WhoCanView">
            <summary>
            View settings of the page
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.WikipageFull.CurrentUserCanEdit">
            <summary>
            Information whether current user can edit the page
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.WikipageFull.Title">
            <summary>
            Page title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.WikipageFull.ViewUrl">
            <summary>
            URL of the page preview
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.WikipageFull.CurrentUserCanEditAccess">
            <summary>
            Information whether current user can edit the page access settings
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.WikipageFull.Views">
            <summary>
            Views number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.WikipageFull.CreatorId">
            <summary>
            Page creator ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.WikipageFull.Html">
            <summary>
            Page content, HTML
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.WikipageFull.Created">
            <summary>
            Date when the page has been created in Unixtime
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Pages.WikipageVersion">
            <summary>
            API WikipageVersion object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.WikipageVersion.EditorName">
            <summary>
            Last editor name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.WikipageVersion.Length">
            <summary>
            Page size in bytes
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.WikipageVersion.Id">
            <summary>
            Version ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.WikipageVersion.EditorId">
            <summary>
            Last editor ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Pages.WikipageVersion.Edited">
            <summary>
            Date when the page has been edited in Unixtime
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Photos.CommentXtrPid">
            <summary>
            API CommentXtrPid object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.CommentXtrPid.ReplyToComment">
            <summary>
            Replied comment ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.CommentXtrPid.Attachments">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.CommentXtrPid.Date">
            <summary>
            Date when the comment has been added in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.CommentXtrPid.Id">
            <summary>
            Comment ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.CommentXtrPid.Pid">
            <summary>
            Photo ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.CommentXtrPid.ReplyToUser">
            <summary>
            Replied user ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.CommentXtrPid.FromId">
            <summary>
            Author ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.CommentXtrPid.Likes">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.CommentXtrPid.Text">
            <summary>
            Comment text
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Photos.MarketAlbumUploadResponse">
            <summary>
            API MarketAlbumUploadResponse object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.MarketAlbumUploadResponse.Hash">
            <summary>
            Uploading hash
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.MarketAlbumUploadResponse.Photo">
            <summary>
            Uploaded photo data
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.MarketAlbumUploadResponse.Server">
            <summary>
            Upload server number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.MarketAlbumUploadResponse.Gid">
            <summary>
            Community ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Photos.MarketUploadResponse">
            <summary>
            API MarketUploadResponse object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.MarketUploadResponse.CropData">
            <summary>
            Crop data
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.MarketUploadResponse.Server">
            <summary>
            Upload server number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.MarketUploadResponse.CropHash">
            <summary>
            Crop hash
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.MarketUploadResponse.Photo">
            <summary>
            Uploaded photo data
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.MarketUploadResponse.GroupId">
            <summary>
            Community ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.MarketUploadResponse.Hash">
            <summary>
            Uploading hash
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Photos.MessageUploadResponse">
            <summary>
            API MessageUploadResponse object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.MessageUploadResponse.Photo">
            <summary>
            Uploaded photo data
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.MessageUploadResponse.Server">
            <summary>
            Upload server number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.MessageUploadResponse.Hash">
            <summary>
            Uploading hash
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Photos.OwnerUploadResponse">
            <summary>
            API OwnerUploadResponse object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.OwnerUploadResponse.Photo">
            <summary>
            Uploaded photo data
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.OwnerUploadResponse.Server">
            <summary>
            Upload server number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.OwnerUploadResponse.Hash">
            <summary>
            Uploading hash
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Photos.Photo">
            <summary>
            API Photo object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.Photo.AlbumId">
            <summary>
            Album ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.Photo.Sizes">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.Photo.Id">
            <summary>
            Photo ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.Photo.Photo130">
            <summary>
            URL of image with 130 px width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.Photo.Long">
            <summary>
            Longitude
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.Photo.Lat">
            <summary>
            Latitude
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.Photo.UserId">
            <summary>
            ID of the user who have uploaded the photo
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.Photo.Photo604">
            <summary>
            URL of image with 604 px width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.Photo.Date">
            <summary>
            Date when uploaded
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.Photo.Text">
            <summary>
            Photo caption
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.Photo.AccessKey">
            <summary>
            Access key for the photo
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.Photo.Photo1280">
            <summary>
            URL of image with 1280 px width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.Photo.OwnerId">
            <summary>
            Photo owner's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.Photo.Photo807">
            <summary>
            URL of image with 807 px width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.Photo.Height">
            <summary>
            Original photo height
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.Photo.Photo75">
            <summary>
            URL of image with 75 px width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.Photo.Width">
            <summary>
            Original photo width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.Photo.PostId">
            <summary>
            Post ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Photos.PhotoAlbum">
            <summary>
            API PhotoAlbum object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoAlbum.Size">
            <summary>
            Photos number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoAlbum.Id">
            <summary>
            Photo album ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoAlbum.OwnerId">
            <summary>
            Album owner's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoAlbum.Description">
            <summary>
            Photo album description
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoAlbum.Updated">
            <summary>
            Date when the album has been updated last time in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoAlbum.Created">
            <summary>
            Date when the album has been created in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoAlbum.Title">
            <summary>
            Photo album title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoAlbum.Thumb">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Photos.PhotoAlbumFull">
            <summary>
            API PhotoAlbumFull object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoAlbumFull.ThumbSrc">
            <summary>
            URL of the thumb image
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoAlbumFull.Sizes">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoAlbumFull.Id">
            <summary>
            Photo album ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoAlbumFull.ThumbId">
            <summary>
            Thumb photo ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoAlbumFull.PrivacyView">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoAlbumFull.Title">
            <summary>
            Photo album title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoAlbumFull.Updated">
            <summary>
            Date when the album has been updated last time in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoAlbumFull.OwnerId">
            <summary>
            Album owner's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoAlbumFull.Description">
            <summary>
            Photo album description
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoAlbumFull.UploadByAdminsOnly">
            <summary>
            Information whether only community administrators can upload photos
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoAlbumFull.ThumbIsLast">
            <summary>
            Information whether the album thumb is last photo
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoAlbumFull.CommentsDisabled">
            <summary>
            Information whether album comments are disabled
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoAlbumFull.Created">
            <summary>
            Date when the album has been created in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoAlbumFull.PrivacyComment">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoAlbumFull.CanUpload">
            <summary>
            Information whether current user can upload photo to the album
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoAlbumFull.Size">
            <summary>
            Photos number
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Photos.PhotoFull">
            <summary>
            API PhotoFull object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoFull.CanComment">
            <summary>
            Information whether current user can comment the photo
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoFull.Comments">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoFull.Likes">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoFull.Tags">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoFull.Reposts">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Photos.PhotoFullXtrRealOffset">
            <summary>
            API PhotoFullXtrRealOffset object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoFullXtrRealOffset.RealOffset">
            <summary>
            Real position of the photo
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoFullXtrRealOffset.CanComment">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoFullXtrRealOffset.Comments">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoFullXtrRealOffset.Likes">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoFullXtrRealOffset.Tags">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoFullXtrRealOffset.Hidden">
            <summary>
            Returns if the photo is hidden above the wall
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoFullXtrRealOffset.Reposts">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Photos.PhotoSizes">
            <summary>
            API PhotoSizes object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoSizes.Src">
            <summary>
            URL of the image
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoSizes.Type">
            <summary>
            Size type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoSizes.Width">
            <summary>
            Width in px
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoSizes.Height">
            <summary>
            Height in px
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Photos.PhotoTag">
            <summary>
            API PhotoTag object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoTag.Date">
            <summary>
            Date when tag has been added in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoTag.Id">
            <summary>
            Tag ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoTag.Viewed">
            <summary>
            Information whether the tag is reviewed
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoTag.TaggedName">
            <summary>
            Tag description
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoTag.X">
            <summary>
            Coordinate X of the left upper corner
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoTag.Y2">
            <summary>
            Coordinate Y of the right lower corner
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoTag.UserId">
            <summary>
            Tagged user ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoTag.Y">
            <summary>
            Coordinate Y of the left upper corner
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoTag.PlacerId">
            <summary>
            ID of the tag creator
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoTag.X2">
            <summary>
            Coordinate X of the right lower corner
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Photos.PhotoUpload">
            <summary>
            API PhotoUpload object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoUpload.AlbumId">
            <summary>
            Album ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoUpload.UserId">
            <summary>
            User ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoUpload.UploadUrl">
            <summary>
            URL to upload photo
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Photos.PhotoUploadResponse">
            <summary>
            API PhotoUploadResponse object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoUploadResponse.Aid">
            <summary>
            Album ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoUploadResponse.Server">
            <summary>
            Upload server number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoUploadResponse.Hash">
            <summary>
            Uploading hash
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoUploadResponse.PhotosList">
            <summary>
            Uploaded photos data
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Photos.PhotoXtrRealOffset">
            <summary>
            API PhotoXtrRealOffset object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoXtrRealOffset.RealOffset">
            <summary>
            Real position of the photo
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoXtrRealOffset.Hidden">
            <summary>
            Returns if the photo is hidden above the wall
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Photos.PhotoXtrTagInfo">
            <summary>
            API PhotoXtrTagInfo object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoXtrTagInfo.TagId">
            <summary>
            Tag ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoXtrTagInfo.TagCreated">
            <summary>
            Date when tag has been added in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.PhotoXtrTagInfo.PlacerId">
            <summary>
            ID of the tag creator
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Photos.WallUploadResponse">
            <summary>
            API WallUploadResponse object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.WallUploadResponse.Photo">
            <summary>
            Uploaded photo data
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.WallUploadResponse.Server">
            <summary>
            Upload server number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Photos.WallUploadResponse.Hash">
            <summary>
            Uploading hash
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Places.Checkin">
            <summary>
            API Checkin object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.Checkin.Latitude">
            <summary>
            Place latitude
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.Checkin.Id">
            <summary>
            Checkin ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.Checkin.PlaceId">
            <summary>
            Place ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.Checkin.UserId">
            <summary>
            User ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.Checkin.Distance">
            <summary>
            Distance to the place
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.Checkin.PlaceCountry">
            <summary>
            Country ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.Checkin.Text">
            <summary>
            Comment text
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.Checkin.Longitude">
            <summary>
            Place longitude
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.Checkin.Date">
            <summary>
            Date when the checkin has been added in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.Checkin.PlaceType">
            <summary>
            Place type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.Checkin.PlaceTitle">
            <summary>
            Place title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.Checkin.PlaceCity">
            <summary>
            City ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.Checkin.PlaceIcon">
            <summary>
            URL of the place's icon
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Places.PlaceFull">
            <summary>
            API PlaceFull object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceFull.Address">
            <summary>
            Place address
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceFull.Latitude">
            <summary>
            Place latitude
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceFull.Checkins">
            <summary>
            Checkins number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceFull.Id">
            <summary>
            Place ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceFull.GroupId">
            <summary>
            Community ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceFull.Distance">
            <summary>
            Distance to the place
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceFull.Title">
            <summary>
            Place title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceFull.GroupPhoto">
            <summary>
            URL of the community's photo
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceFull.Country">
            <summary>
            Country ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceFull.Longitude">
            <summary>
            Place longitude
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceFull.Type">
            <summary>
            Place type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceFull.Created">
            <summary>
            Date of the place creation in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceFull.Icon">
            <summary>
            URL of the place's icon
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceFull.City">
            <summary>
            City ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Places.PlaceMin">
            <summary>
            API PlaceMin object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceMin.City">
            <summary>
            City ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceMin.Latitude">
            <summary>
            Place latitude
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceMin.Checkins">
            <summary>
            Checkins number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceMin.Address">
            <summary>
            Place address
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceMin.Id">
            <summary>
            Place ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceMin.Longitude">
            <summary>
            Place longitude
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceMin.Type">
            <summary>
            Place type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceMin.Created">
            <summary>
            Date of the place creation in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceMin.Icon">
            <summary>
            URL of the place's icon
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceMin.Title">
            <summary>
            Place title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.PlaceMin.Country">
            <summary>
            Country ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Places.Types">
            <summary>
            API Types object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.Types.Icon">
            <summary>
            URL of the place's icon
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.Types.Id">
            <summary>
            Place type ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Places.Types.Title">
            <summary>
            Place type title
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Polls.Answer">
            <summary>
            API Answer object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Polls.Answer.Rate">
            <summary>
            Answer rate in percents
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Polls.Answer.Votes">
            <summary>
            Votes number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Polls.Answer.Id">
            <summary>
            Answer ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Polls.Answer.Text">
            <summary>
            Answer text
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Polls.Poll">
            <summary>
            API Poll object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Polls.Poll.Created">
            <summary>
            Date when poll has been created in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Polls.Poll.Id">
            <summary>
            Poll ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Polls.Poll.OwnerId">
            <summary>
            Poll owner's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Polls.Poll.Anonymous">
            <summary>
            Information whether the pole is anonymous
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Polls.Poll.Answers">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Polls.Poll.Votes">
            <summary>
            Votes number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Polls.Poll.AnswerId">
            <summary>
            Current user's answer ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Polls.Poll.Question">
            <summary>
            Poll question
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Polls.Voters">
            <summary>
            API Voters object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Polls.Voters.Users">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Polls.Voters.AnswerId">
            <summary>
            Answer ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Polls.VotersUsers">
            <summary>
            API VotersUsers object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Polls.VotersUsers.Count">
            <summary>
            Votes number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Polls.VotersUsers.Items">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Search.Hint">
            <summary>
            API Hint object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Search.Hint.Profile">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Search.Hint.Type">
            <summary>
            Object type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Search.Hint.Description">
            <summary>
            Object description
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Search.Hint.Global">
            <summary>
            Information whether the object has been found globally
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Search.Hint.Section">
            <summary>
            Section title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Search.Hint.Group">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Secure.Level">
            <summary>
            API Level object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Secure.Level.LevelCode">
            <summary>
            Level
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Secure.Level.Uid">
            <summary>
            User ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Secure.SmsNotification">
            <summary>
            API SmsNotification object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Secure.SmsNotification.UserId">
            <summary>
            User ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Secure.SmsNotification.Date">
            <summary>
            Date when message has been sent in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Secure.SmsNotification.AppId">
            <summary>
            Application ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Secure.SmsNotification.Id">
            <summary>
            Notification ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Secure.SmsNotification.Message">
            <summary>
            Messsage text
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Secure.TokenChecked">
            <summary>
            API TokenChecked object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Secure.TokenChecked.Expire">
            <summary>
            Date when access_token will expire in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Secure.TokenChecked.Date">
            <summary>
            Date when access_token has been generated in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Secure.TokenChecked.UserId">
            <summary>
            User ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Secure.TokenChecked.Success">
            <summary>
            Returns if successfully processed
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Secure.Transaction">
            <summary>
            API Transaction object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Secure.Transaction.UidFrom">
            <summary>
            From ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Secure.Transaction.Date">
            <summary>
            Transaction date in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Secure.Transaction.Votes">
            <summary>
            Votes number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Secure.Transaction.Id">
            <summary>
            Transaction ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Secure.Transaction.UidTo">
            <summary>
            To ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Stats.Age">
            <summary>
            API Age object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.Age.Visitors">
            <summary>
            Visitors number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.Age.Value">
            <summary>
            Age interval
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Stats.City">
            <summary>
            API City object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.City.Visitors">
            <summary>
            Visitors number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.City.Name">
            <summary>
            City name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.City.Value">
            <summary>
            City ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Stats.Country">
            <summary>
            API Country object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.Country.Code">
            <summary>
            Country code
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.Country.Visitors">
            <summary>
            Visitors number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.Country.Name">
            <summary>
            Country name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.Country.Value">
            <summary>
            Country ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Stats.Period">
            <summary>
            API Period object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.Period.Sex">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.Period.Reach">
            <summary>
            Total reach
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.Period.SexAge">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.Period.ReachSubscribers">
            <summary>
            Subscribers reach
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.Period.Day">
            <summary>
            Day (YYYY-MM-DD)
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.Period.Countries">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.Period.Visitors">
            <summary>
            Visitors number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.Period.Views">
            <summary>
            Views number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.Period.Subscribed">
            <summary>
            Number of users subscribed
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.Period.Cities">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.Period.Age">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.Period.Unsubscribed">
            <summary>
            Number of users unsubscribed
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Stats.Sex">
            <summary>
            API Sex object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.Sex.Visitors">
            <summary>
            Visitors number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.Sex.Value">
            <summary>
            Sex
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Stats.SexAge">
            <summary>
            API SexAge object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.SexAge.Visitors">
            <summary>
            Visitors number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.SexAge.Value">
            <summary>
            Sex and age interval
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Stats.WallpostStat">
            <summary>
            API WallpostStat object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.WallpostStat.JoinGroup">
            <summary>
            People have joined the group
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.WallpostStat.ReachTotal">
            <summary>
            Total reach
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.WallpostStat.Unsubscribe">
            <summary>
            Unsubscribed members
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.WallpostStat.Hide">
            <summary>
            Hidings number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.WallpostStat.ReachSubscribers">
            <summary>
            Subscribers reach
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.WallpostStat.Links">
            <summary>
            Link clickthrough
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.WallpostStat.Report">
            <summary>
            Reports number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Stats.WallpostStat.ToGroup">
            <summary>
            Clickthrough to community
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Status.Status">
            <summary>
            API Status object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Status.Status.Audio">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Status.Status.Text">
            <summary>
            Status text
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Users.Career">
            <summary>
            API Career object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Career.From">
            <summary>
            From year
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Career.CityId">
            <summary>
            City ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Career.GroupId">
            <summary>
            Community ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Career.Position">
            <summary>
            Position
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Career.CountryId">
            <summary>
            Country ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Career.Until">
            <summary>
            Till year
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Users.CropPhoto">
            <summary>
            API CropPhoto object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.CropPhoto.Rect">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.CropPhoto.Photo">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.CropPhoto.Crop">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Users.CropPhotoCrop">
            <summary>
            API CropPhotoCrop object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.CropPhotoCrop.Y2">
            <summary>
            Coordinate Y of the right lower corner
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.CropPhotoCrop.X2">
            <summary>
            Coordinate X of the right lower corner
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.CropPhotoCrop.Y">
            <summary>
            Coordinate Y of the left upper corner
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.CropPhotoCrop.X">
            <summary>
            Coordinate X of the left upper corner
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Users.CropPhotoRect">
            <summary>
            API CropPhotoRect object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.CropPhotoRect.Y2">
            <summary>
            Coordinate Y of the right lower corner
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.CropPhotoRect.X2">
            <summary>
            Coordinate X of the right lower corner
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.CropPhotoRect.Y">
            <summary>
            Coordinate Y of the left upper corner
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.CropPhotoRect.X">
            <summary>
            Coordinate X of the left upper corner
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Users.Exports">
            <summary>
            API Exports object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Exports.Twitter">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Exports.Facebook">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Exports.Livejournal">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Users.LastSeen">
            <summary>
            API LastSeen object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.LastSeen.Platform">
            <summary>
            Type of the platform that used for the last authorization
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.LastSeen.Time">
            <summary>
            Last visit date (in Unix time)
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Users.Military">
            <summary>
            API Military object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Military.Unit">
            <summary>
            Unit name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Military.UnitId">
            <summary>
            Unit ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Military.Until">
            <summary>
            Till year
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Military.CountryId">
            <summary>
            Country ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Military.From">
            <summary>
            From year
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Users.Occupation">
            <summary>
            API Occupation object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Occupation.Id">
            <summary>
            ID of school, university, company group
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Occupation.Type">
            <summary>
            Type of occupation
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Occupation.Name">
            <summary>
            Name of occupation
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Users.Personal">
            <summary>
            API Personal object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Personal.Smoking">
            <summary>
            User's views on smoking
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Personal.LifeMain">
            <summary>
            User's personal priority in life
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Personal.Religion">
            <summary>
            User's religion
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Personal.Langs">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Personal.Alcohol">
            <summary>
            User's views on alcohol
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Personal.Political">
            <summary>
            User's political views
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Personal.PeopleMain">
            <summary>
            User's personal priority in people
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Personal.InspiredBy">
            <summary>
            User's inspired by
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Users.Relative">
            <summary>
            API Relative object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Relative.Type">
            <summary>
            Relative type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.Relative.Id">
            <summary>
            Relative ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Users.School">
            <summary>
            API School object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.School.YearTo">
            <summary>
            Year the user finished to study
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.School.YearFrom">
            <summary>
            Year the user started to study
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.School.Id">
            <summary>
            School ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.School.Class">
            <summary>
            School class letter
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.School.Name">
            <summary>
            School name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.School.YearGraduated">
            <summary>
            Graduation year
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.School.Type">
            <summary>
            School type ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.School.TypeStr">
            <summary>
            School type name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.School.Country">
            <summary>
            Country ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.School.City">
            <summary>
            City ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Users.University">
            <summary>
            API University object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.University.FacultyName">
            <summary>
            Faculty name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.University.Id">
            <summary>
            University ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.University.ChairName">
            <summary>
            Chair name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.University.Name">
            <summary>
            University name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.University.Chair">
            <summary>
            Chair ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.University.EducationForm">
            <summary>
            Education form
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.University.Faculty">
            <summary>
            Faculty ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.University.Graduation">
            <summary>
            Graduation year
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.University.EducationStatus">
            <summary>
            Education status
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.University.Country">
            <summary>
            Country ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.University.City">
            <summary>
            City ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Users.User">
            <summary>
            API User object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.User.Sex">
            <summary>
            User sex
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.User.Photo50">
            <summary>
            URL of square photo of the user with 50 pixels in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.User.Online">
            <summary>
            Information whether the user is online
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.User.ScreenName">
            <summary>
            Domain name of the user's page
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.User.Photo100">
            <summary>
            URL of square photo of the user with 100 pixels in width
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Users.UserBroadcast">
            <summary>
            API UserBroadcast object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserBroadcast.StatusAudio">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Users.UserCounters">
            <summary>
            API UserCounters object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserCounters.OnlineFriends">
            <summary>
            Online friends number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserCounters.Albums">
            <summary>
            Albums number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserCounters.UserPhotos">
            <summary>
            Number of photos with user
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserCounters.Subscriptions">
            <summary>
            Subscriptions number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserCounters.Gifts">
            <summary>
            Gifts number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserCounters.UserVideos">
            <summary>
            Number of videos with user
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserCounters.Followers">
            <summary>
            Followers number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserCounters.Pages">
            <summary>
            Public pages number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserCounters.Videos">
            <summary>
            Videos number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserCounters.Photos">
            <summary>
            Photos number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserCounters.Audios">
            <summary>
            Audios number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserCounters.Friends">
            <summary>
            Friends number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserCounters.Notes">
            <summary>
            Notes number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserCounters.Groups">
            <summary>
            Communities number
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Users.UserFull">
            <summary>
            API UserFull object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Relatives">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Military">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.CropPhoto">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Blacklisted">
            <summary>
            Information whether current user is in the requested user's blacklist.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Schools">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.PhotoId">
            <summary>
            ID of the user's main photo
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.PhotoMaxOrig">
            <summary>
            URL of user's photo of maximum size
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.IsFriend">
            <summary>
            Information whether the user is a friend of current user
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.CommonCount">
            <summary>
            Number of common friends with current user
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.University">
            <summary>
            University ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.StatusAudio">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Games">
            <summary>
            User's favorite games
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.HasPhoto">
            <summary>
            Information whether the user has main photo
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.RelationPartner">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.CanSeeAudio">
            <summary>
            Information whether current user can see the user's audio
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Skype">
            <summary>
            User's Skype nickname
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.LastSeen">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.City">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.UniversityName">
            <summary>
            University name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Status">
            <summary>
            User's status
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Photo200">
            <summary>
            URL of square photo of the user with 200 pixels in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Relation">
            <summary>
            User relationship status
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Timezone">
            <summary>
            User's timezone
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Instagram">
            <summary>
            User's Instagram account
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Exports">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.MaidenName">
            <summary>
            User maiden name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Music">
            <summary>
            User's favorite music
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.About">
            <summary>
            About me field
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Bdate">
            <summary>
            User's date of birth
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.WallComments">
            <summary>
            Information whether current user can comment wall posts
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.BlacklistedByMe">
            <summary>
            Information whether the requested user is in current user's blacklist
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Universities">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Career">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.HomeTown">
            <summary>
            User hometown
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Personal">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Occupation">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.IsFavorite">
            <summary>
            Information whether the requested user is in faves of current user
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Domain">
            <summary>
            Domain name of the user's page
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Photo200Orig">
            <summary>
            URL of user's photo with 200 pixels in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.IsHiddenFromFeed">
            <summary>
            Information whether the requested user is hidden from current user's newsfeed
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.EducationForm">
            <summary>
            Education form
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Movies">
            <summary>
            User's favorite movies
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.CanPost">
            <summary>
            Information whether current user can post on the user's wall
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Livejournal">
            <summary>
            User's Livejournal account
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.PhotoMax">
            <summary>
            URL of square photo of the user with maximum width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.FriendStatus">
            <summary>
            Friend status for current user
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.MobilePhone">
            <summary>
            Information whether current user can see
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.FacultyName">
            <summary>
            Faculty name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.EducationStatus">
            <summary>
            User's education status
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Photo400Orig">
            <summary>
            URL of user's photo with 400 pixels in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Books">
            <summary>
            User's favorite books
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.FollowersCount">
            <summary>
            Number of user's followers
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Graduation">
            <summary>
            Graduation year
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.CanSendFriendRequest">
            <summary>
            Information whether current user can send a friend request
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Facebook">
            <summary>
            User's Facebook account
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.CanSeeAllPosts">
            <summary>
            Information whether current user can see other users' audio on the wall
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.HasMobile">
            <summary>
            Information whether the user specified his phone number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Twitter">
            <summary>
            User's Twitter account
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.HomePhone">
            <summary>
            User's mobile phone number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.CanWritePrivateMessage">
            <summary>
            Information whether current user can write private message
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Faculty">
            <summary>
            Faculty ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Nickname">
            <summary>
            User nickname
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Verified">
            <summary>
            Information whether the user is verified
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Activities">
            <summary>
            User's activities
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Quotes">
            <summary>
            Favorite quotes
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.FacebookName">
            <summary>
            User's Facebook name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Site">
            <summary>
            User's website
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Activity">
            <summary>
            User's status
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Tv">
            <summary>
            User's favorite tv shows
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Country">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFull.Interests">
            <summary>
            User's interests
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Users.UserFullXtrType">
            <summary>
            API UserFullXtrType object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserFullXtrType.Type">
            <summary>
            Object type
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Users.UserLim">
            <summary>
            API UserLim object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserLim.Photo">
            <summary>
            URL of square photo of the user with 50 pixels in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserLim.Id">
            <summary>
            User ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserLim.NameGen">
            <summary>
            User name in genitive declension
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserLim.Name">
            <summary>
            User name and last name
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Users.UserMin">
            <summary>
            API UserMin object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserMin.LastName">
            <summary>
            User last name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserMin.FirstName">
            <summary>
            User first name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserMin.Hidden">
            <summary>
            Returns if a profile is hidden.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserMin.Id">
            <summary>
            User ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserMin.Deactivated">
            <summary>
            Returns if a profile is deleted or blocked
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Users.UsersArray">
            <summary>
            API UsersArray object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UsersArray.Count">
            <summary>
            Users number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UsersArray.Items">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Users.UserXtrCounters">
            <summary>
            API UserXtrCounters object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserXtrCounters.Counters">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Users.UserXtrType">
            <summary>
            API UserXtrType object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Users.UserXtrType.Type">
            <summary>
            Object type
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Utils.City">
            <summary>
            API City object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Utils.City.CityId">
            <summary>
            City id in city list.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Utils.City.Views">
            <summary>
            Views count.
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Utils.Country">
            <summary>
            API Country object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Utils.Country.CountryId">
            <summary>
            Country id in country list.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Utils.Country.Views">
            <summary>
            Views  count.
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Utils.DomainResolved">
            <summary>
            API DomainResolved object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Utils.DomainResolved.ObjectId">
            <summary>
            Object ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Utils.DomainResolved.Type">
            <summary>
            Object type
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Utils.LinkChecked">
            <summary>
            API LinkChecked object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Utils.LinkChecked.Status">
            <summary>
            Link status
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Utils.LinkChecked.Link">
            <summary>
            Link URL
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Utils.LinkInfo">
            <summary>
            API LinkInfo object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Utils.LinkInfo.ShortUrl">
            <summary>
            Shotened url.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Utils.LinkInfo.Url">
            <summary>
            Full URL. 
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Utils.LinkInfo.Key">
            <summary>
            Link key (characters after "vk.cc"); 
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Utils.LinkInfo.AccessKey">
            <summary>
            Access key for private stats.
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Utils.LinkInfoFull">
            <summary>
            API LinkInfoFull object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Utils.LinkInfoFull.Timestamp">
            <summary>
            Creation time in Unixtime.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Utils.LinkInfoFull.Views">
            <summary>
            Views count; 
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Utils.LinkInfoXtrStats">
            <summary>
            API LinkInfoXtrStats object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Utils.LinkInfoXtrStats.SexAge">
            <summary>
            Sex and age info.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Utils.LinkInfoXtrStats.Countries">
            <summary>
            Countries list.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Utils.LinkInfoXtrStats.Cities">
            <summary>
            Cities list.
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Utils.SexAge">
            <summary>
            API SexAge object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Utils.SexAge.AgeRange">
            <summary>
            Age denotation. 
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Utils.SexAge.Female">
            <summary>
            Views by female users.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Utils.SexAge.Male">
            <summary>
            Views by male users.
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Video.CatBlock">
            <summary>
            API CatBlock object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatBlock.Items">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatBlock.Id">
            <summary>
            Block ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatBlock.Name">
            <summary>
            Block name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatBlock.CanHide">
            <summary>
            Information whether the block can be hidden
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatBlock.Type">
            <summary>
            Block type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatBlock.Next">
            <summary>
            New value for _from_ parameter
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatBlock.View">
            <summary>
            Type of view
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Video.CatElement">
            <summary>
            API CatElement object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatElement.Count">
            <summary>
            Videos number (for album)
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatElement.Title">
            <summary>
            Element title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatElement.Duration">
            <summary>
            Duration in seconds
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatElement.Id">
            <summary>
            Element ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatElement.Photo130">
            <summary>
            URL of the preview image with 130 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatElement.CanEdit">
            <summary>
            Information whether current user can edit the video
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatElement.IsPrivate">
            <summary>
            Information whether the video is private
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatElement.Date">
            <summary>
            Date when the element has been created
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatElement.Photo320">
            <summary>
            URL of the preview image with 320 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatElement.Photo800">
            <summary>
            URL of the preview image with 800 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatElement.Views">
            <summary>
            Views number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatElement.Comments">
            <summary>
            Comments number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatElement.Photo160">
            <summary>
            URL of the preview image with 160 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatElement.Type">
            <summary>
            Element type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatElement.OwnerId">
            <summary>
            Element owner's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatElement.Description">
            <summary>
            Element description
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatElement.UpdatedTime">
            <summary>
            Date of last update (for album) in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatElement.CanAdd">
            <summary>
            Information whether current user can add the video
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.CatElement.Photo640">
            <summary>
            URL of the preview image with 640 px in width
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Video.SaveResult">
            <summary>
            API SaveResult object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.SaveResult.OwnerId">
            <summary>
            Video owner ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.SaveResult.Title">
            <summary>
            Video title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.SaveResult.UploadUrl">
            <summary>
            URL for the video uploading
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.SaveResult.Description">
            <summary>
            Video description
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.SaveResult.VideoId">
            <summary>
            Video ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Video.UploadResponse">
            <summary>
            API UploadResponse object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.UploadResponse.VideoId">
            <summary>
            Video ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.UploadResponse.Size">
            <summary>
            Video size
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Video.Video">
            <summary>
            API Video object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.Video.Title">
            <summary>
            Video title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.Video.Duration">
            <summary>
            Video duration in seconds
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.Video.Id">
            <summary>
            Video ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.Video.Photo130">
            <summary>
            URL of the preview image with 130 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.Video.AddingDate">
            <summary>
            Date when the video has been added in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.Video.AccessKey">
            <summary>
            Video access key
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.Video.CanAdd">
            <summary>
            Information whether current user can add the video
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.Video.CanEdit">
            <summary>
            Information whether current user can edit the video
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.Video.Photo320">
            <summary>
            URL of the preview image with 320 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.Video.Photo800">
            <summary>
            URL of the preview image with 800 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.Video.Views">
            <summary>
            Number of views
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.Video.Comments">
            <summary>
            Number of comments
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.Video.Date">
            <summary>
            Date when video has been uploaded in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.Video.OwnerId">
            <summary>
            Video owner ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.Video.Description">
            <summary>
            Video description
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.Video.Files">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.Video.Live">
            <summary>
            Returns if the video is live translation
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.Video.Player">
            <summary>
            URL of the page with a player that can be used to play the video in the browser.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.Video.Processing">
            <summary>
            Returns if the video is processing
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Video.VideoAlbum">
            <summary>
            API VideoAlbum object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoAlbum.Id">
            <summary>
            Album ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoAlbum.OwnerId">
            <summary>
            Album owner's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoAlbum.Title">
            <summary>
            Album title
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Video.VideoAlbumFull">
            <summary>
            API VideoAlbumFull object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoAlbumFull.Count">
            <summary>
            Total number of videos in album
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoAlbumFull.Photo160">
            <summary>
            URL of the preview image with 160px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoAlbumFull.Id">
            <summary>
            Album ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoAlbumFull.OwnerId">
            <summary>
            Album owner's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoAlbumFull.Photo320">
            <summary>
            URL of the preview image with 320px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoAlbumFull.IsSystem">
            <summary>
            Information whether album is system
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoAlbumFull.UpdatedTime">
            <summary>
            Date when the album has been updated last time in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoAlbumFull.Title">
            <summary>
            Album title
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Video.VideoFiles">
            <summary>
            API VideoFiles object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoFiles.Mp240">
            <summary>
            URL of the mpeg4 file with 240p quality
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoFiles.Mp360">
            <summary>
            URL of the mpeg4 file with 360p quality
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoFiles.Mp720">
            <summary>
            URL of the mpeg4 file with 720p quality
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoFiles.External">
            <summary>
            URL of the external player
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoFiles.Mp480">
            <summary>
            URL of the mpeg4 file with 480p quality
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Video.VideoFull">
            <summary>
            API VideoFull object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoFull.CanComment">
            <summary>
            Information whether current user can comment the video
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoFull.PrivacyComment">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoFull.Repeat">
            <summary>
            Information whether the video is repeated
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoFull.PrivacyView">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoFull.CanRepost">
            <summary>
            Information whether current user can comment the video
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoFull.Likes">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Video.VideoTag">
            <summary>
            API VideoTag object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTag.Date">
            <summary>
            Date when tag has been added in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTag.Id">
            <summary>
            Tag ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTag.Viewed">
            <summary>
            Information whether tha tag is reviewed
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTag.TaggedName">
            <summary>
            Tag description
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTag.UserId">
            <summary>
            Tagged user ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTag.PlacerId">
            <summary>
            ID of the tag creator
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Video.VideoTagInfo">
            <summary>
            API VideoTagInfo object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTagInfo.Id">
            <summary>
            Video ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTagInfo.Photo130">
            <summary>
            URL of the preview image with 130 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTagInfo.AddingDate">
            <summary>
            Date when the video has been added in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTagInfo.CanAdd">
            <summary>
            Information whether current user can add the video
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTagInfo.Live">
            <summary>
            Returns if the video is live translation
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTagInfo.Player">
            <summary>
            URL of the page with a player that can be used to play the video in the browser.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTagInfo.Comments">
            <summary>
            Number of comments
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTagInfo.CanEdit">
            <summary>
            Information whether current user can edit the video
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTagInfo.Description">
            <summary>
            Video description
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTagInfo.Processing">
            <summary>
            Returns if the video is processing
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTagInfo.Duration">
            <summary>
            Video duration in seconds
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTagInfo.TagId">
            <summary>
            Tag ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTagInfo.AccessKey">
            <summary>
            Video access key
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTagInfo.TagCreated">
            <summary>
            Date when tag has been added in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTagInfo.Title">
            <summary>
            Video title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTagInfo.PlacerId">
            <summary>
            ID of the tag creator
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTagInfo.Photo800">
            <summary>
            URL of the preview image with 800 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTagInfo.Views">
            <summary>
            Number of views
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTagInfo.Photo320">
            <summary>
            URL of the preview image with 320 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTagInfo.OwnerId">
            <summary>
            Video owner ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTagInfo.Date">
            <summary>
            Date when video has been uploaded in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Video.VideoTagInfo.Files">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Wall.AppPost">
            <summary>
            API AppPost object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.AppPost.Photo604">
            <summary>
            URL of the preview image with 604 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.AppPost.Id">
            <summary>
            Application ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.AppPost.Photo130">
            <summary>
            URL of the preview image with 130 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.AppPost.Name">
            <summary>
            Application name
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Wall.AttachedNote">
            <summary>
            API AttachedNote object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.AttachedNote.Comments">
            <summary>
            Comments number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.AttachedNote.Date">
            <summary>
            Date when the note has been created in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.AttachedNote.ViewUrl">
            <summary>
            URL of the page with note preview
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.AttachedNote.Id">
            <summary>
            Note ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.AttachedNote.OwnerId">
            <summary>
            Note owner's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.AttachedNote.Title">
            <summary>
            Note title
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.AttachedNote.ReadComments">
            <summary>
            Read comments number
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Wall.CommentAttachment">
            <summary>
            API CommentAttachment object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.CommentAttachment.MarketMarketAlbum">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.CommentAttachment.Page">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.CommentAttachment.Type">
            <summary>
            Attachment type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.CommentAttachment.Market">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.CommentAttachment.Note">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.CommentAttachment.Sticker">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.CommentAttachment.Audio">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.CommentAttachment.Photo">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.CommentAttachment.Video">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.CommentAttachment.Link">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.CommentAttachment.Doc">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Wall.Graffiti">
            <summary>
            API Graffiti object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.Graffiti.Photo200">
            <summary>
            URL of the preview image with 200 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.Graffiti.Id">
            <summary>
            Graffiti ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.Graffiti.OwnerId">
            <summary>
            Graffiti owner's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.Graffiti.Photo586">
            <summary>
            URL of the preview image with 586 px in width
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Wall.PostedPhoto">
            <summary>
            API PostedPhoto object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.PostedPhoto.Photo604">
            <summary>
            URL of the preview image with 604 px in width
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.PostedPhoto.Id">
            <summary>
            Photo ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.PostedPhoto.OwnerId">
            <summary>
            Photo owner's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.PostedPhoto.Photo130">
            <summary>
            URL of the preview image with 130 px in width
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Wall.PostSource">
            <summary>
            API PostSource object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.PostSource.Platform">
            <summary>
            Platform name
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.PostSource.Data">
            <summary>
            Additional data
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.PostSource.Url">
            <summary>
            URL to an external site used to publish the post
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.PostSource.Type">
            <summary>
            Type of post source
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Wall.WallComment">
            <summary>
            API WallComment object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallComment.ReplyToComment">
            <summary>
            Replied comment ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallComment.Attachments">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallComment.Date">
            <summary>
            Date when the comment has been added in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallComment.Id">
            <summary>
            Comment ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallComment.ReplyToUser">
            <summary>
            Replied user ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallComment.RealOffset">
            <summary>
            Real position of the comment
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallComment.FromId">
            <summary>
            Author ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallComment.Likes">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallComment.Text">
            <summary>
            Comment text
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Wall.Wallpost">
            <summary>
            API Wallpost object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.Wallpost.Geo">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.Wallpost.Attachments">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.Wallpost.Date">
            <summary>
            Date of publishing in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.Wallpost.Id">
            <summary>
            Post ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.Wallpost.OwnerId">
            <summary>
            Wall owner's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.Wallpost.PostSource">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.Wallpost.Text">
            <summary>
            Post text
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.Wallpost.PostType">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.Wallpost.SignerId">
            <summary>
            Post signer ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.Wallpost.FromId">
            <summary>
            Post author ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Wall.WallpostAttached">
            <summary>
            API WallpostAttached object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostAttached.ToId">
            <summary>
            Post addresse
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostAttached.CopyText">
            <summary>
            Repost comment
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostAttached.CopyOwnerId">
            <summary>
            Source post owner's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostAttached.CopyPostId">
            <summary>
            Source post ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Wall.WallpostAttachment">
            <summary>
            API WallpostAttachment object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostAttachment.Market">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostAttachment.Graffiti">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostAttachment.Note">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostAttachment.Audio">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostAttachment.Video">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostAttachment.Link">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostAttachment.App">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostAttachment.MarketMarketAlbum">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostAttachment.Poll">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostAttachment.PostedPhoto">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostAttachment.Type">
            <summary>
            Attachment type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostAttachment.Page">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostAttachment.PhotosList">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostAttachment.Album">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostAttachment.Photo">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostAttachment.Doc">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Wall.WallpostFull">
            <summary>
            API WallpostFull object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostFull.CreatedBy">
            <summary>
            Post creator ID (if post still can be edited)
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostFull.CopyHistory">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostFull.CanEdit">
            <summary>
            Information whether current user can edit the post
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostFull.IsPinned">
            <summary>
            Information whether the post is pinned
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostFull.Comments">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostFull.CanDelete">
            <summary>
            Information whether current user can delete the post
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostFull.CanPin">
            <summary>
            Information whether current user can pin the post
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostFull.Likes">
            <summary>
            Info about post likes count
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostFull.Views">
            <summary>
            Info about post views count
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostFull.Reposts">
            <summary>
            Info about post reposts count
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Wall.WallpostToId">
            <summary>
            API WallpostToId object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostToId.ToId">
            <summary>
            Wall owner's ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostToId.Geo">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostToId.Likes">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostToId.Id">
            <summary>
            Post ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostToId.Reposts">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostToId.CopyOwnerId">
            <summary>
            ID of the source post owner
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostToId.FromId">
            <summary>
            Post author ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostToId.PostType">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostToId.Attachments">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostToId.Comments">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostToId.Date">
            <summary>
            Date of publishing in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostToId.CopyPostId">
            <summary>
            ID of the source post
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostToId.PostSource">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostToId.PostId">
            <summary>
            wall post ID (if comment)
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostToId.Text">
            <summary>
            Post text
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Wall.WallpostToId.SignerId">
            <summary>
            Post signer ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Widgets.CommentMedia">
            <summary>
            API CommentMedia object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.CommentMedia.ItemId">
            <summary>
            Media item ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.CommentMedia.ThumbSrc">
            <summary>
            URL of the preview image (type=photo only)
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.CommentMedia.Type">
            <summary>
            Media type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.CommentMedia.OwnerId">
            <summary>
            Media owner's ID
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Widgets.CommentReplies">
            <summary>
            API CommentReplies object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.CommentReplies.Count">
            <summary>
            Comments number
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.CommentReplies.CanPost">
            <summary>
            Information whether current user can comment the post
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.CommentReplies.Replies">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Widgets.CommentRepliesItem">
            <summary>
            API CommentRepliesItem object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.CommentRepliesItem.Likes">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.CommentRepliesItem.User">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.CommentRepliesItem.Uid">
            <summary>
            User ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.CommentRepliesItem.Date">
            <summary>
            Date when the comment has been added in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.CommentRepliesItem.Cid">
            <summary>
            Comment ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.CommentRepliesItem.Text">
            <summary>
            Comment text
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Widgets.WidgetComment">
            <summary>
            API WidgetComment object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.WidgetComment.ToId">
            <summary>
            Wall owner
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.WidgetComment.Likes">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.WidgetComment.User">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.WidgetComment.Id">
            <summary>
            Comment ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.WidgetComment.CanDelete">
            <summary>
            Information whether current user can delete the comment
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.WidgetComment.FromId">
            <summary>
            Comment author ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.WidgetComment.Media">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.WidgetComment.Attachments">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.WidgetComment.Comments">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.WidgetComment.Date">
            <summary>
            Date when the comment has been added in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.WidgetComment.PostSource">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.WidgetComment.Text">
            <summary>
            Comment text
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.WidgetComment.PostType">
            <summary>
            Post type
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.WidgetComment.Reposts">
            <summary>
            Property
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Widgets.WidgetLikes">
            <summary>
            API WidgetLikes object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.WidgetLikes.Count">
            <summary>
            Likes number
            </summary>
        </member>
        <member name="T:VkLibrary.Core.Types.Widgets.WidgetPage">
            <summary>
            API WidgetPage object.
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.WidgetPage.Comments">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.WidgetPage.Likes">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.WidgetPage.Id">
            <summary>
            Page ID
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.WidgetPage.Description">
            <summary>
            Page description
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.WidgetPage.Date">
            <summary>
            Date when widgets on the page has been initialized firstly in Unixtime
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.WidgetPage.PageId">
            <summary>
            page_id parameter value
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.WidgetPage.Photo">
            <summary>
            URL of the preview image
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.WidgetPage.Url">
            <summary>
            Page absolute URL
            </summary>
        </member>
        <member name="P:VkLibrary.Core.Types.Widgets.WidgetPage.Title">
            <summary>
            Page title
            </summary>
        </member>
        <member name="T:VkLibrary.Core.UploadHelper">
            <summary>
            API methods that help with photos / docs / audios uploading.
            More info: https://vk.com/dev/upload_files
            </summary>
        </member>
        <member name="M:VkLibrary.Core.UploadHelper.PostAsync``1(System.Uri,System.Byte[],System.String,System.String)">
            <summary>
            Async POST request.
            </summary>
            <param name="uri">Request uri</param>
            <param name="bytes">Bytes</param>
            <param name="type">Type (file/photo/audio/etc.)</param>
            <param name="fileName">File's name</param>
            <returns>String response</returns>
        </member>
        <member name="M:VkLibrary.Core.UploadHelper.PostMultipleAsync``1(System.Uri,System.Collections.Generic.Dictionary{System.String,System.Byte[]})">
            <summary>
            Async POST request with multiple data entries.
            </summary>
            <param name="uri">Server uri</param>
            <param name="files">Files dict. Key is file name, value is file itself.</param>
            <returns>String response</returns>
        </member>
        <member name="M:VkLibrary.Core.UploadHelper.UploadPhotos(System.String,System.Collections.Generic.Dictionary{System.String,System.Byte[]})">
            <summary>
            Upload multiple photos to vk servers.
            </summary>
            <param name="url">Server url</param>
            <param name="files">Files name-bytes pairs</param>
        </member>
        <member name="M:VkLibrary.Core.UploadHelper.UploadMessagesPhoto(System.String,System.String,System.Byte[])">
            <summary>
            Uploads a photo to conversation.
            </summary>
            <param name="url">Server url</param>
            <param name="fileName">File name</param>
            <param name="bytes">Photo bytes</param>
        </member>
        <member name="M:VkLibrary.Core.UploadHelper.UploadDocument(System.String,System.String,System.Byte[])">
            <summary>
            Uploads document to vk.
            </summary>
            <param name="url">Server url</param>
            <param name="fileName">File name</param>
            <param name="bytes">Doc bytes</param>
        </member>
        <member name="M:VkLibrary.Core.UploadHelper.UploadVideo(System.String,System.String,System.Byte[])">
            <summary>
            Uploads video to vk.
            </summary>
            <param name="url">Server url</param>
            <param name="fileName">File name</param>
            <param name="bytes">Video bytes</param>
        </member>
        <member name="M:VkLibrary.Core.UploadHelper.UploadAudio(System.String,System.String,System.Byte[])">
            <summary>
            Uploads an MP3 audio to vk.
            </summary>
            <param name="url">Upload url</param>
            <param name="fileName">File name</param>
            <param name="bytes">Audio bytes</param>
        </member>
        <member name="T:VkLibrary.Core.ParseJson">
            <summary>
            Determines how the library should parse JSONs received from API servers.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.ParseJson.FromStream">
            <summary>
            To minimize memory usage and the number of strings allocated in memory,
            Json.NET supports serializing and deserializing directly from a stream.
            Use this in production for better performance.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.ParseJson.FromString">
            <summary>
            Loads JSON into a string, logs it using Logger, and then deserializes. 
            Use this for testing purposes only.
            </summary>
        </member>
        <member name="T:VkLibrary.Core.RequestMethod">
            <summary>
            Determines which request method should be used when sending queries to Vkontakte API.
            GET option is generally a good choice for testing and debugging as GET queries are
            easy to read and understand. But when sending LARGE objects to VK API servers 
            consider using POST option.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.RequestMethod.Get">
            <summary>
            Use GET method when querying VK servers.
            </summary>
        </member>
        <member name="F:VkLibrary.Core.RequestMethod.Post">
            <summary>
            Use POST method when querying VK servers.
            </summary>
        </member>
    </members>
</doc>
